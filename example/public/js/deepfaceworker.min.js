(()=>{var t={9817:(t,e,n)=>{"use strict";n.r(e),n.d(e,{load:()=>d,BlazeFaceModel:()=>h});var r=n(3976),s=n(5965);function i(t,e,n,r){return new(n||(n=Promise))((function(s,i){function o(t){try{u(r.next(t))}catch(t){i(t)}}function a(t){try{u(r.throw(t))}catch(t){i(t)}}function u(t){t.done?s(t.value):new n((function(e){e(t.value)})).then(o,a)}u((r=r.apply(t,e||[])).next())}))}function o(t,e){var n,r,s,i,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(s=2&i[0]?r.return:i[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,i[1])).done)return s;switch(r=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,r=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(s=(s=o.trys).length>0&&s[s.length-1])&&(6===i[0]||2===i[0])){o=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){o.label=i[1];break}if(6===i[0]&&o.label<s[1]){o.label=s[1],s=i;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(i);break}s[2]&&o.ops.pop(),o.trys.pop();continue}i=e.call(t,o)}catch(t){i=[6,t],r=0}finally{n=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}}var a=function(t){return{startEndTensor:t,startPoint:(0,r.tPi)(t,[0,0],[-1,2]),endPoint:(0,r.tPi)(t,[0,2],[-1,2])}},u={strides:[8,16],anchors:[2,6]};function c(t,e){var n,s,i;if(t.topLeft instanceof r.esB&&t.bottomRight instanceof r.esB){var o=(0,r.lub)((function(){return[(0,r.zoF)([(0,r.tPi)((0,r.luU)(e-1,t.topLeft),0,1),(0,r.tPi)(t.topLeft,1,1)]),(0,r.zoF)([(0,r.luU)(e-1,(0,r.tPi)(t.bottomRight,0,1)),(0,r.tPi)(t.bottomRight,1,1)])]}));n=o[0],s=o[1],null!=t.landmarks&&(i=(0,r.lub)((function(){var n=(0,r.luU)((0,r.RRF)([e-1,0]),t.landmarks),s=(0,r.RRF)([1,-1]);return(0,r.dC7)(n,s)})))}else{var a=t.topLeft,u=a[0],c=a[1],l=t.bottomRight,h=l[0],d=l[1];n=[e-1-u,c],s=[e-1-h,d],null!=t.landmarks&&(i=t.landmarks.map((function(t){return[e-1-t[0],t[1]]})))}var f={topLeft:n,bottomRight:s};return null!=i&&(f.landmarks=i),null!=t.probability&&(f.probability=t.probability instanceof r.esB?t.probability.clone():t.probability),f}function l(t,e){return(0,r.lub)((function(){var n;return n=t.hasOwnProperty("box")?t.box:t,(0,r.L9e)(function(t,e){var n=(0,r.dC7)(t.startPoint,e),s=(0,r.dC7)(t.endPoint,e),i=(0,r.Izb)([n,s],1);return a(i)}(n,e).startEndTensor)}))}var h=function(){function t(t,e,n,s,i,o){this.blazeFaceModel=t,this.width=e,this.height=n,this.maxFaces=s,this.anchorsData=function(t,e,n){for(var r=[],s=0;s<n.strides.length;s++)for(var i=n.strides[s],o=Math.floor((e+i-1)/i),a=Math.floor((t+i-1)/i),u=n.anchors[s],c=0;c<o;c++)for(var l=i*(c+.5),h=0;h<a;h++)for(var d=i*(h+.5),f=0;f<u;f++)r.push([d,l]);return r}(e,n,u),this.anchors=(0,r.odF)(this.anchorsData),this.inputSizeData=[e,n],this.inputSize=(0,r.RRF)([e,n]),this.iouThreshold=i,this.scoreThreshold=o}return t.prototype.getBoundingBoxes=function(t,e,n){return void 0===n&&(n=!0),i(this,void 0,void 0,(function(){var s,u,c,l,h,d,f,p,m,b,y,g,x,w,v=this;return o(this,(function(k){switch(k.label){case 0:return s=(0,r.lub)((function(){var e=r.BHj.resizeBilinear(t,[v.width,v.height]),n=(0,r.dC7)((0,r.luU)((0,r.hiC)(e,255),.5),2),s=v.blazeFaceModel.predict(n),i=(0,r.L9e)(s),o=function(t,e,n){var s=(0,r.tPi)(t,[0,1],[-1,2]),i=(0,r.IHx)(s,e),o=(0,r.tPi)(t,[0,3],[-1,2]),a=(0,r.hiC)(o,n),u=(0,r.hiC)(i,n),c=(0,r.hiC)(a,2),l=(0,r.luU)(u,c),h=(0,r.IHx)(u,c),d=(0,r.dC7)(l,n),f=(0,r.dC7)(h,n);return(0,r.Izb)([d,f],1)}(i,v.anchors,v.inputSize),a=(0,r.tPi)(i,[0,0],[-1,1]);return[i,o,(0,r.L9e)((0,r.XD2)(a))]})),u=s[0],c=s[1],l=s[2],h=console.warn,console.warn=function(){},d=r.BHj.nonMaxSuppression(c,l,this.maxFaces,this.iouThreshold,this.scoreThreshold),console.warn=h,[4,d.array()];case 1:return f=k.sent(),d.dispose(),p=f.map((function(t){return(0,r.tPi)(c,[t,0],[1,-1])})),e?[3,3]:[4,Promise.all(p.map((function(t){return i(v,void 0,void 0,(function(){var e;return o(this,(function(n){switch(n.label){case 0:return[4,t.array()];case 1:return e=n.sent(),t.dispose(),[2,e]}}))}))})))];case 2:p=k.sent(),k.label=3;case 3:for(m=t.shape[1],b=t.shape[2],y=e?(0,r.hiC)([b,m],this.inputSize):[b/this.inputSizeData[0],m/this.inputSizeData[1]],g=[],x=function(t){var s=p[t],i=(0,r.lub)((function(){var i=a(s instanceof r.esB?s:(0,r.odF)(s));if(!n)return i;var o,c=f[t];return o=e?(0,r.tPi)(v.anchors,[c,0],[1,2]):v.anchorsData[c],{box:i,landmarks:(0,r.XLQ)((0,r.L9e)((0,r.tPi)(u,[c,5],[1,-1])),[6,-1]),probability:(0,r.tPi)(l,[c],[1]),anchor:o}}));g.push(i)},w=0;w<p.length;w++)x(w);return c.dispose(),l.dispose(),u.dispose(),[2,{boxes:g,scaleFactor:y}]}}))}))},t.prototype.estimateFaces=function(t,e,n,s){return void 0===e&&(e=!1),void 0===n&&(n=!1),void 0===s&&(s=!0),i(this,void 0,void 0,(function(){var a,u,h,d,f,p,m=this;return o(this,(function(b){switch(b.label){case 0:return a=function(t){return t instanceof r.esB?[t.shape[0],t.shape[1]]:[t.height,t.width]}(t),u=a[1],h=(0,r.lub)((function(){return t instanceof r.esB||(t=r.Xhn.n(t)),(0,r.dt4)((0,r.pju)(t,"float32"),0)})),[4,this.getBoundingBoxes(h,e,s)];case 1:return d=b.sent(),f=d.boxes,p=d.scaleFactor,h.dispose(),e?[2,f.map((function(t){var e=l(t,p),i={topLeft:(0,r.tPi)(e,[0],[2]),bottomRight:(0,r.tPi)(e,[2],[2])};if(s){var o=t,a=o.landmarks,h=o.probability,d=o.anchor,f=(0,r.dC7)((0,r.IHx)(a,d),p);i.landmarks=f,i.probability=h}return n&&(i=c(i,u)),i}))]:[2,Promise.all(f.map((function(t){return i(m,void 0,void 0,(function(){var e,r,a,h,d,f,m,b,y,g,x,w=this;return o(this,(function(v){switch(v.label){case 0:return e=l(t,p),s?[3,2]:[4,e.array()];case 1:return d=v.sent(),r={topLeft:d.slice(0,2),bottomRight:d.slice(2)},[3,4];case 2:return[4,Promise.all([t.landmarks,e,t.probability].map((function(t){return i(w,void 0,void 0,(function(){return o(this,(function(e){return[2,t.array()]}))}))})))];case 3:a=v.sent(),h=a[0],d=a[1],f=a[2],m=t.anchor,y=(b=p)[0],g=b[1],x=h.map((function(t){return[(t[0]+m[0])*y,(t[1]+m[1])*g]})),r={topLeft:d.slice(0,2),bottomRight:d.slice(2),landmarks:x,probability:f},function(t){t.startEndTensor.dispose(),t.startPoint.dispose(),t.endPoint.dispose()}(t.box),t.landmarks.dispose(),t.probability.dispose(),v.label=4;case 4:return e.dispose(),n&&(r=c(r,u)),[2,r]}}))}))})))]}}))}))},t}();function d(t){var e=void 0===t?{}:t,n=e.maxFaces,r=void 0===n?10:n,a=e.inputWidth,u=void 0===a?128:a,c=e.inputHeight,l=void 0===c?128:c,d=e.iouThreshold,f=void 0===d?.3:d,p=e.scoreThreshold,m=void 0===p?.75:p;return i(this,void 0,void 0,(function(){var t;return o(this,(function(e){switch(e.label){case 0:return[4,(0,s.YL)("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0})];case 1:return t=e.sent(),[2,new h(t,u,l,r,f,m)]}}))}))}},8349:(t,e,n)=>{var r,s=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(t){function e(){return E.buffer!=U&&K(E.buffer),G}function s(){return E.buffer!=U&&K(E.buffer),j}function i(){return E.buffer!=U&&K(E.buffer),H}function o(){return E.buffer!=U&&K(E.buffer),q}function a(){return E.buffer!=U&&K(E.buffer),X}var u,c=void 0!==(t=t||{})?t:{},l={};for(u in c)c.hasOwnProperty(u)&&(l[u]=c[u]);var h=[],d=!1,f=!1,p=!1,m=!1;d="object"==typeof window,f="function"==typeof importScripts,p="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,m=!d&&!p&&!f;var b=c.ENVIRONMENT_IS_PTHREAD||!1;b&&(U=c.buffer,Q=c.DYNAMIC_BASE,Z=c.DYNAMICTOP_PTR);var y,g,x,w,v="";function k(t){return c.locateFile?c.locateFile(t,v):v+t}if(p){var $;v=f?n(1386).dirname(v)+"/":"//",y=function(t,e){return x||(x=n(2993)),w||(w=n(1386)),t=w.normalize(t),x.readFileSync(t,e?null:"utf8")},g=function(t){var e=y(t,!0);return e.buffer||(e=new Uint8Array(e)),F(e.buffer),e},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),h=process.argv.slice(2),process.on("uncaughtException",(function(t){if(!(t instanceof hn))throw t})),process.on("unhandledRejection",wt),c.inspect=function(){return"[Emscripten Module object]"};try{$=n(6614)}catch(t){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),t}Worker=$.Worker}else m?("undefined"!=typeof read&&(y=function(t){return read(t)}),g=function(t){var e;return"function"==typeof readbuffer?new Uint8Array(readbuffer(t)):(F("object"==typeof(e=read(t,"binary"))),e)},"undefined"!=typeof scriptArgs?h=scriptArgs:void 0!==arguments&&(h=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(d||f)&&(f?v=self.location.href:document.currentScript&&(v=document.currentScript.src),void 0!==r&&r&&(v=r),v=0!==v.indexOf("blob:")?v.substr(0,v.lastIndexOf("/")+1):"",p?(y=function(t,e){return x||(x=n(2993)),w||(w=n(1386)),t=w.normalize(t),x.readFileSync(t,e?null:"utf8")},g=function(t){var e=y(t,!0);return e.buffer||(e=new Uint8Array(e)),F(e.buffer),e}):(y=function(t){var e=new XMLHttpRequest;return e.open("GET",t,!1),e.send(null),e.responseText},f&&(g=function(t){var e=new XMLHttpRequest;return e.open("GET",t,!1),e.responseType="arraybuffer",e.send(null),new Uint8Array(e.response)})));p&&"undefined"==typeof performance&&(performance=n(9513).performance);var N,C,E,S=c.print||console.log.bind(console),A=c.printErr||console.warn.bind(console);for(u in l)l.hasOwnProperty(u)&&(c[u]=l[u]);l=null,c.arguments&&(h=c.arguments),c.thisProgram&&c.thisProgram,c.quit&&c.quit,Atomics.load,Atomics.store,Atomics.compareExchange,c.wasmBinary&&(N=c.wasmBinary),c.noExitRuntime&&(C=c.noExitRuntime),"object"!=typeof WebAssembly&&A("no native wasm support detected");var R,T=new WebAssembly.Table({initial:169,maximum:169,element:"anyfunc"}),O=0,I=!1;function F(t,e){t||wt("Assertion failed: "+e)}function _(t){var e=c["_"+t];return F(e,"Cannot call unknown function "+t+", make sure it is exported"),e}function M(t,e,n,r,s){var i={string:function(t){var e=0;if(null!=t&&0!==t){var n=1+(t.length<<2);z(t,e=un(n),n)}return e},array:function(t){var e=un(t.length);return W(t,e),e}},o=_(t),a=[],u=0;if(r)for(var c=0;c<r.length;c++){var l=i[n[c]];l?(0===u&&(u=an()),a[c]=l(r[c])):a[c]=r[c]}var h=o.apply(null,a);return h=function(t){return"string"===e?P(t):"boolean"===e?Boolean(t):t}(h),0!==u&&cn(u),h}function D(t,e,n,r){var s=(n=n||[]).every((function(t){return"number"===t}));return"string"!==e&&s&&!r?_(t):function(){return M(t,e,n,arguments)}}function L(t,e,n){for(var r=e+n,s="";!(e>=r);){var i=t[e++];if(!i)return s;if(128&i){var o=63&t[e++];if(192!=(224&i)){var a=63&t[e++];if((i=224==(240&i)?(15&i)<<12|o<<6|a:(7&i)<<18|o<<12|a<<6|63&t[e++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function P(t,e){return t?L(s(),t,e):""}function V(t,e,n,r){if(!(r>0))return 0;for(var s=n,i=n+r-1,o=0;o<t.length;++o){var a=t.charCodeAt(o);if(a>=55296&&a<=57343&&(a=65536+((1023&a)<<10)|1023&t.charCodeAt(++o)),a<=127){if(n>=i)break;e[n++]=a}else if(a<=2047){if(n+1>=i)break;e[n++]=192|a>>6,e[n++]=128|63&a}else if(a<=65535){if(n+2>=i)break;e[n++]=224|a>>12,e[n++]=128|a>>6&63,e[n++]=128|63&a}else{if(n+3>=i)break;e[n++]=240|a>>18,e[n++]=128|a>>12&63,e[n++]=128|a>>6&63,e[n++]=128|63&a}}return e[n]=0,n-s}function z(t,e,n){return V(t,s(),e,n)}function B(t){for(var e=0,n=0;n<t.length;++n){var r=t.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&t.charCodeAt(++n)),r<=127?++e:e+=r<=2047?2:r<=65535?3:4}return e}function W(t,n){e().set(t,n)}var U,G,j,H,q,X,J=65536;function Y(t,e){return t%e>0&&(t+=e-t%e),t}function K(t){U=t,c.HEAP8=G=new Int8Array(t),c.HEAP16=new Int16Array(t),c.HEAP32=H=new Int32Array(t),c.HEAPU8=j=new Uint8Array(t),c.HEAPU16=new Uint16Array(t),c.HEAPU32=q=new Uint32Array(t),c.HEAPF32=new Float32Array(t),c.HEAPF64=X=new Float64Array(t)}var Q=5256464,Z=12656,tt=c.INITIAL_MEMORY||16777216;if(b)E=c.wasmMemory,U=c.buffer;else if(c.wasmMemory)E=c.wasmMemory;else if(!((E=new WebAssembly.Memory({initial:tt/J,maximum:2147483648/J,shared:!0})).buffer instanceof SharedArrayBuffer))throw A("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),p&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");function et(t){for(;t.length>0;){var e=t.shift();if("function"!=typeof e){var n=e.func;"number"==typeof n?void 0===e.arg?c.dynCall_v(n):c.dynCall_vi(n,e.arg):n(void 0===e.arg?null:e.arg)}else e(c)}}E&&(U=E.buffer),tt=U.byteLength,K(U),b||(i()[Z>>2]=Q);var nt=[],rt=[],st=[],it=[],ot=[];function at(){if(!b){if(c.preRun)for("function"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)ht(c.preRun.shift());et(nt)}}function ut(){et(rt)}function ct(){b||et(st)}function lt(){if(!b){if(c.postRun)for("function"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;)dt(c.postRun.shift());et(ot)}}function ht(t){nt.unshift(t)}function dt(t){ot.unshift(t)}var ft=Math.ceil,pt=Math.floor,mt=0,bt=null,yt=null;function gt(t){F(!b,"addRunDependency cannot be used in a pthread worker"),mt++,c.monitorRunDependencies&&c.monitorRunDependencies(mt)}function xt(t){if(mt--,c.monitorRunDependencies&&c.monitorRunDependencies(mt),0==mt&&(null!==bt&&(clearInterval(bt),bt=null),yt)){var e=yt;yt=null,e()}}function wt(t){throw c.onAbort&&c.onAbort(t),b&&console.error("Pthread aborting at "+(new Error).stack),S(t+=""),A(t),I=!0,t="abort("+t+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(t)}function vt(t,e){return String.prototype.startsWith?t.startsWith(e):0===t.indexOf(e)}c.preloadedImages={},c.preloadedAudios={};var kt="data:application/octet-stream;base64,";function $t(t){return vt(t,kt)}var Nt="file://";function Ct(t){return vt(t,Nt)}var Et="tfjs-backend-wasm-threaded-simd.wasm";function St(){try{if(N)return new Uint8Array(N);if(g)return g(Et);throw"both async and sync fetching of the wasm failed"}catch(t){wt(t)}}function At(){return N||!d&&!f||"function"!=typeof fetch||Ct(Et)?new Promise((function(t,e){t(St())})):fetch(Et,{credentials:"same-origin"}).then((function(t){if(!t.ok)throw"failed to load wasm binary file at '"+Et+"'";return t.arrayBuffer()})).catch((function(){return St()}))}function Rt(){var t={a:je};function e(t,e){var n=t.exports;if(c.asm=n,R=e,!b){var r=Ut.unusedWorkers.length;Ut.unusedWorkers.forEach((function(t){Ut.loadWasmModuleToWorker(t,(function(){--r||xt()}))}))}}function n(t){e(t.instance,t.module)}function r(e){return At().then((function(e){return WebAssembly.instantiate(e,t)})).then(e,(function(t){A("failed to asynchronously prepare wasm: "+t),wt(t)}))}if(b||gt(),c.instantiateWasm)try{return c.instantiateWasm(t,e)}catch(t){return A("Module.instantiateWasm callback failed with error: "+t),!1}return function(){if(N||"function"!=typeof WebAssembly.instantiateStreaming||$t(Et)||Ct(Et)||"function"!=typeof fetch)return r(n);fetch(Et,{credentials:"same-origin"}).then((function(e){return WebAssembly.instantiateStreaming(e,t).then(n,(function(t){A("wasm streaming compile failed: "+t),A("falling back to ArrayBuffer instantiation"),r(n)}))}))}(),{}}$t(Et)||(Et=k(Et));var Tt={};function Ot(){Ut.initRuntime()}b||rt.push({func:function(){Xe()}});var It=0,Ft=0,_t=0;function Mt(t,e,n){It=t|=0,_t=e|=0,Ft=n|=0}c.__register_pthread_ptr=Mt;var Dt={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135},Lt=13568;function Pt(t,n){if(t<=0||t>e().length||!0&t||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(i(),Lt>>2),s=0;if(r==t&&Atomics.compareExchange(i(),Lt>>2,r,0)==r&&(s=1,--n<=0))return 1;var o=Atomics.notify(i(),t>>2,n);if(o>=0)return o+s;throw"Atomics.notify returned an unexpected value "+o}function Vt(t){if(b)throw"Internal Error! _kill_thread() can only ever be called from main application thread!";if(!t)throw"Internal Error! Null pthread_ptr in _kill_thread!";i()[t+12>>2]=0;var e=Ut.pthreads[t];e.worker.terminate(),Ut.freeThreadData(e),Ut.runningWorkers.splice(Ut.runningWorkers.indexOf(e.worker),1),e.worker.pthread=void 0}function zt(t){if(b)throw"Internal Error! _cancel_thread() can only ever be called from main application thread!";if(!t)throw"Internal Error! Null pthread_ptr in _cancel_thread!";Ut.pthreads[t].worker.postMessage({cmd:"cancel"})}function Bt(t){if(b)throw"Internal Error! _cleanup_thread() can only ever be called from main application thread!";if(!t)throw"Internal Error! Null pthread_ptr in _cleanup_thread!";i()[t+12>>2]=0;var e=Ut.pthreads[t];if(e){var n=e.worker;Ut.returnWorkerToPool(n)}}c._emscripten_futex_wake=Pt;var Wt,Ut={MAIN_THREAD_ID:1,mainThreadInfo:{schedPolicy:0,schedPrio:0},unusedWorkers:[],runningWorkers:[],initRuntime:function(){Mt(Ut.mainThreadBlock,!f,1),nn(Ut.mainThreadBlock)},initMainThreadBlock:function(){for(var t=0;t<8;++t)Ut.allocateUnusedWorker();for(Ut.mainThreadBlock=12816,t=0;t<58;++t)o()[Ut.mainThreadBlock/4+t]=0;i()[Ut.mainThreadBlock+12>>2]=Ut.mainThreadBlock;var e=Ut.mainThreadBlock+156;for(i()[e>>2]=e,t=0;t<128;++t)o()[3264+t]=0;Atomics.store(o(),Ut.mainThreadBlock+104>>2,13056),Atomics.store(o(),Ut.mainThreadBlock+40>>2,Ut.mainThreadBlock),Atomics.store(o(),Ut.mainThreadBlock+44>>2,42)},initWorker:function(){},pthreads:{},exitHandlers:null,setThreadStatus:function(){},runExitHandlers:function(){if(null!==Ut.exitHandlers){for(;Ut.exitHandlers.length>0;)Ut.exitHandlers.pop()();Ut.exitHandlers=null}b&&O&&tn()},threadExit:function(t){var e=ze();e&&(Atomics.store(o(),e+4>>2,t),Atomics.store(o(),e+0>>2,1),Atomics.store(o(),e+60>>2,1),Atomics.store(o(),e+64>>2,0),Ut.runExitHandlers(),Pt(e+0,2147483647),Mt(0,0,0),O=0,b&&postMessage({cmd:"exit"}))},threadCancel:function(){Ut.runExitHandlers(),Atomics.store(o(),O+4>>2,-1),Atomics.store(o(),O+0>>2,1),Pt(O+0,2147483647),O=0,Mt(0,0,0),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var t in Ut.pthreads)(r=Ut.pthreads[t])&&r.worker&&Ut.returnWorkerToPool(r.worker);Ut.pthreads={};for(var e=0;e<Ut.unusedWorkers.length;++e)(n=Ut.unusedWorkers[e]).terminate();for(Ut.unusedWorkers=[],e=0;e<Ut.runningWorkers.length;++e){var n,r=(n=Ut.runningWorkers[e]).pthread;Ut.freeThreadData(r),n.terminate()}Ut.runningWorkers=[]},freeThreadData:function(t){if(t){if(t.threadInfoStruct){var e=i()[t.threadInfoStruct+104>>2];i()[t.threadInfoStruct+104>>2]=0,Ye(e),Ye(t.threadInfoStruct)}t.threadInfoStruct=0,t.allocatedOwnStack&&t.stackBase&&Ye(t.stackBase),t.stackBase=0,t.worker&&(t.worker.pthread=null)}},returnWorkerToPool:function(t){delete Ut.pthreads[t.pthread.thread],Ut.unusedWorkers.push(t),Ut.runningWorkers.splice(Ut.runningWorkers.indexOf(t),1),Ut.freeThreadData(t.pthread),t.pthread=void 0},receiveObjectTransfer:function(t){},loadWasmModuleToWorker:function(t,e){t.onmessage=function(n){var r=n.data,s=r.cmd;if(t.pthread&&(Ut.currentProxiedOperationCallerThread=t.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=ze()){var i=Ut.pthreads[r.targetThread];return i?i.worker.postMessage(n.data,r.transferList):console.error('Internal error! Worker sent a message "'+s+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Ut.currentProxiedOperationCallerThread=void 0)}"processQueuedMainThreadWork"===s?en():"spawnThread"===s?Pe(n.data):"cleanupThread"===s?Bt(r.thread):"killThread"===s?Vt(r.thread):"cancelThread"===s?zt(r.thread):"loaded"===s?(t.loaded=!0,e&&e(t),t.runPthread&&(t.runPthread(),delete t.runPthread)):"print"===s?S("Thread "+r.threadId+": "+r.text):"printErr"===s?A("Thread "+r.threadId+": "+r.text):"alert"===s?alert("Thread "+r.threadId+": "+r.text):"exit"===s?t.pthread&&Atomics.load(o(),t.pthread.thread+68>>2)&&Ut.returnWorkerToPool(t):"cancelDone"===s?Ut.returnWorkerToPool(t):"objectTransfer"===s?Ut.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?t.postMessage(n.data):A("worker sent an unknown command "+s),Ut.currentProxiedOperationCallerThread=void 0},t.onerror=function(t){A("pthread sent an error! "+t.filename+":"+t.lineno+": "+t.message)},p&&(t.on("message",(function(e){t.onmessage({data:e})})),t.on("error",(function(e){t.onerror(e)})),t.on("exit",(function(t){console.log("worker exited - TODO: update the worker queue?")}))),t.postMessage({cmd:"load",urlOrBlob:c.mainScriptUrlOrBlob||r,wasmMemory:E,wasmModule:R,DYNAMIC_BASE:Q,DYNAMICTOP_PTR:Z})},allocateUnusedWorker:function(){var t=k("tfjs-backend-wasm-threaded-simd.worker.js");Ut.unusedWorkers.push(new Worker(t))},getNewWorker:function(){return 0==Ut.unusedWorkers.length&&(Ut.allocateUnusedWorker(),Ut.loadWasmModuleToWorker(Ut.unusedWorkers[0])),Ut.unusedWorkers.length>0?Ut.unusedWorkers.pop():null},busySpinWait:function(t){for(var e=performance.now()+t;performance.now()<e;);}};function Gt(t,e){cn(t)}function jt(){return C}function Ht(t,e,n,r){wt("Assertion failed: "+P(t)+", at: "+[e?P(e):"unknown filename",n,r?P(r):"unknown function"])}function qt(t,e){_main(t,e)}function Xt(t){return i()[Ke()>>2]=t,t}function Jt(t,e){if(b)return se(1,1,t,e);it.unshift({func:t,arg:e})}function Yt(t,e){if(t==e)postMessage({cmd:"processQueuedMainThreadWork"});else if(b)postMessage({targetThread:t,cmd:"processThreadQueue"});else{var n=Ut.pthreads[t],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1}function Kt(){wt()}function Qt(t,e){}function Zt(t,n,r){if(t<=0||t>e().length||!0&t)return-28;if(f){var s=Atomics.wait(i(),t>>2,n,r);if("timed-out"===s)return-73;if("not-equal"===s)return-6;if("ok"===s)return 0;throw"Atomics.wait returned an unexpected value "+s}if(n!=Atomics.load(i(),t>>2))return-6;var o=performance.now(),a=o+r;Atomics.store(i(),Lt>>2,t);for(var u=t;t==u;){if((o=performance.now())>a)return-73;en(),t=Atomics.load(i(),Lt>>2)}return 0}function te(){return 0|_t}function ee(){return 0|Ft}function ne(t,e,n){s().copyWithin(t,e,e+n)}function re(){return navigator.hardwareConcurrency}function se(t,e){for(var n=arguments.length-2,r=an(),s=un(8*n),i=s>>3,o=0;o<n;o++)a()[i+o]=arguments[2+o];var u=sn(t,n,s,e);return cn(r),u}c.establishStackSpace=Gt,c.getNoExitRuntime=jt,Wt=p?function(){var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:b?function(){return performance.now()-c.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var ie=[];function oe(t,e){oe.array||(oe.array=[]);var n,r=oe.array;for(r.length=0;n=s()[t++];)100===n||102===n?(e=e+7&-8,r.push(a()[e>>3]),e+=8):(e=e+3&-4,r.push(i()[e>>2]),e+=4);return r}function ae(t,e,n){ie.length=e;for(var r=n>>3,s=0;s<e;s++)ie[s]=a()[r+s];var i=t<0,o=i?Tt[-t-1]:Ge[t];if(i){var u=oe(ie[1],ie[2]);return o.apply(null,u)}return o.apply(null,ie)}function ue(){return s().length}function ce(t){try{return E.grow(t-U.byteLength+65535>>>16),K(E.buffer),1}catch(t){}}function le(t){t>>>=0;var e=ue();if(t<=e)return!1;var n=2147483648;if(t>n)return!1;for(var r=1;r<=4;r*=2){var s=e*(1+.2/r);if(s=Math.min(s,t+100663296),ce(Math.min(n,Y(Math.max(16777216,t,s),65536))))return!0}return!1}var he={keyEvent:0,mouseEvent:0,wheelEvent:0,uiEvent:0,focusEvent:0,deviceOrientationEvent:0,deviceMotionEvent:0,fullscreenChangeEvent:0,pointerlockChangeEvent:0,visibilityChangeEvent:0,touchEvent:0,previousFullscreenElement:null,previousScreenX:null,previousScreenY:null,removeEventListenersRegistered:!1,removeAllEventListeners:function(){for(var t=he.eventHandlers.length-1;t>=0;--t)he._removeHandler(t);he.eventHandlers=[],he.deferredCalls=[]},registerRemoveEventListeners:function(){he.removeEventListenersRegistered||(it.push(he.removeAllEventListeners),he.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(t,e,n){function r(t,e){if(t.length!=e.length)return!1;for(var n in t)if(t[n]!=e[n])return!1;return!0}for(var s in he.deferredCalls){var i=he.deferredCalls[s];if(i.targetFunction==t&&r(i.argsList,n))return}he.deferredCalls.push({targetFunction:t,precedence:e,argsList:n}),he.deferredCalls.sort((function(t,e){return t.precedence<e.precedence}))},removeDeferredCalls:function(t){for(var e=0;e<he.deferredCalls.length;++e)he.deferredCalls[e].targetFunction==t&&(he.deferredCalls.splice(e,1),--e)},canPerformEventHandlerRequests:function(){return he.inEventHandler&&he.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(he.canPerformEventHandlerRequests())for(var t=0;t<he.deferredCalls.length;++t){var e=he.deferredCalls[t];he.deferredCalls.splice(t,1),--t,e.targetFunction.apply(null,e.argsList)}},inEventHandler:0,currentEventHandler:null,eventHandlers:[],removeAllHandlersOnTarget:function(t,e){for(var n=0;n<he.eventHandlers.length;++n)he.eventHandlers[n].target!=t||e&&e!=he.eventHandlers[n].eventTypeString||he._removeHandler(n--)},_removeHandler:function(t){var e=he.eventHandlers[t];e.target.removeEventListener(e.eventTypeString,e.eventListenerFunc,e.useCapture),he.eventHandlers.splice(t,1)},registerOrRemoveHandler:function(t){var e=function(e){++he.inEventHandler,he.currentEventHandler=t,he.runDeferredCalls(),t.handlerFunc(e),he.runDeferredCalls(),--he.inEventHandler};if(t.callbackfunc)t.eventListenerFunc=e,t.target.addEventListener(t.eventTypeString,e,t.useCapture),he.eventHandlers.push(t),he.registerRemoveEventListeners();else for(var n=0;n<he.eventHandlers.length;++n)he.eventHandlers[n].target==t.target&&he.eventHandlers[n].eventTypeString==t.eventTypeString&&he._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(t,e,n,r,s){var o=an(),a=un(12);i()[a>>2]=n,i()[a+4>>2]=r,i()[a+8>>2]=s,on(t,637534208,e,r,a),cn(o)},getTargetThreadForEventCallback:function(t){switch(t){case 1:return 0;case 2:return Ut.currentProxiedOperationCallerThread;default:return t}},getNodeNameForTarget:function(t){return t?t==window?"#window":t==screen?"#screen":t&&t.nodeName?t.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function de(t){var e=B(t)+1,n=Je(e);return z(t,n,e),n}function fe(t,e,n,r){var s=an(),o=un(12),a=0;e&&(a=de(e)),i()[o>>2]=a,i()[o+4>>2]=n,i()[o+8>>2]=r,on(t,657457152,0,a,o),cn(s)}function pe(t,e,n,r){fe(t,e=e?P(e):"",n,r)}function me(t){return t>2?P(t):t}var be=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function ye(t){return t=me(t),be[t]||("undefined"!=typeof document?document.querySelector(t):void 0)}function ge(t){return ye(t)}function xe(t,e,n){var r=ge(t);if(!r)return-4;if(r.canvasSharedPtr&&(i()[r.canvasSharedPtr>>2]=e,i()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(pe(i()[r.canvasSharedPtr+8>>2],t,e,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var s=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var o=r.GLctxObject.GLctx.getParameter(2978);s=0===o[0]&&0===o[1]&&o[2]===r.width&&o[3]===r.height}return r.width=e,r.height=n,s&&r.GLctxObject.GLctx.viewport(0,0,e,n),0}function we(t,e,n){return b?se(2,1,t,e,n):xe(t,e,n)}function ve(t,e,n){return ge(t)?xe(t,e,n):we(t,e,n)}function ke(t){}function $e(t,e){}function Ne(t){var e=t.getExtension("ANGLE_instanced_arrays");if(e)return t.vertexAttribDivisor=function(t,n){e.vertexAttribDivisorANGLE(t,n)},t.drawArraysInstanced=function(t,n,r,s){e.drawArraysInstancedANGLE(t,n,r,s)},t.drawElementsInstanced=function(t,n,r,s,i){e.drawElementsInstancedANGLE(t,n,r,s,i)},1}function Ce(t){var e=t.getExtension("OES_vertex_array_object");if(e)return t.createVertexArray=function(){return e.createVertexArrayOES()},t.deleteVertexArray=function(t){e.deleteVertexArrayOES(t)},t.bindVertexArray=function(t){e.bindVertexArrayOES(t)},t.isVertexArray=function(t){return e.isVertexArrayOES(t)},1}function Ee(t){var e=t.getExtension("WEBGL_draw_buffers");if(e)return t.drawBuffers=function(t,n){e.drawBuffersWEBGL(t,n)},1}var Se={counter:1,lastError:0,buffers:[],mappedBuffers:{},programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},currentContext:null,offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,init:function(){for(var t=new Float32Array(Se.MINI_TEMP_BUFFER_SIZE),e=0;e<Se.MINI_TEMP_BUFFER_SIZE;e++)Se.miniTempBufferFloatViews[e]=t.subarray(0,e+1);var n=new Int32Array(Se.MINI_TEMP_BUFFER_SIZE);for(e=0;e<Se.MINI_TEMP_BUFFER_SIZE;e++)Se.miniTempBufferIntViews[e]=n.subarray(0,e+1)},recordError:function(t){Se.lastError||(Se.lastError=t)},getNewId:function(t){for(var e=Se.counter++,n=t.length;n<e;n++)t[n]=null;return e},MINI_TEMP_BUFFER_SIZE:256,miniTempBufferFloatViews:[0],miniTempBufferIntViews:[0],getSource:function(t,e,n,r){for(var s="",o=0;o<e;++o){var a=r?i()[r+4*o>>2]:-1;s+=P(i()[n+4*o>>2],a<0?void 0:a)}return s},createContext:function(t,e){var n=t.getContext("webgl",e);return n?Se.registerContext(n,e):0},registerContext:function(t,e){var n=Je(8);i()[n+4>>2]=ze();var r={handle:n,attributes:e,version:e.majorVersion,GLctx:t};return t.canvas&&(t.canvas.GLctxObject=r),Se.contexts[n]=r,(void 0===e.enableExtensionsByDefault||e.enableExtensionsByDefault)&&Se.initExtensions(r),n},makeContextCurrent:function(t){return Se.currentContext=Se.contexts[t],c.ctx=Oe=Se.currentContext&&Se.currentContext.GLctx,!(t&&!Oe)},getContext:function(t){return Se.contexts[t]},deleteContext:function(t){Se.currentContext===Se.contexts[t]&&(Se.currentContext=null),"object"==typeof he&&he.removeAllHandlersOnTarget(Se.contexts[t].GLctx.canvas),Se.contexts[t]&&Se.contexts[t].GLctx.canvas&&(Se.contexts[t].GLctx.canvas.GLctxObject=void 0),Ye(Se.contexts[t].handle),Se.contexts[t]=null},initExtensions:function(t){if(t||(t=Se.currentContext),!t.initExtensionsDone){t.initExtensionsDone=!0;var e=t.GLctx;Ne(e),Ce(e),Ee(e),e.disjointTimerQueryExt=e.getExtension("EXT_disjoint_timer_query");var n=["OES_texture_float","OES_texture_half_float","OES_standard_derivatives","OES_vertex_array_object","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","OES_element_index_uint","EXT_texture_filter_anisotropic","EXT_frag_depth","WEBGL_draw_buffers","ANGLE_instanced_arrays","OES_texture_float_linear","OES_texture_half_float_linear","EXT_blend_minmax","EXT_shader_texture_lod","EXT_texture_norm16","WEBGL_compressed_texture_pvrtc","EXT_color_buffer_half_float","WEBGL_color_buffer_float","EXT_sRGB","WEBGL_compressed_texture_etc1","EXT_disjoint_timer_query","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_astc","EXT_color_buffer_float","WEBGL_compressed_texture_s3tc_srgb","EXT_disjoint_timer_query_webgl2","WEBKIT_WEBGL_compressed_texture_pvrtc"];(e.getSupportedExtensions()||[]).forEach((function(t){-1!=n.indexOf(t)&&e.getExtension(t)}))}},populateUniformTable:function(t){for(var e=Se.programs[t],n=Se.programInfos[t]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,s=Oe.getProgramParameter(e,35718),i=0;i<s;++i){var o=Oe.getActiveUniform(e,i),a=o.name;n.maxUniformLength=Math.max(n.maxUniformLength,a.length+1),"]"==a.slice(-1)&&(a=a.slice(0,a.lastIndexOf("[")));var u=Oe.getUniformLocation(e,a);if(u){var c=Se.getNewId(Se.uniforms);r[a]=[o.size,c],Se.uniforms[c]=u;for(var l=1;l<o.size;++l){var h=a+"["+l+"]";u=Oe.getUniformLocation(e,h),c=Se.getNewId(Se.uniforms),Se.uniforms[c]=u}}}}},Ae=["default","low-power","high-performance"];function Re(t,e){var n={},r=e>>2;n.alpha=!!i()[r+0],n.depth=!!i()[r+1],n.stencil=!!i()[r+2],n.antialias=!!i()[r+3],n.premultipliedAlpha=!!i()[r+4],n.preserveDrawingBuffer=!!i()[r+5];var s=i()[r+6];n.powerPreference=Ae[s],n.failIfMajorPerformanceCaveat=!!i()[r+7],n.majorVersion=i()[r+8],n.minorVersion=i()[r+9],n.enableExtensionsByDefault=i()[r+10],n.explicitSwapControl=i()[r+11],n.proxyContextToMainThread=i()[r+12],n.renderViaOffscreenBackBuffer=i()[r+13];var o=ge(t);return o?n.explicitSwapControl?-1:Se.createContext(o,n):-4}function Te(t,e){return Re(t,e)}var Oe,Ie={mappings:{},buffers:[null,[],[]],printChar:function(t,e){var n=Ie.buffers[t];0===e||10===e?((1===t?S:A)(L(n,0)),n.length=0):n.push(e)},varargs:void 0,get:function(){return Ie.varargs+=4,i()[Ie.varargs-4>>2]},getStr:function(t){return P(t)},get64:function(t,e){return t}};function Fe(t){return b?se(3,1,t):0}function _e(t,e,n,r,s){if(b)return se(4,1,t,e,n,r,s)}function Me(t,e,n,r){if(b)return se(5,1,t,e,n,r);for(var o=0,a=0;a<n;a++){for(var u=i()[e+8*a>>2],c=i()[e+(8*a+4)>>2],l=0;l<c;l++)Ie.printChar(t,s()[u+l]);o+=c}return i()[r>>2]=o,0}function De(t){var e=Ut.exitHandlers.pop();t&&e()}function Le(t,e){null===Ut.exitHandlers&&(Ut.exitHandlers=[]),Ut.exitHandlers.push((function(){ln(t,e)}))}function Pe(t){if(b)throw"Internal Error! _spawn_thread() can only ever be called from main application thread!";var e=Ut.getNewWorker();if(void 0!==e.pthread)throw"Internal error!";if(!t.pthread_ptr)throw"Internal error, no pthread ptr!";Ut.runningWorkers.push(e);for(var n=Je(512),r=0;r<128;++r)i()[n+4*r>>2]=0;var s=t.stackBase+t.stackSize,a=Ut.pthreads[t.pthread_ptr]={worker:e,stackBase:t.stackBase,stackSize:t.stackSize,allocatedOwnStack:t.allocatedOwnStack,thread:t.pthread_ptr,threadInfoStruct:t.pthread_ptr},u=a.threadInfoStruct>>2;Atomics.store(o(),u+0,0),Atomics.store(o(),u+1,0),Atomics.store(o(),u+2,0),Atomics.store(o(),u+17,t.detached),Atomics.store(o(),u+26,n),Atomics.store(o(),u+12,0),Atomics.store(o(),u+10,a.threadInfoStruct),Atomics.store(o(),u+11,42),Atomics.store(o(),u+27,t.stackSize),Atomics.store(o(),u+21,t.stackSize),Atomics.store(o(),u+20,s),Atomics.store(o(),u+29,s),Atomics.store(o(),u+30,t.detached),Atomics.store(o(),u+32,t.schedPolicy),Atomics.store(o(),u+33,t.schedPrio);var c=Qe()+40;Atomics.store(o(),u+44,c),e.pthread=a;var l={cmd:"run",start_routine:t.startRoutine,arg:t.arg,threadInfoStruct:t.pthread_ptr,selfThreadId:t.pthread_ptr,parentThreadId:t.parent_pthread_ptr,stackBase:t.stackBase,stackSize:t.stackSize};e.runPthread=function(){l.time=performance.now(),e.postMessage(l,t.transferList)},e.loaded&&(e.runPthread(),delete e.runPthread)}function Ve(t,e,n){if(!e&&!n)return Dt.EINVAL;if(!t)return A("pthread_getschedparam called with a null thread pointer!"),Dt.ESRCH;if(i()[t+12>>2]!==t)return A("pthread_getschedparam attempted on thread "+t+", which does not point to a valid thread, or does not exist anymore!"),Dt.ESRCH;var r=Atomics.load(o(),t+108+20>>2),s=Atomics.load(o(),t+108+24>>2);return e&&(i()[e>>2]=r),n&&(i()[n>>2]=s),0}function ze(){return 0|It}function Be(t,e,n,r){if("undefined"==typeof SharedArrayBuffer)return A("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!t)return A("pthread_create called with a null thread pointer!"),28;var s=[];if(b&&0===s.length)return rn(687865856,t,e,n,r);var a=0,u=0,c=0,l=0,h=0;if(e)if(a=i()[e>>2],a+=81920,u=i()[e+8>>2],c=0!==i()[e+12>>2],0===i()[e+16>>2]){var d=i()[e+20>>2],f=i()[e+24>>2];Ve(Ut.currentProxiedOperationCallerThread?Ut.currentProxiedOperationCallerThread:ze(),e+20,e+24),l=i()[e+20>>2],h=i()[e+24>>2],i()[e+20>>2]=d,i()[e+24>>2]=f}else l=i()[e+20>>2],h=i()[e+24>>2];else a=2097152;var p=0==u;p?u=Ze(16,a):F((u-=a)>0);for(var m=Je(232),y=0;y<58;++y)o()[(m>>2)+y]=0;i()[t>>2]=m,i()[m+12>>2]=m;var g=m+156;i()[g>>2]=g;var x={stackBase:u,stackSize:a,allocatedOwnStack:p,schedPolicy:l,schedPrio:h,detached:c,startRoutine:n,pthread_ptr:m,parent_pthread_ptr:ze(),arg:r,transferList:s};return b?(x.cmd="spawnThread",postMessage(x,s)):Pe(x),0}function We(t){return(t=+t)>=0?+pt(t+.5):+ft(t-.5)}function Ue(t){if(b)return se(6,1,t);switch(t){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:case 79:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Xt(28),-1}c._pthread_self=ze,b?Ut.initWorker():Ut.initMainThreadBlock(),Se.init();var Ge=[null,Jt,we,Fe,_e,Me,Ue],je={e:Ht,r:qt,w:Yt,a:Kt,l:Qt,d:Zt,c:Pt,h:Wt,g:te,x:ee,q:ne,B:re,t:ae,A:le,u:ve,k:ke,s:$e,v:Te,m:Fe,o:_e,i:Me,p:Ot,memory:E||c.wasmMemory,y:De,z:Le,j:Be,b:ze,f:We,n:Ue,table:T},He=Rt();c.asm=He;var qe,Xe=c.___wasm_call_ctors=function(){return(Xe=c.___wasm_call_ctors=c.asm.C).apply(null,arguments)},Je=(c._init=function(){return(c._init=c.asm.D).apply(null,arguments)},c._register_tensor=function(){return(c._register_tensor=c.asm.E).apply(null,arguments)},c._dispose_data=function(){return(c._dispose_data=c.asm.F).apply(null,arguments)},c._dispose=function(){return(c._dispose=c.asm.G).apply(null,arguments)},c._Abs=function(){return(c._Abs=c.asm.H).apply(null,arguments)},c._Add=function(){return(c._Add=c.asm.I).apply(null,arguments)},c._AddN=function(){return(c._AddN=c.asm.J).apply(null,arguments)},c._ArgMax=function(){return(c._ArgMax=c.asm.K).apply(null,arguments)},c._AvgPool=function(){return(c._AvgPool=c.asm.L).apply(null,arguments)},c._BatchMatMul=function(){return(c._BatchMatMul=c.asm.M).apply(null,arguments)},c._ClipByValue=function(){return(c._ClipByValue=c.asm.N).apply(null,arguments)},c._Conv2D=function(){return(c._Conv2D=c.asm.O).apply(null,arguments)},c._Conv2DBackpropInput=function(){return(c._Conv2DBackpropInput=c.asm.P).apply(null,arguments)},c._Cos=function(){return(c._Cos=c.asm.Q).apply(null,arguments)},c._CropAndResize=function(){return(c._CropAndResize=c.asm.R).apply(null,arguments)},c._Cumsum=function(){return(c._Cumsum=c.asm.S).apply(null,arguments)},c._DepthToSpace=function(){return(c._DepthToSpace=c.asm.T).apply(null,arguments)},c._DepthwiseConv2dNative=function(){return(c._DepthwiseConv2dNative=c.asm.U).apply(null,arguments)},c._Equal=function(){return(c._Equal=c.asm.V).apply(null,arguments)},c._Exp=function(){return(c._Exp=c.asm.W).apply(null,arguments)},c._FlipLeftRight=function(){return(c._FlipLeftRight=c.asm.X).apply(null,arguments)},c._Floor=function(){return(c._Floor=c.asm.Y).apply(null,arguments)},c._FloorDiv=function(){return(c._FloorDiv=c.asm.Z).apply(null,arguments)},c._FusedBatchNorm=function(){return(c._FusedBatchNorm=c.asm._).apply(null,arguments)},c._FusedConv2D=function(){return(c._FusedConv2D=c.asm.$).apply(null,arguments)},c._FusedDepthwiseConv2D=function(){return(c._FusedDepthwiseConv2D=c.asm.aa).apply(null,arguments)},c._Gather=function(){return(c._Gather=c.asm.ba).apply(null,arguments)},c._GatherNd=function(){return(c._GatherNd=c.asm.ca).apply(null,arguments)},c._Greater=function(){return(c._Greater=c.asm.da).apply(null,arguments)},c._GreaterEqual=function(){return(c._GreaterEqual=c.asm.ea).apply(null,arguments)},c._LeakyRelu=function(){return(c._LeakyRelu=c.asm.fa).apply(null,arguments)},c._Less=function(){return(c._Less=c.asm.ga).apply(null,arguments)},c._LessEqual=function(){return(c._LessEqual=c.asm.ha).apply(null,arguments)},c._Log=function(){return(c._Log=c.asm.ia).apply(null,arguments)},c._LogicalAnd=function(){return(c._LogicalAnd=c.asm.ja).apply(null,arguments)},c._Max=function(){return(c._Max=c.asm.ka).apply(null,arguments)},c._MaxPool=function(){return(c._MaxPool=c.asm.la).apply(null,arguments)},c._Maximum=function(){return(c._Maximum=c.asm.ma).apply(null,arguments)},c._Mean=function(){return(c._Mean=c.asm.na).apply(null,arguments)},c._Min=function(){return(c._Min=c.asm.oa).apply(null,arguments)},c._Minimum=function(){return(c._Minimum=c.asm.pa).apply(null,arguments)},c._Multiply=function(){return(c._Multiply=c.asm.qa).apply(null,arguments)},c._Neg=function(){return(c._Neg=c.asm.ra).apply(null,arguments)},c._NonMaxSuppressionV3=function(){return(c._NonMaxSuppressionV3=c.asm.sa).apply(null,arguments)},c._NonMaxSuppressionV4=function(){return(c._NonMaxSuppressionV4=c.asm.ta).apply(null,arguments)},c._NonMaxSuppressionV5=function(){return(c._NonMaxSuppressionV5=c.asm.ua).apply(null,arguments)},c._NotEqual=function(){return(c._NotEqual=c.asm.va).apply(null,arguments)},c._OneHot=function(){return(c._OneHot=c.asm.wa).apply(null,arguments)},c._PadV2=function(){return(c._PadV2=c.asm.xa).apply(null,arguments)},c._Pow=function(){return(c._Pow=c.asm.ya).apply(null,arguments)},c._Prelu=function(){return(c._Prelu=c.asm.za).apply(null,arguments)},c._Prod=function(){return(c._Prod=c.asm.Aa).apply(null,arguments)},c._RealDiv=function(){return(c._RealDiv=c.asm.Ba).apply(null,arguments)},c._Relu=function(){return(c._Relu=c.asm.Ca).apply(null,arguments)},c._Relu6=function(){return(c._Relu6=c.asm.Da).apply(null,arguments)},c._ResizeBilinear=function(){return(c._ResizeBilinear=c.asm.Ea).apply(null,arguments)},c._Reverse=function(){return(c._Reverse=c.asm.Fa).apply(null,arguments)},c._RotateWithOffset=function(){return(c._RotateWithOffset=c.asm.Ga).apply(null,arguments)},c._Round=function(){return(c._Round=c.asm.Ha).apply(null,arguments)},c._Rsqrt=function(){return(c._Rsqrt=c.asm.Ia).apply(null,arguments)},c._ScatterNd=function(){return(c._ScatterNd=c.asm.Ja).apply(null,arguments)},c._SelectV2=function(){return(c._SelectV2=c.asm.Ka).apply(null,arguments)},c._Sigmoid=function(){return(c._Sigmoid=c.asm.La).apply(null,arguments)},c._Sin=function(){return(c._Sin=c.asm.Ma).apply(null,arguments)},c._Softmax=function(){return(c._Softmax=c.asm.Na).apply(null,arguments)},c._Sqrt=function(){return(c._Sqrt=c.asm.Oa).apply(null,arguments)},c._Square=function(){return(c._Square=c.asm.Pa).apply(null,arguments)},c._SquaredDifference=function(){return(c._SquaredDifference=c.asm.Qa).apply(null,arguments)},c._Step=function(){return(c._Step=c.asm.Ra).apply(null,arguments)},c._StridedSlice=function(){return(c._StridedSlice=c.asm.Sa).apply(null,arguments)},c._Sub=function(){return(c._Sub=c.asm.Ta).apply(null,arguments)},c._Sum=function(){return(c._Sum=c.asm.Ua).apply(null,arguments)},c._Tanh=function(){return(c._Tanh=c.asm.Va).apply(null,arguments)},c._Tile=function(){return(c._Tile=c.asm.Wa).apply(null,arguments)},c._TopK=function(){return(c._TopK=c.asm.Xa).apply(null,arguments)},c._Transpose=function(){return(c._Transpose=c.asm.Ya).apply(null,arguments)},c.__FusedMatMul=function(){return(c.__FusedMatMul=c.asm.Za).apply(null,arguments)},c._malloc=function(){return(Je=c._malloc=c.asm._a).apply(null,arguments)}),Ye=c._free=function(){return(Ye=c._free=c.asm.$a).apply(null,arguments)},Ke=c.___errno_location=function(){return(Ke=c.___errno_location=c.asm.ab).apply(null,arguments)},Qe=c._emscripten_get_global_libc=function(){return(Qe=c._emscripten_get_global_libc=c.asm.bb).apply(null,arguments)},Ze=(c.___em_js__initPthreadsJS=function(){return(c.___em_js__initPthreadsJS=c.asm.cb).apply(null,arguments)},c._memalign=function(){return(Ze=c._memalign=c.asm.db).apply(null,arguments)}),tn=c.___pthread_tsd_run_dtors=function(){return(tn=c.___pthread_tsd_run_dtors=c.asm.eb).apply(null,arguments)},en=c._emscripten_main_thread_process_queued_calls=function(){return(en=c._emscripten_main_thread_process_queued_calls=c.asm.fb).apply(null,arguments)},nn=(c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.gb).apply(null,arguments)},c._emscripten_register_main_browser_thread_id=function(){return(nn=c._emscripten_register_main_browser_thread_id=c.asm.hb).apply(null,arguments)}),rn=(c._emscripten_main_browser_thread_id=function(){return(c._emscripten_main_browser_thread_id=c.asm.ib).apply(null,arguments)},c._emscripten_async_run_in_main_thread=function(){return(c._emscripten_async_run_in_main_thread=c.asm.jb).apply(null,arguments)},c._emscripten_sync_run_in_main_thread=function(){return(c._emscripten_sync_run_in_main_thread=c.asm.kb).apply(null,arguments)},c._emscripten_sync_run_in_main_thread_0=function(){return(c._emscripten_sync_run_in_main_thread_0=c.asm.lb).apply(null,arguments)},c._emscripten_sync_run_in_main_thread_1=function(){return(c._emscripten_sync_run_in_main_thread_1=c.asm.mb).apply(null,arguments)},c._emscripten_sync_run_in_main_thread_2=function(){return(c._emscripten_sync_run_in_main_thread_2=c.asm.nb).apply(null,arguments)},c._emscripten_sync_run_in_main_thread_xprintf_varargs=function(){return(c._emscripten_sync_run_in_main_thread_xprintf_varargs=c.asm.ob).apply(null,arguments)},c._emscripten_sync_run_in_main_thread_3=function(){return(c._emscripten_sync_run_in_main_thread_3=c.asm.pb).apply(null,arguments)},c._emscripten_sync_run_in_main_thread_4=function(){return(rn=c._emscripten_sync_run_in_main_thread_4=c.asm.qb).apply(null,arguments)}),sn=(c._emscripten_sync_run_in_main_thread_5=function(){return(c._emscripten_sync_run_in_main_thread_5=c.asm.rb).apply(null,arguments)},c._emscripten_sync_run_in_main_thread_6=function(){return(c._emscripten_sync_run_in_main_thread_6=c.asm.sb).apply(null,arguments)},c._emscripten_sync_run_in_main_thread_7=function(){return(c._emscripten_sync_run_in_main_thread_7=c.asm.tb).apply(null,arguments)},c._emscripten_run_in_main_runtime_thread_js=function(){return(sn=c._emscripten_run_in_main_runtime_thread_js=c.asm.ub).apply(null,arguments)}),on=c._emscripten_async_queue_on_thread_=function(){return(on=c._emscripten_async_queue_on_thread_=c.asm.vb).apply(null,arguments)},an=(c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.wb).apply(null,arguments)},c.stackSave=function(){return(an=c.stackSave=c.asm.xb).apply(null,arguments)}),un=c.stackAlloc=function(){return(un=c.stackAlloc=c.asm.yb).apply(null,arguments)},cn=c.stackRestore=function(){return(cn=c.stackRestore=c.asm.zb).apply(null,arguments)},ln=c.dynCall_vi=function(){return(ln=c.dynCall_vi=c.asm.Ab).apply(null,arguments)};function hn(t){this.name="ExitStatus",this.message="Program terminated with exit("+t+")",this.status=t}function dn(t){function e(){qe||(qe=!0,c.calledRun=!0,I||(ut(),ct(),c.onRuntimeInitialized&&c.onRuntimeInitialized(),lt()))}t=t||h,mt>0||(at(),mt>0||(c.setStatus?(c.setStatus("Running..."),setTimeout((function(){setTimeout((function(){c.setStatus("")}),1),e()}),1)):e()))}if(c.dynCall_v=function(){return(c.dynCall_v=c.asm.Bb).apply(null,arguments)},c.dynCall_ii=function(){return(c.dynCall_ii=c.asm.Cb).apply(null,arguments)},c.asm=He,c.cwrap=D,c.PThread=Ut,c.PThread=Ut,c._pthread_self=ze,c.wasmMemory=E,c.ExitStatus=hn,c.then=function(t){if(qe)t(c);else{var e=c.onRuntimeInitialized;c.onRuntimeInitialized=function(){e&&e(),t(c)}}return c},yt=function t(){qe||dn(),qe||(yt=t)},c.run=dn,c.preInit)for("function"==typeof c.preInit&&(c.preInit=[c.preInit]);c.preInit.length>0;)c.preInit.pop()();return b||(C=!0),b||dn(),t});t.exports=s},7234:(t,e,n)=>{var r,s=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(t){var e,s=void 0!==(t=t||{})?t:{},i={};for(e in s)s.hasOwnProperty(e)&&(i[e]=s[e]);var o=[],a=function(t,e){throw e},u=!1,c=!1,l=!1,h=!1;u="object"==typeof window,c="function"==typeof importScripts,l="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,h=!u&&!l&&!c;var d,f,p,m,b="";function y(t){return s.locateFile?s.locateFile(t,b):b+t}l?(b=c?n(1386).dirname(b)+"/":"//",d=function(t,e){return p||(p=n(2993)),m||(m=n(1386)),t=m.normalize(t),p.readFileSync(t,e?null:"utf8")},f=function(t){var e=d(t,!0);return e.buffer||(e=new Uint8Array(e)),N(e.buffer),e},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),o=process.argv.slice(2),process.on("uncaughtException",(function(t){if(!(t instanceof St))throw t})),process.on("unhandledRejection",rt),a=function(t){process.exit(t)},s.inspect=function(){return"[Emscripten Module object]"}):h?("undefined"!=typeof read&&(d=function(t){return read(t)}),f=function(t){var e;return"function"==typeof readbuffer?new Uint8Array(readbuffer(t)):(N("object"==typeof(e=read(t,"binary"))),e)},"undefined"!=typeof scriptArgs?o=scriptArgs:void 0!==arguments&&(o=arguments),"function"==typeof quit&&(a=function(t){quit(t)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(u||c)&&(c?b=self.location.href:document.currentScript&&(b=document.currentScript.src),r&&(b=r),b=0!==b.indexOf("blob:")?b.substr(0,b.lastIndexOf("/")+1):"",d=function(t){var e=new XMLHttpRequest;return e.open("GET",t,!1),e.send(null),e.responseText},c&&(f=function(t){var e=new XMLHttpRequest;return e.open("GET",t,!1),e.responseType="arraybuffer",e.send(null),new Uint8Array(e.response)}));var g,x,w,v=s.print||console.log.bind(console),k=s.printErr||console.warn.bind(console);for(e in i)i.hasOwnProperty(e)&&(s[e]=i[e]);i=null,s.arguments&&(o=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&(a=s.quit),s.wasmBinary&&(g=s.wasmBinary),s.noExitRuntime&&(x=s.noExitRuntime),"object"!=typeof WebAssembly&&k("no native wasm support detected"),new WebAssembly.Table({initial:151,maximum:151,element:"anyfunc"});var $=!1;function N(t,e){t||rt("Assertion failed: "+e)}function C(t){var e=s["_"+t];return N(e,"Cannot call unknown function "+t+", make sure it is exported"),e}function E(t,e,n,r,s){var i={string:function(t){var e=0;if(null!=t&&0!==t){var n=1+(t.length<<2);M(t,e=Ct(n),n)}return e},array:function(t){var e=Ct(t.length);return D(t,e),e}},o=C(t),a=[],u=0;if(r)for(var c=0;c<r.length;c++){var l=i[n[c]];l?(0===u&&(u=Nt()),a[c]=l(r[c])):a[c]=r[c]}var h=o.apply(null,a);return h=function(t){return"string"===e?F(t):"boolean"===e?Boolean(t):t}(h),0!==u&&Et(u),h}function S(t,e,n,r){var s=(n=n||[]).every((function(t){return"number"===t}));return"string"!==e&&s&&!r?C(t):function(){return E(t,e,n,arguments)}}var A,R,T,O="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function I(t,e,n){for(var r=e+n,s=e;t[s]&&!(s>=r);)++s;if(s-e>16&&t.subarray&&O)return O.decode(t.subarray(e,s));for(var i="";e<s;){var o=t[e++];if(128&o){var a=63&t[e++];if(192!=(224&o)){var u=63&t[e++];if((o=224==(240&o)?(15&o)<<12|a<<6|u:(7&o)<<18|a<<12|u<<6|63&t[e++])<65536)i+=String.fromCharCode(o);else{var c=o-65536;i+=String.fromCharCode(55296|c>>10,56320|1023&c)}}else i+=String.fromCharCode((31&o)<<6|a)}else i+=String.fromCharCode(o)}return i}function F(t,e){return t?I(R,t,e):""}function _(t,e,n,r){if(!(r>0))return 0;for(var s=n,i=n+r-1,o=0;o<t.length;++o){var a=t.charCodeAt(o);if(a>=55296&&a<=57343&&(a=65536+((1023&a)<<10)|1023&t.charCodeAt(++o)),a<=127){if(n>=i)break;e[n++]=a}else if(a<=2047){if(n+1>=i)break;e[n++]=192|a>>6,e[n++]=128|63&a}else if(a<=65535){if(n+2>=i)break;e[n++]=224|a>>12,e[n++]=128|a>>6&63,e[n++]=128|63&a}else{if(n+3>=i)break;e[n++]=240|a>>18,e[n++]=128|a>>12&63,e[n++]=128|a>>6&63,e[n++]=128|63&a}}return e[n]=0,n-s}function M(t,e,n){return _(t,R,e,n)}function D(t,e){A.set(t,e)}function L(t){s.HEAP8=A=new Int8Array(t),s.HEAP16=new Int16Array(t),s.HEAP32=T=new Int32Array(t),s.HEAPU8=R=new Uint8Array(t),s.HEAPU16=new Uint16Array(t),s.HEAPU32=new Uint32Array(t),s.HEAPF32=new Float32Array(t),s.HEAPF64=new Float64Array(t)}function P(t){for(;t.length>0;){var e=t.shift();if("function"!=typeof e){var n=e.func;"number"==typeof n?void 0===e.arg?s.dynCall_v(n):s.dynCall_vi(n,e.arg):n(void 0===e.arg?null:e.arg)}else e(s)}}s.INITIAL_MEMORY;var V=[],z=[],B=[],W=[];function U(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)X(s.preRun.shift());P(V)}function G(){P(z)}function j(){P(B)}function H(){}function q(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)J(s.postRun.shift());P(W)}function X(t){V.unshift(t)}function J(t){W.unshift(t)}var Y=Math.ceil,K=Math.floor,Q=0,Z=null,tt=null;function et(t){Q++,s.monitorRunDependencies&&s.monitorRunDependencies(Q)}function nt(t){if(Q--,s.monitorRunDependencies&&s.monitorRunDependencies(Q),0==Q&&(null!==Z&&(clearInterval(Z),Z=null),tt)){var e=tt;tt=null,e()}}function rt(t){throw s.onAbort&&s.onAbort(t),v(t+=""),k(t),$=!0,t="abort("+t+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(t)}function st(t,e){return String.prototype.startsWith?t.startsWith(e):0===t.indexOf(e)}s.preloadedImages={},s.preloadedAudios={};var it="data:application/octet-stream;base64,";function ot(t){return st(t,it)}var at="file://";function ut(t){return st(t,at)}var ct="tfjs-backend-wasm.wasm";function lt(){try{if(g)return new Uint8Array(g);if(f)return f(ct);throw"both async and sync fetching of the wasm failed"}catch(t){rt(t)}}function ht(){return g||!u&&!c||"function"!=typeof fetch||ut(ct)?new Promise((function(t,e){t(lt())})):fetch(ct,{credentials:"same-origin"}).then((function(t){if(!t.ok)throw"failed to load wasm binary file at '"+ct+"'";return t.arrayBuffer()})).catch((function(){return lt()}))}function dt(){var t={env:vt,wasi_snapshot_preview1:vt};function e(t,e){var n=t.exports;s.asm=n,L((w=n.memory).buffer),nt()}function n(t){e(t.instance)}function r(e){return ht().then((function(e){return WebAssembly.instantiate(e,t)})).then(e,(function(t){k("failed to asynchronously prepare wasm: "+t),rt(t)}))}if(et(),s.instantiateWasm)try{return s.instantiateWasm(t,e)}catch(t){return k("Module.instantiateWasm callback failed with error: "+t),!1}return function(){if(g||"function"!=typeof WebAssembly.instantiateStreaming||ot(ct)||ut(ct)||"function"!=typeof fetch)return r(n);fetch(ct,{credentials:"same-origin"}).then((function(e){return WebAssembly.instantiateStreaming(e,t).then(n,(function(t){k("wasm streaming compile failed: "+t),k("falling back to ArrayBuffer instantiation"),r(n)}))}))}(),{}}function ft(t){L(w.buffer)}ot(ct)||(ct=y(ct)),z.push();var pt={mappings:{},buffers:[null,[],[]],printChar:function(t,e){var n=pt.buffers[t];0===e||10===e?((1===t?v:k)(I(n,0)),n.length=0):n.push(e)},varargs:void 0,get:function(){return pt.varargs+=4,T[pt.varargs-4>>2]},getStr:function(t){return F(t)},get64:function(t,e){return t}};function mt(t){return 0}function bt(t,e,n,r,s){}function yt(t,e,n,r){for(var s=0,i=0;i<n;i++){for(var o=T[e+8*i>>2],a=T[e+(8*i+4)>>2],u=0;u<a;u++)pt.printChar(t,R[o+u]);s+=a}return T[r>>2]=s,0}function gt(t){Tt(t)}function xt(t){gt(t)}function wt(t){return(t=+t)>=0?+K(t+.5):+Y(t-.5)}var vt={emscripten_notify_memory_growth:ft,fd_close:mt,fd_seek:bt,fd_write:yt,proc_exit:xt,roundf:wt},kt=dt();s.asm=kt,s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.Floor).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.Mean).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.Neg).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.Prod).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.RealDiv).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.Round).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Step).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.TopK).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.__start=function(){return(s.__start=s.asm._start).apply(null,arguments)};var $t,Nt=s.stackSave=function(){return(Nt=s.stackSave=s.asm.stackSave).apply(null,arguments)},Ct=s.stackAlloc=function(){return(Ct=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)},Et=s.stackRestore=function(){return(Et=s.stackRestore=s.asm.stackRestore).apply(null,arguments)};function St(t){this.name="ExitStatus",this.message="Program terminated with exit("+t+")",this.status=t}function At(t){var e=s.__start;try{e(),Tt(0,!0)}catch(t){if(t instanceof St)return;if("unwind"==t)return void(x=!0);var n=t;t&&"object"==typeof t&&t.stack&&(n=[t,t.stack]),k("exception thrown: "+n),a(1,t)}}function Rt(t){function e(){$t||($t=!0,s.calledRun=!0,$||(G(),j(),s.onRuntimeInitialized&&s.onRuntimeInitialized(),Ot&&At(),q()))}t=t||o,Q>0||(U(),Q>0||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),e()}),1)):e()))}function Tt(t,e){e&&x&&0===t||(x||($=!0,H(),s.onExit&&s.onExit(t)),a(t,new St(t)))}if(s.asm=kt,s.cwrap=S,s.then=function(t){if($t)t(s);else{var e=s.onRuntimeInitialized;s.onRuntimeInitialized=function(){e&&e(),t(s)}}return s},tt=function t(){$t||Rt(),$t||(tt=t)},s.run=Rt,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();var Ot=!0;return s.noInitialRun&&(Ot=!1),x=!0,Rt(),t});t.exports=s},5965:(t,e,n)=>{"use strict";n.d(e,{YL:()=>fr,gJ:()=>pr});var r={};n.r(r),n.d(r,{json:()=>I});var s={};n.r(s),n.d(s,{json:()=>F});var i={};n.r(i),n.d(i,{json:()=>_});var o={};n.r(o),n.d(o,{json:()=>M});var a={};n.r(a),n.d(a,{json:()=>D});var u={};n.r(u),n.d(u,{json:()=>L});var c={};n.r(c),n.d(c,{json:()=>P});var l={};n.r(l),n.d(l,{json:()=>V});var h={};n.r(h),n.d(h,{json:()=>z});var d={};n.r(d),n.d(d,{json:()=>B});var f={};n.r(f),n.d(f,{json:()=>W});var p={};n.r(p),n.d(p,{json:()=>U});var m={};n.r(m),n.d(m,{json:()=>G});var b={};n.r(b),n.d(b,{json:()=>j});var y={};n.r(y),n.d(y,{json:()=>H});var g={};n.r(g),n.d(g,{json:()=>q});var x={};n.r(x),n.d(x,{json:()=>X});var w,v,k=n(3976);!function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(w||(w={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(v||(v={}));const $={};function N(t){return $[t]}function C(t,e,n,r,s){const i=e.inputParams[t];if(i&&void 0!==i.inputIndexStart){const t=i.inputIndexStart,o=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?t+1:i.inputIndexEnd;if("tensor"===i.type)return E(e.inputNames[i.inputIndexStart],n,r,s);if("tensors"===i.type){return e.inputNames.slice(t,o).map((t=>E(t,n,r,s)))}const a=E(e.inputNames.slice(t)[0],n,r,s),u=a.dataSync();return"number"===i.type?u[0]:k.D5U.GX(a.shape,u)}const o=e.attrParams[t];return o&&o.value}function E(t,e,n,r){const[s,i]=R(t);if(null!=r){const t=r.getHashTableHandleByName(s);if(null!=t)return t}const o=n.currentContextIds.find((t=>!!e[A(s,t)]));return void 0!==o?e[A(s,o)][i]:void 0}function S(t,e){const[n,r]=R(t);return[A(n,e&&e.currentContextId),r]}function A(t,e){return e?`${t}-${e}`:t}function R(t){const e=t.split(":");if(1===e.length)return[t,0];return[e[0],Number(e[e.length-1])]}function T(t,e,n){let r=C("pad",t,e,n);if("explicit"===r){r=C("explicitPaddings",t,e,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)s[t][0]=r[2*t],s[t][1]=r[2*t+1];return s}return r}function O(t){return t.kept?t:(0,k.d9v)(t)}const I=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],F=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],_=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],M=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],D=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],L=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],P=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],V=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],z=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}],B=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],W=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],U=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],G=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],j=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],H=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],q=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],X=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class J{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[r,s,i,o,a,u,c,f,d,l,p,m,b,y,g,x,h].map((t=>t.json)));this.opMappers=t.reduce(((t,e)=>(t[e.tfOpName]=e,t)),{})}transformGraph(t,e={}){const n=t.node,r=[],s=[],i=[],o=n.reduce(((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(t[e.name]):"Const"===e.op?s.push(t[e.name]):null!=e.input&&0!==e.input.length||i.push(t[e.name]),t)),{});let a=[];const u=[];let c={},l={};null!=e&&(c=this.mapSignatureEntries(e.inputs),l=this.mapSignatureEntries(e.outputs));const h=Object.keys(o);h.forEach((t=>{const e=o[t];e.inputNames.forEach((t=>{const[n]=S(t);e.inputs.push(o[n]),o[n].children.push(e)}))})),0===Object.keys(l).length?h.forEach((t=>{const e=o[t];0===e.children.length&&u.push(e)})):Object.keys(l).forEach((t=>{const[e]=S(t),n=o[e];null!=n&&(n.signatureKey=l[t],u.push(n))})),Object.keys(c).length>0?Object.keys(c).forEach((t=>{const[e]=S(t),n=o[e];n&&(n.signatureKey=c[t],a.push(n))})):a=r;let d={};null!=t.library&&null!=t.library.function&&(d=t.library.function.reduce(((t,e)=>(t[e.signature.name]=this.mapFunction(e),t)),{}));const f={nodes:o,inputs:a,outputs:u,weights:s,placeholders:r,signature:e,functions:d};return i.length>0&&(f.initNodes=i),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce(((e,n)=>(e[t[n].name]=n,e)),{})}mapNode(t){const e=N(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map((t=>t.startsWith("^")?t.substr(1):t)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce(((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t)),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce(((e,n)=>{const r=n.type;let s;switch(n.type){case"string":s=K(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=K(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=at(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=at(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=Z(t.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=Z(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=ot(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ot(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=Q(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Q(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=ct(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ct(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=it(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=it(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=ut(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ut(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=nt(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=nt(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=rt(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=rt(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=et(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=et(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:s,type:r},e}),{})),n}mapFunction(t){const e=t.nodeDef,n=[];let r={};null!=e&&(r=e.reduce(((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t)),{}));const s=[],i=[];t.signature.inputArg.forEach((t=>{const[e]=S(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:tt(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,s.push(n),r[e]=n}));Object.keys(r).forEach((t=>{const e=r[t];e.inputNames.forEach((t=>{const[n]=S(t);e.inputs.push(r[n]),r[n].children.push(e)}))}));const o=t.ret;t.signature.outputArg.forEach((t=>{const[e,n]=S(o[t.name]),s=r[e];null!=s&&(s.defaultOutput=n,i.push(s))}));const a=this.mapArgsToSignature(t);return{nodes:r,inputs:s,outputs:i,weights:n,placeholders:[],signature:a}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce(((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t)),{}),outputs:t.signature.outputArg.reduce(((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e)),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function Y(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){const e=(0,k.OBj)().global;if(void 0!==e.atob)return e.atob(t);if("undefined"!=typeof Buffer)return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return e?n:n.toLowerCase()}function K(t,e,n,r=!1){const s=t[e];return null!=s?Y(s.s,r):n}function Q(t,e,n){const r=t[e];return r?r.b:n}function Z(t,e,n){const r=t[e]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function tt(t){switch("string"==typeof t&&(t=w[t]),t){case w.DT_FLOAT:return"float32";case w.DT_INT32:case w.DT_INT64:case w.DT_INT8:case w.DT_UINT8:return"int32";case w.DT_BOOL:return"bool";case w.DT_DOUBLE:return"float32";case w.DT_STRING:return"string";default:return null}}function et(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function nt(t,e,n){const r=t[e];return r&&r.type?tt(r.type):n}function rt(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map((t=>tt(t))):n}function st(t){if(!t.unknownRank)return null!=t.dim?t.dim.map((t=>"number"==typeof t.size?t.size:parseInt(t.size,10))):[]}function it(t,e,n){const r=t[e];return r&&r.shape?st(r.shape):n}function ot(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((t=>"number"==typeof t?t:parseInt(t,10))):n}function at(t,e,n,r=!1){const s=t[e];return s&&s.list&&s.list.s?s.list.s.map((t=>Y(t,r))):n}function ut(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map((t=>st(t))):n}function ct(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}class lt{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map((t=>this.getInput(t))),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce(((t,e)=>(t[e]=this.getAttr(e),t)),{}))}getInput(t){return E(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return E(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Z(this.node.rawAttrs,t,e);if(null!=n.s)return K(this.node.rawAttrs,t,e);if(null!=n.b)return Q(this.node.rawAttrs,t,e);if(null!=n.shape)return it(this.node.rawAttrs,t,e);if(null!=n.type)return nt(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return ot(this.node.rawAttrs,t,e);if(null!=n.list.s)return at(this.node.rawAttrs,t,e);if(null!=n.list.shape)return ut(this.node.rawAttrs,t,e);if(null!=n.list.b)return ct(this.node.rawAttrs,t,e);if(null!=n.list.type)return rt(this.node.rawAttrs,t,e)}return e}}var ht=n(6407),dt=n(7097),ft=n(9121),pt=n(3740),mt=n(569),bt=n(2668);const yt=(0,bt.op)({addN_:function(t){mt.hu(Array.isArray(t),(()=>"The argument passed to tf.addN() must be a list of tensors")),mt.hu(t.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`));const e=t.map(((t,e)=>(0,pt._1)(t,`tensors${e}`,"addN"))),n=e[0];e.forEach((t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),e.forEach((t=>{if(!mt.cO(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=e;return dt.BV.runKernel(ft.Xz,r)}});var gt=n(5228),xt=n(4841),wt=n(1274),vt=n(9322),kt=n(9165),$t=n(827),Nt=n(4513),Ct=n(632),Et=n(3453),St=n(5265);var At=n(6235),Rt=n(7839),Tt=n(1470),Ot=n(2421),It=n(1891),Ft=n(7037),_t=n(9812),Mt=n(369),Dt=n(6825),Lt=n(1661),Pt=n(173),Vt=n(2699),zt=n(3233),Bt=n(4650),Wt=n(4842),Ut=n(3426),Gt=n(6943),jt=n(2597),Ht=n(7474),qt=n(4386),Xt=n(7370),Jt=n(9036),Yt=n(766),Kt=n(7409),Qt=n(7809),Zt=n(5503),te=n(625),ee=n(9331),ne=n(4434),re=n(3254),se=n(3694),ie=n(3261),oe=n(248),ae=n(1869),ue=n(1173),ce=n(2279),le=n(3582),he=n(2634),de=n(9451),fe=n(9133),pe=n(8151);function me(t,e,n=""){k.D5U.hu(function(t,e){if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(-1!==t[n]&&-1!==e[n]&&t[n]!==e[n])return!1;return!0}(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}class be{constructor(t,e,n,r,s,i,o){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=i,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=(0,k.iD$)(0),(0,k.CnY)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map((t=>this.read(t)))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),me(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,(0,k.CnY)(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach(((t,n)=>this.write(t,e[n])))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return(0,k.XeE)([],[0].concat(this.elementShape));const n=this.readMany(t);return me(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,k.knu)(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return(0,k.XeE)([],[0].concat(this.elementShape));const e=[];for(let t=0;t<this.size();t++)e.push(t);const n=this.readMany(e);return me(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,k.zoF)(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,(0,k.HHK)(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const r=t.map((t=>(n+=t,n)));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:e.size/n,i=[];(0,k.lub)((()=>{e=(0,k.XLQ)(e,[1,n,s]);for(let n=0;n<t.length;++n){const o=[0,0===n?0:r[n-1],0],a=[1,t[n],s];i[n]=(0,k.XLQ)((0,k.tPi)(e,o,a),this.elementShape)}return i}));const o=[];for(let e=0;e<t.length;e++)o[e]=e;this.writeMany(o,i)}}class ye{constructor(t,e,n,r=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach((t=>{if(n!==t.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);me(e,t.shape,"TensorList shape mismatch: "),(0,k.CnY)(t)})),this.idTensor=(0,k.iD$)(0),this.maxNumElements=r,(0,k.CnY)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new ye([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.id)||e.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return me(t,this.elementShape,"TensorList shape mismatch: "),(0,k.lub)((()=>{const e=this.tensors.map((e=>(0,k.XLQ)(e,t)));return(0,k.knu)(e,0)}))}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return me(n.shape,t,"TensorList shape mismatch: "),(0,k.XLQ)(n,t)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(me(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,k.CnY)(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);return me(this.tensors[t].shape,e,"TensorList shape mismatch: "),this.tensors[t]}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);me(this.elementShape,e.shape,"TensorList shape mismatch: "),(0,k.CnY)(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);return me(this.elementShape,n,"TensorList shape mismatch: "),0===(t=t.slice(0,this.size())).length?(0,k.XeE)([],[0].concat(this.elementShape)):(0,k.lub)((()=>{const e=t.map((t=>(0,k.XLQ)(this.tensors[t],n)));return(0,k.knu)(e,0)}))}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);return me(this.elementShape,e,"TensorList shape mismatch: "),0===this.size()?(0,k.XeE)([],[0].concat(this.elementShape)):(0,k.lub)((()=>{const t=this.tensors.map((t=>(0,k.XLQ)(t,e)));return(0,k.zoF)(t,0)}))}}const ge=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const r=C("thenBranch",t,e,n),s=C("elseBranch",t,e,n),i=C("cond",t,e,n),o=C("args",t,e,n);return(await i.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=C("body",t,e,n),s=C("cond",t,e,n),i=C("args",t,e,n),o=await n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap),a=i.map((t=>t.id));let u=await o[0].data();o.forEach((t=>{t.kept||-1!==a.indexOf(t.id)||t.dispose()}));let c=i;for(;u[0];){const t=c;c=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);const e=c.map((t=>t.id));t.forEach((t=>{t.kept||-1!==a.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}));const i=await n.functionMap[s].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);u=await i[0].data(),i.forEach((t=>{t.kept||-1!==a.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}))}return c}case"LoopCond":return[O(C("pred",t,e,n))];case"Switch":{const r=C("pred",t,e,n);let s=C("data",t,e,n);return s.kept||(s=O(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=t.inputNames.find((t=>void 0!==E(t,e,n)));if(r){return[O(E(r,e,n))]}return}case"Enter":{const r=C("frameName",t,e,n),s=C("tensor",t,e,n);return n.enterFrame(r),[O(s)]}case"Exit":{const r=C("tensor",t,e,n);return n.exitFrame(),[O(r)]}case"NextIteration":{const r=C("tensor",t,e,n);return n.nextIteration(),[O(r)]}case"TensorArrayV3":{const r=C("size",t,e,n),s=C("dtype",t,e,n),i=C("elementShape",t,e,n),o=C("dynamicSize",t,e,n),a=C("clearAfterRead",t,e,n),u=C("identicalElementShapes",t,e,n),c=C("name",t,e,n),l=new be(c,s,r,i,u,o,a);return n.addTensorArray(l),[l.idTensor,(0,k.iD$)(1)]}case"TensorArrayWriteV3":{const r=C("tensorArrayId",t,e,n),s=C("index",t,e,n),i=C("tensor",t,e,n),o=n.getTensorArray(r.id);return o.write(s,i),[o.idTensor]}case"TensorArrayReadV3":{const r=C("tensorArrayId",t,e,n),s=C("index",t,e,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=C("tensorArrayId",t,e,n),s=C("indices",t,e,n),i=C("dtype",t,e,n);return[n.getTensorArray(r.id).gather(s,i)]}case"TensorArrayScatterV3":{const r=C("tensorArrayId",t,e,n),s=C("indices",t,e,n),i=C("tensor",t,e,n),o=n.getTensorArray(r.id);return o.scatter(s,i),[o.idTensor]}case"TensorArrayConcatV3":{const r=C("tensorArrayId",t,e,n),s=n.getTensorArray(r.id),i=C("dtype",t,e,n);return[s.concat(i)]}case"TensorArraySplitV3":{const r=C("tensorArrayId",t,e,n),s=C("tensor",t,e,n),i=C("lengths",t,e,n),o=n.getTensorArray(r.id);return o.split(i,s),[o.idTensor]}case"TensorArraySizeV3":{const r=C("tensorArrayId",t,e,n),s=n.getTensorArray(r.id);return[(0,k.iD$)(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=C("tensorArrayId",t,e,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=C("tensorListId",t,e,n),s=C("index",t,e,n),i=C("tensor",t,e,n),o=n.getTensorList(r.id);return o.setItem(s,i),[o.idTensor]}case"TensorListGetItem":{const r=C("tensorListId",t,e,n),s=C("index",t,e,n),i=C("elementShape",t,e,n),o=C("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(s,i,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=C("indices",t,e,n),s=function(t,e,n,r){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const i=new ye([],n,t.dtype,r),o=(0,k.HHK)(t,0);return e.forEach(((t,e)=>{i.setItem(t,o[e])})),i}(C("tensor",t,e,n),r,C("elementShape",t,e,n),C("numElements",t,e,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=C("elementShape",t,e,n),s=C("elementDType",t,e,n);let i;i="TensorListReserve"===t.op?"numElements":"maxNumElements";const o=function(t,e,n){return new ye([],t,e,n)}(r,s,C(i,t,e,n));return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=C("tensorListId",t,e,n),s=C("indices",t,e,n),i=C("elementShape",t,e,n),o=C("elementDType",t,e,n);return[n.getTensorList(r.id).gather(s,o,i)]}case"TensorListStack":{const r=C("tensorListId",t,e,n),s=C("elementShape",t,e,n),i=C("elementDType",t,e,n),o=C("numElements",t,e,n);return[n.getTensorList(r.id).stack(s,i,o)]}case"TensorListFromTensor":{const r=function(t,e,n){const r=t.dtype;if(t.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);me(t.shape.slice(1),e,"TensorList shape mismatch: ");const s=(0,k.HHK)(t);return new ye(s,e,r)}(C("tensor",t,e,n),C("elementShape",t,e,n),C("elementDType",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=C("tensorListId",t,e,n),s=n.getTensorList(r.id),i=C("dtype",t,e,n),o=C("elementShape",t,e,n);return[s.concat(i,o)]}case"TensorListPushBack":{const r=C("tensorListId",t,e,n),s=C("tensor",t,e,n),i=n.getTensorList(r.id);return i.pushBack(s),[i.idTensor]}case"TensorListPopBack":{const r=C("tensorListId",t,e,n),s=C("elementShape",t,e,n),i=C("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(s,i)]}case"TensorListSplit":{const r=C("tensor",t,e,n),s=C("elementShape",t,e,n),i=function(t,e,n){let r=0;const s=e.map((t=>(r+=t,r)));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${t.shape}`);const i=0===r?0:t.size/r,o=(0,k.lub)((()=>{const o=[];t=(0,k.XLQ)(t,[1,r,i]);for(let r=0;r<e.length;++r){const a=[0,0===r?0:s[r-1],0],u=[1,e[r],i];o[r]=(0,k.XLQ)((0,k.tPi)(t,a,u),n)}return t.dispose(),o})),a=new ye([],n,t.dtype,e.length);for(let t=0;t<o.length;t++)a.setItem(t,o[t]);return a}(r,C("lengths",t,e,n),s);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};var xe=n(1355),we=n(4794),ve=n(4624),ke=n(1405),$e=n(4718),Ne=n(473),Ce=n(5176),Ee=n(1174);const Se=(0,bt.op)({maxPoolWithArgmax_:function(t,e,n,r,s=!1){const i={x:(0,pt._1)(t,"x","maxPoolWithArgmax")},o={filterSize:e,strides:n,pad:r,includeBatchInIndex:s},a=dt.BV.runKernel(ft.vF,i,o);return{result:a[0],indexes:a[1]}}});var Ae=n(1749),Re=n(5020),Te=n(557);function Oe(t,e,n){const[r,s]=C("fusedOps",t,e,n),i="biasadd"===r,o="prelu"===s,a="fusedbatchnorm"===r,u=C("numArgs",t,e,n);if(i){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(a)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const c=C("strides",t,e,n),l=T(t,e,n),h=C("dataFormat",t,e,n).toUpperCase(),d=C("dilations",t,e,n),[f,p]=C("args",t,e,n);return{stride:c,pad:l,dataFormat:h,dilations:d,biasArg:f,preluArg:p,activationFunc:s,leakyreluAlpha:C("leakyreluAlpha",t,e,n)}}var Ie=n(4006);function Fe(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:t,stop:e,num:n};return dt.BV.runKernel(ft.e7,{},r)}var _e=n(4968);const Me=(0,bt.op)({multinomial_:function(t,e,n,r=!1){const s=(0,pt._1)(t,"logits","multinomial"),i=s.size,o=s.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();const a={logits:1===o?(0,_e.X)(s,[1,-1]):s},u={numSamples:e,seed:n,normalized:r},c=dt.BV.runKernel(ft.NZ,a,u);return 1===o?(0,_e.X)(c,[c.size]):c}});var De=n(6708),Le=n(4917),Pe=n(7846),Ve=n(5002),ze=n(7245),Be=n(3596),We=n(9640),Ue=n(6577);var Ge=n(1900),je=n(2271),He=n(8333);const qe=async function(t){const e=(0,pt._1)(t,"condition","whereAsync","bool"),n=await e.data(),r=(0,He.Z)(e.shape,n);return t!==e&&e.dispose(),r};var Xe=n(4077);const Je=async function(t,e){const n=(0,pt._1)(t,"x","setdiff1d"),r=(0,pt._1)(e,"y","setdiff1d");mt.hu(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),mt.hu(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),mt.hu(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),i=await r.data(),o=new Set(i);let a=0;for(let t=0;t<s.length;t++)o.has(s[t])||a++;const u=new Xe.YD([a],n.dtype),c=new Xe.YD([a],"int32");for(let t=0,e=0;t<s.length;t++)o.has(s[t])||(u.values[e]=s[t],c.values[e]=t,e++);return[u.toTensor(),c.toTensor()]};function Ye(t,e,n){return{boxes:C("boxes",t,e,n),scores:C("scores",t,e,n),maxOutputSize:C("maxOutputSize",t,e,n),iouThreshold:C("iouThreshold",t,e,n),scoreThreshold:C("scoreThreshold",t,e,n),softNmsSigma:C("softNmsSigma",t,e,n)}}var Ke=n(3243),Qe=n(9608);var Ze=n(6092),tn=n(9494);class en{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=(0,k.iD$)(0),this.tensorMap=new Map,(0,k.CnY)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),(0,k.lub)((()=>{const t=(0,k.HHK)(e),r=n.length,s=t.length;k.D5U.hu(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let e=0;e<r;e++){const r=n[e],s=t[e];(0,k.CnY)(s),this.tensorMap.set(r,s)}return this.handle}))}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return(0,k.lub)((()=>{const t=[];for(let r=0;r<n.length;r++){const s=n[r],i=this.findWithDefault(s,e);t.push(i)}return(0,k.knu)(t)}))}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}var nn=n(6477),rn=n(6500),sn=n(636),on=n(7630),an=n(6573),un=n(624),cn=n(2856),ln=n(8651),hn=n(5750),dn=n(5912);var fn=n(8687),pn=n(9065);var mn=n(7505),bn=n(9648),yn=n(682),gn=n(1510);const xn=(0,bt.op)({sparseToDense_:function(t,e,n,r=0){const s=(0,pt._1)(t,"sparseIndices","sparseToDense","int32"),i=(0,pt._1)(e,"sparseValues","sparseToDense"),o=(0,pt._1)(r,"defaultValue","sparseToDense",i.dtype);!function(t,e,n,r){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const s=t.rank>0?t.shape[0]:1,i=t.rank>1?t.shape[1]:1;if(n.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${i}.`);const o=e.size;if(0!==e.rank&&(1!==e.rank||o!==s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,i,n,o);const a={sparseIndices:s,sparseValues:i,defaultValue:o},u={outputShape:n};return dt.BV.runKernel(ft.D2,a,u)}});var wn=n(3307),vn=n(5130),kn=n(5735),$n=n(5475),Nn=n(781),Cn=n(2998),En=n(47),Sn=n(7394),An=n(7405);const Rn=(0,bt.op)({bincount_:function(t,e,n){const r=(0,pt._1)(t,"x","bincount"),s=(0,pt._1)(e,"weights","bincount");mt.hu("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),mt.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),mt.hu(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const i={x:r,weights:s},o={size:n};return dt.BV.runKernel(ft.zv,i,o)}});const Tn=(0,bt.op)({denseBincount_:function(t,e,n,r=!1){const s=(0,pt._1)(t,"x","denseBincount"),i=(0,pt._1)(e,"weights","denseBincount");mt.hu("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),mt.hu(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),mt.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),mt.hu(i.size===s.size||0===i.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${i.shape}.`));const o={x:s,weights:i},a={size:n,binaryOutput:r};return dt.BV.runKernel(ft.QR,o,a)}});var On=n(6884),In=n(4926),Fn=n(7486),_n=n(2676),Mn=n(5158),Dn=n(9590),Ln=n(2991),Pn=n(4136),Vn=n(7501),zn=n(8644),Bn=n(3028);const Wn=(0,bt.op)({scatterND_:function(t,e,n){const r=(0,pt._1)(t,"indices","scatterND","int32"),s=(0,pt._1)(e,"updates","scatterND");Bn.b0(s,r,n);const i={indices:r,updates:s},o={shape:n};return dt.BV.runKernel(ft.xQ,i,o)}});const Un=(0,bt.op)({gatherND_:function(t,e){const n=(0,pt._1)(e,"indices","gatherND","int32"),r={params:(0,pt._1)(t,"x","gatherND"),indices:n};return dt.BV.runKernel(ft.q1,r)}});var Gn=n(7020),jn=n(8447),Hn=n(3710),qn=n(4415);var Xn=n(1300),Jn=n(1483),Yn=n(9682),Kn=n(7918),Qn=n(8441),Zn=n(9112),tr=n(8247);function er(t,e,n,r){const s=((t,e,n)=>{switch(t.category){case"arithmetic":return k.lub((()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[ht.I(C("a",t,e,n),C("b",t,e,n))];case"AddN":return[yt(C("tensors",t,e,n))];case"FloorMod":case"Mod":return[gt.w(C("a",t,e,n),C("b",t,e,n))];case"Mul":return[xt.d(C("a",t,e,n),C("b",t,e,n))];case"RealDiv":case"Div":return[wt.h(C("a",t,e,n),C("b",t,e,n))];case"DivNoNan":return[vt.N(C("a",t,e,n),C("b",t,e,n))];case"FloorDiv":return[kt.q(C("a",t,e,n),C("b",t,e,n))];case"Sub":return[$t.l(C("a",t,e,n),C("b",t,e,n))];case"Minimum":return[Nt.L(C("a",t,e,n),C("b",t,e,n))];case"Maximum":return[Ct.g(C("a",t,e,n),C("b",t,e,n))];case"Pow":return[Et.s(C("a",t,e,n),C("b",t,e,n))];case"SquaredDifference":return[St.$(C("a",t,e,n),C("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"basic_math":return k.lub((()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[At.W(C("x",t,e,n))];case"Acos":return[Rt.K(C("x",t,e,n))];case"Acosh":return[Tt._(C("x",t,e,n))];case"Asin":return[Ot.Z(C("x",t,e,n))];case"Asinh":return[It.V(C("x",t,e,n))];case"Atan":return[Ft.z(C("x",t,e,n))];case"Atan2":return[_t.f(C("x",t,e,n),C("y",t,e,n))];case"Atanh":return[Mt.C(C("x",t,e,n))];case"Ceil":return[Dt.m(C("x",t,e,n))];case"Complex":return[Lt.P(C("real",t,e,n),C("imag",t,e,n))];case"Cos":return[Pt.m(C("x",t,e,n))];case"Cosh":return[Vt.f(C("x",t,e,n))];case"Elu":return[zt.p(C("x",t,e,n))];case"Erf":return[Bt.q(C("x",t,e,n))];case"Exp":return[Wt.Q(C("x",t,e,n))];case"Expm1":return[Ut.t(C("x",t,e,n))];case"Floor":return[Gt.G(C("x",t,e,n))];case"Log":return[jt.c(C("x",t,e,n))];case"Log1p":return[Ht.K(C("x",t,e,n))];case"Imag":return[qt.a(C("x",t,e,n))];case"Neg":return[Xt.W(C("x",t,e,n))];case"Reciprocal":return[Jt.M(C("x",t,e,n))];case"Real":return[Yt.k(C("x",t,e,n))];case"Relu":return[Kt.U(C("x",t,e,n))];case"Round":return[Qt.N(C("x",t,e,n))];case"Selu":return[Zt.U(C("x",t,e,n))];case"Sigmoid":return[te.X(C("x",t,e,n))];case"Sin":return[ee.O(C("x",t,e,n))];case"Sign":return[ne.X(C("x",t,e,n))];case"Sinh":return[re.R(C("x",t,e,n))];case"Softplus":return[se.W(C("x",t,e,n))];case"Sqrt":return[ie._(C("x",t,e,n))];case"Square":return[oe.h(C("x",t,e,n))];case"Tanh":return[ae.A(C("x",t,e,n))];case"Tan":return[ue.O(C("x",t,e,n))];case"ClipByValue":return[ce.i(C("x",t,e,n),C("clipValueMin",t,e,n),C("clipValueMax",t,e,n))];case"Relu6":return[le.b(C("x",t,e,n))];case"Rsqrt":return[he.b(E(t.inputNames[0],e,n))];case"Prod":return[de.W(C("x",t,e,n),C("axes",t,e,n))];case"LeakyRelu":return[fe.h(C("x",t,e,n),C("alpha",t,e,n))];case"Prelu":return[pe.A(C("x",t,e,n),C("alpha",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"control":return ge(t,e,n);case"convolution":return k.lub((()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const r=C("stride",t,e,n),s=C("pad",t,e,n),i=C("dataFormat",t,e,n).toUpperCase(),o=C("dilation",t,e,n);return[xe.P(C("x",t,e,n),C("filter",t,e,n),r,s,i,o)]}case"Conv2D":{const r=C("strides",t,e,n),s=T(t,e,n),i=C("dataFormat",t,e,n).toUpperCase(),o=C("dilations",t,e,n);return[we.T(C("x",t,e,n),C("filter",t,e,n),[r[1],r[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:i,dilations:o,biasArg:a,preluArg:u,activationFunc:c,leakyreluAlpha:l}=Oe(t,e,n);return[ve.Te({x:C("x",t,e,n),filter:C("filter",t,e,n),strides:[r[1],r[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:a,activation:c,preluActivationWeights:u,leakyreluAlpha:l})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:i,dilations:o,biasArg:a,preluArg:u,activationFunc:c,leakyreluAlpha:l}=Oe(t,e,n);return[ve.B1({x:C("x",t,e,n),filter:C("filter",t,e,n),strides:[r[1],r[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:a,activation:c,preluActivationWeights:u,leakyreluAlpha:l})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=C("outputShape",t,e,n),s=C("strides",t,e,n),i=T(t,e,n);return[ke.b(C("x",t,e,n),C("filter",t,e,n),r,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=C("strides",t,e,n),s=T(t,e,n),i=C("dilations",t,e,n),o=C("dataFormat",t,e,n).toUpperCase();return[$e.B(C("input",t,e,n),C("filter",t,e,n),[r[1],r[2]],s,o,[i[1],i[2]])]}case"Conv3D":{const r=C("strides",t,e,n),s=C("pad",t,e,n),i=C("dataFormat",t,e,n).toUpperCase(),o=C("dilations",t,e,n);return[Ne.p(C("x",t,e,n),C("filter",t,e,n),[r[1],r[2],r[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{const r=C("strides",t,e,n),s=C("pad",t,e,n),i=C("kernelSize",t,e,n);return[Ce.w(C("x",t,e,n),[i[1],i[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=C("strides",t,e,n),s=C("pad",t,e,n),i=C("kernelSize",t,e,n);return[Ee._(C("x",t,e,n),[i[1],i[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=C("strides",t,e,n),s=C("pad",t,e,n),i=C("kernelSize",t,e,n),o=C("includeBatchInIndex",t,e,n),{result:a,indexes:u}=Se(C("x",t,e,n),[i[1],i[2]],[r[1],r[2]],s,o);return[a,u]}case"AvgPool3D":{const r=C("strides",t,e,n),s=C("pad",t,e,n),i=C("kernelSize",t,e,n);return[Ae.u(C("x",t,e,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=C("strides",t,e,n),s=C("pad",t,e,n),i=C("kernelSize",t,e,n);return[Re.Y(C("x",t,e,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=C("strides",t,e,n),s=C("pad",t,e,n),i=C("dilations",t,e,n),o=r[1],a=r[2],u=i[1],c=i[2];return[Te.W(C("x",t,e,n),C("filter",t,e,n),[o,a],s,[u,c],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"creation":return k.lub((()=>((t,e,n)=>{switch(t.op){case"Fill":{const r=C("shape",t,e,n),s=C("dtype",t,e,n),i=C("value",t,e,n);return[Ie.h(r,i,s)]}case"LinSpace":return[Fe(C("start",t,e,n),C("stop",t,e,n),C("num",t,e,n))];case"Multinomial":{const r=C("logits",t,e,n),s=C("numSamples",t,e,n),i=C("seed",t,e,n);return[Me(r,s,i)]}case"OneHot":{const r=C("indices",t,e,n),s=C("depth",t,e,n),i=C("onValue",t,e,n),o=C("offValue",t,e,n);return[De.l(r,s,i,o)]}case"Ones":return[Le.i(C("shape",t,e,n),C("dtype",t,e,n))];case"OnesLike":return[Pe.J(C("x",t,e,n))];case"RandomUniform":return[Ve.L(C("shape",t,e,n),C("minval",t,e,n),C("maxval",t,e,n),C("dtype",t,e,n))];case"Range":{const r=C("start",t,e,n),s=C("stop",t,e,n),i=C("step",t,e,n);return[ze.w(r,s,i,C("dtype",t,e,n))]}case"TruncatedNormal":{const r=C("shape",t,e,n),s=C("mean",t,e,n),i=C("stdDev",t,e,n),o=C("seed",t,e,n);return[Be.X(r,s,i,C("dtype",t,e,n),o)]}case"Zeros":return[We.l(C("shape",t,e,n),C("dtype",t,e,n))];case"ZerosLike":return[Ue.P(C("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:a,softNmsSigma:u}=Ye(t,e,n),c=await Ge.BHj.nonMaxSuppressionWithScoreAsync(r,s,i,o,a,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:a}=Ye(t,e,n),u=C("padToMaxOutputSize",t,e,n),c=await Ge.BHj.nonMaxSuppressionPaddedAsync(r,s,i,o,a,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:a}=Ye(t,e,n);return[await Ge.BHj.nonMaxSuppressionAsync(r,s,i,o,a)]}case"Where":{const r=je.p(C("condition",t,e,n),"bool"),s=[await qe(r)];return r.dispose(),s}case"ListDiff":return Je(C("x",t,e,n),C("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"evaluation":return k.lub((()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const r=C("x",t,e,n),s=C("k",t,e,n),i=C("sorted",t,e,n),o=Ke.h(r,s,i);return[o.values,o.indices]}case"Unique":{const r=C("x",t,e,n),s=Qe.T(r);return[s.values,s.indices]}case"UniqueV2":{const r=C("x",t,e,n),s=C("axis",t,e,n),i=Qe.T(r,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"image":return k.lub((()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const r=C("images",t,e,n),s=C("size",t,e,n),i=C("alignCorners",t,e,n),o=C("halfPixelCenters",t,e,n);return[Ge.BHj.resizeBilinear(r,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{const r=C("images",t,e,n),s=C("size",t,e,n),i=C("alignCorners",t,e,n),o=C("halfPixelCenters",t,e,n);return[Ge.BHj.resizeNearestNeighbor(r,[s[0],s[1]],i,o)]}case"CropAndResize":{const r=C("image",t,e,n),s=C("boxes",t,e,n),i=C("boxInd",t,e,n),o=C("cropSize",t,e,n),a=C("method",t,e,n),u=C("extrapolationValue",t,e,n);return[Ge.BHj.cropAndResize(r,s,i,o,a,u)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"graph":return k.lub((()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const r=C("default",t,e,n);return[E(t.name,e,n)||r];case"Placeholder":return[E(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[O(C("x",t,e,n))];case"IdentityN":return C("x",t,e,n).map((t=>O(t)));case"Snapshot":return[O(C("x",t,e,n))];case"Shape":return[Ze.R(C("x",t,e,n).shape,"int32")];case"ShapeN":return C("x",t,e,n).map((t=>Ze.R(t.shape)));case"Size":return[tn.i(C("x",t,e,n).size,"int32")];case"Rank":return[tn.i(C("x",t,e,n).rank,"int32")];case"NoOp":return[tn.i(1)];case"Print":const s=C("x",t,e,n),i=C("data",t,e,n),o=C("message",t,e,n),a=C("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let t=0;t<i.length;t++)console.log(Array.prototype.slice.call(i[t].dataSync()).slice(0,a));return[s];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"logical":return k.lub((()=>((t,e,n)=>{switch(t.op){case"Equal":return[nn.D(C("a",t,e,n),C("b",t,e,n))];case"NotEqual":return[rn.Q(C("a",t,e,n),C("b",t,e,n))];case"Greater":return[sn.p(C("a",t,e,n),C("b",t,e,n))];case"GreaterEqual":return[on.b(C("a",t,e,n),C("b",t,e,n))];case"Less":return[an.d(C("a",t,e,n),C("b",t,e,n))];case"LessEqual":return[un.z(C("a",t,e,n),C("b",t,e,n))];case"LogicalAnd":return[cn.H(C("a",t,e,n),C("b",t,e,n))];case"LogicalNot":return[ln.h(C("a",t,e,n))];case"LogicalOr":return[hn.K(C("a",t,e,n),C("b",t,e,n))];case"Select":case"SelectV2":return[dn.a(C("condition",t,e,n),C("a",t,e,n),C("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"matrices":return k.lub((()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[fn.O(C("a",t,e,n),C("b",t,e,n),C("transposeA",t,e,n),C("transposeB",t,e,n))];case"Transpose":return[pn.p(C("x",t,e,n),C("perm",t,e,n))];case"_FusedMatMul":const[r,s]=C("fusedOps",t,e,n),i="biasadd"===r,o="prelu"===s,a=C("numArgs",t,e,n),u=C("leakyreluAlpha",t,e,n);if(i){if(o&&2!==a)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==a)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,l]=C("args",t,e,n);return[ve.OI({a:C("a",t,e,n),b:C("b",t,e,n),transposeA:C("transposeA",t,e,n),transposeB:C("transposeB",t,e,n),bias:c,activation:s,preluActivationWeights:l,leakyreluAlpha:u})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"normalization":return k.lub((()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[mn.t(C("x",t,e,n),C("mean",t,e,n),C("variance",t,e,n),C("offset",t,e,n),C("scale",t,e,n),C("epsilon",t,e,n))];case"LRN":return[bn.G(C("x",t,e,n),C("radius",t,e,n),C("bias",t,e,n),C("alpha",t,e,n),C("beta",t,e,n))];case"Softmax":return[yn.X(C("x",t,e,n))];case"LogSoftmax":return[gn.C(C("x",t,e,n))];case"SparseToDense":return[xn(C("sparseIndices",t,e,n),C("outputShape",t,e,n),C("sparseValues",t,e,n),C("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"reduction":return k.lub((()=>((t,e,n)=>{switch(t.op){case"Max":{const r=C("axis",t,e,n),s=C("keepDims",t,e,n);return[wn.F(C("x",t,e,n),r,s)]}case"Mean":{const r=C("axis",t,e,n),s=C("keepDims",t,e,n);return[vn.J(C("x",t,e,n),r,s)]}case"Min":{const r=C("axis",t,e,n),s=C("keepDims",t,e,n);return[kn.V(C("x",t,e,n),r,s)]}case"Sum":{const r=C("axis",t,e,n),s=C("keepDims",t,e,n);return[$n.S(C("x",t,e,n),r,s)]}case"All":{const r=C("axis",t,e,n),s=C("keepDims",t,e,n);return[Nn.$(C("x",t,e,n),r,s)]}case"Any":{const r=C("axis",t,e,n),s=C("keepDims",t,e,n);return[Cn.Y(C("x",t,e,n),r,s)]}case"ArgMax":{const r=C("axis",t,e,n);return[En.N(C("x",t,e,n),r)]}case"ArgMin":{const r=C("axis",t,e,n);return[Sn.v(C("x",t,e,n),r)]}case"Prod":{const r=C("axis",t,e,n),s=C("keepDims",t,e,n);return[de.W(C("x",t,e,n),r,s)]}case"Cumsum":{const r=C("axis",t,e,n),s=C("exclusive",t,e,n),i=C("reverse",t,e,n);return[An.z(C("x",t,e,n),r,s,i)]}case"Bincount":const r=C("x",t,e,n),s=C("weights",t,e,n),i=C("size",t,e,n);return[Rn(r,s,i)];case"DenseBincount":{const r=C("x",t,e,n),s=C("weights",t,e,n),i=C("size",t,e,n),o=C("binaryOutput",t,e,n);return[Tn(r,s,i,o)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"slice_join":return k.lub((()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const r=C("n",t,e,n),s=C("axis",t,e,n);let i=C("tensors",t,e,n);return i=i.slice(0,r),[On.z(i,s)]}case"Gather":{const r=C("x",t,e,n),s=C("indices",t,e,n);return[In.I(r,je.p(s,"int32"),0)]}case"GatherV2":{const r=C("axis",t,e,n),s=C("batchDims",t,e,n),i=C("x",t,e,n),o=C("indices",t,e,n);return[In.I(i,je.p(o,"int32"),r,s)]}case"Reverse":{const r=C("dims",t,e,n),s=[];for(let t=0;t<r.length;t++)r[t]&&s.push(t);const i=C("x",t,e,n);return[Fn.G(i,s)]}case"ReverseV2":{const r=C("axis",t,e,n),s=C("x",t,e,n);return[Fn.G(s,r)]}case"Slice":{const r=C("begin",t,e,n),s=C("size",t,e,n);return[_n.t(C("x",t,e,n),r,s)]}case"StridedSlice":{const r=C("begin",t,e,n),s=C("end",t,e,n),i=C("strides",t,e,n),o=C("beginMask",t,e,n),a=C("endMask",t,e,n),u=C("ellipsisMask",t,e,n),c=C("newAxisMask",t,e,n),l=C("shrinkAxisMask",t,e,n),h=C("x",t,e,n);return[Mn.N(h,r,s,i,o,a,u,c,l)]}case"Pack":return(0,k.lub)((()=>{const r=C("axis",t,e,n),s=C("tensors",t,e,n),i=s[0].shape,o=Dn.L(s[0]).shape,a=s.map((t=>{const e=k.D5U.cO(t.shape,i);if(!e&&!k.D5U.cO(Dn.L(t).shape,o))throw new Error("the input tensors shape does not match");return e?t:_e.X(t,i)}));return[Ln.k(a,r)]}));case"Unpack":{const r=C("axis",t,e,n),s=C("tensor",t,e,n);return Pn.H(s,r)}case"Tile":{const r=C("reps",t,e,n);return[Vn.G(C("x",t,e,n),r)]}case"Split":case"SplitV":{const r=C("axis",t,e,n),s=C("numOrSizeSplits",t,e,n),i=C("x",t,e,n);return zn.V(i,s,r)}case"ScatterNd":{const r=C("indices",t,e,n),s=C("values",t,e,n),i=C("shape",t,e,n);return[Wn(r,s,i)]}case"GatherNd":{const r=C("x",t,e,n),s=C("indices",t,e,n);return[Un(r,s)]}case"SparseToDense":{const r=C("sparseIndices",t,e,n),s=C("outputShape",t,e,n),i=C("sparseValues",t,e,n),o=C("defaultValue",t,e,n);return[xn(r,i,s,i.dtype===o.dtype?o:je.p(o,i.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"spectral":return k.lub((()=>((t,e,n)=>{switch(t.op){case"FFT":return[Gn.k(C("x",t,e,n))];case"IFFT":return[jn.S(C("x",t,e,n))];case"RFFT":return[Hn.Q(C("x",t,e,n))];case"IRFFT":return[qn.w(C("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"transformation":return k.lub((()=>((t,e,n)=>{switch(t.op){case"Cast":return[je.p(C("x",t,e,n),C("dtype",t,e,n))];case"ExpandDims":{const r=C("axis",t,e,n);return[Xn.d(C("x",t,e,n),r)]}case"Squeeze":{const r=C("axis",t,e,n);return[Dn.L(C("x",t,e,n),r)]}case"Reshape":return[_e.X(C("x",t,e,n),C("shape",t,e,n))];case"MirrorPad":return[Jn.V(C("x",t,e,n),C("padding",t,e,n),C("mode",t,e,n))];case"PadV2":case"Pad":return[Yn.v(C("x",t,e,n),C("padding",t,e,n),C("constantValue",t,e,n))];case"SpaceToBatchND":{const r=C("blockShape",t,e,n),s=C("paddings",t,e,n);return[Kn.f(C("x",t,e,n),r,s)]}case"BatchToSpaceND":{const r=C("blockShape",t,e,n),s=C("crops",t,e,n);return[Qn.E(C("x",t,e,n),r,s)]}case"DepthToSpace":{const r=C("blockSize",t,e,n),s=C("dataFormat",t,e,n).toUpperCase();return[Zn.n(C("x",t,e,n),r,s)]}case"BroadcastTo":return[tr.U(C("x",t,e,n),C("shape",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"hash_table":return(async(t,e,n,r)=>{switch(t.op){case"HashTable":case"HashTableV2":{const s=C("keyDType",t,e,n),i=C("valueDType",t,e,n),o=new en(s,i);return r.addHashTable(t.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{const s=C("tableHandle",t,e,n,r),i=C("keys",t,e,n),o=C("values",t,e,n),a=r.getHashTableById(s.id);return[await a.import(i,o)]}case"LookupTableFind":case"LookupTableFindV2":{const s=C("tableHandle",t,e,n,r),i=C("keys",t,e,n),o=C("defaultValue",t,e,n),a=r.getHashTableById(s.id);return[await a.find(i,o)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n,r);case"custom":const s=N(t.op);if(s&&s.customExecutor)return s.customExecutor(new lt(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return k.D5U.tI(s)?s.then((t=>[].concat(t))):[].concat(s)}class nr{constructor(t={},e={},n={},r={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map((t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`)).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function rr(t,e,n,r){const s=new Set,i=[];let o=null,a=null;const u=new Set,c=Object.keys(t).map((t=>R(t)[0]));let l=[];null!=r&&(l=r.map((t=>R(t.name)[0])));const h=[...e];for(;h.length>0;){const t=h.pop();(ar(t)||ur(t)||cr(t))&&null==o&&(o=t,a=o.children.map((t=>t.name)).filter((t=>s.has(t)))),s.add(t.name),null==n[t.name]&&(-1===c.indexOf(t.name)&&-1===l.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach((t=>{u.has(t.name)||(u.add(t.name),h.push(t))})):i.push(t.name)))}return{inputs:t,outputs:e,usedNodes:s,missingInputs:i,dynamicNode:o,syncInputs:a}}const sr=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],ir=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],or=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function ar(t){return sr.indexOf(t.op)>=0}function ur(t){return ir.indexOf(t.op)>=0}function cr(t){return or.indexOf(t.op)>=0}class lr{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach((e=>{this._functionExecutorMap[e]=new lr(t.functions[e],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map((e=>t[e].map((t=>t.id))));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((t=>t.signatureKey||t.name))}get outputNodes(){return this._outputs.map((t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e}))}get functions(){return Object.keys(this._functions).reduce(((t,e)=>(t[e]=this._functions[e].signature,t)),{})}getCompilationKey(t,e){const n=t.map((t=>t.name)).sort(),r=e.map((t=>t.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const n=rr(t,e,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:i}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){const n=e.map((t=>t.name)),s=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return function(t,e,n){const{usedNodes:r,inputs:s}=n,i=[],o=Object.keys(s).map((t=>R(t)[0])).map((e=>t.nodes[e])),a=t.initNodes;o.forEach((t=>{r.has(t.name)&&i.push(t)})),t.weights.forEach((t=>{r.has(t.name)&&i.push(t)})),null!=a&&a.forEach((t=>{r.has(t.name)&&i.push(t)}));const u=new Set,c=[];for(;i.length>0;){const t=i.pop();u.add(t.name),e[t.name]||c.push(t),t.children.forEach((t=>{!u.has(t.name)&&r.has(t.name)&&t.inputs.every((t=>u.has(t.name)))&&i.push(t)}))}return c}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=n.map((t=>this.graph.nodes[R(t)[0]])),s=e.map((t=>R(t)[0]));let i=s.map((t=>this.graph.nodes[t]));0===i.length&&(i=this._outputs);const o=this.getCompilationKey(r,i);let a=this.compiledMap.get(o);null==a&&(a=this.compile(t,i),this.compiledMap.set(o,a));const u={},c={};return(0,k.lub)((()=>{const n=new nr(this.weightMap,u,c,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,s]=R(e),i=[];i[s]=t[e],r[n]=i}));const i=this.getFrozenTensorIds(r),o={};for(let t=0;t<a.length;t++){const e=a[t];if(!r[e.name]){const t=er(e,r,n,this._resourceManager);if(k.D5U.tI(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.checkTensorForDisposal(e.name,e,r,n,i,s,o)}}return null==this.parent&&n.dispose(i),e.map((t=>E(t,r,n)))}))}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map((e=>t[e])).map((t=>t.map((t=>t.id)))));return new Set(e)}checkTensorForDisposal(t,e,n,r,s,i,o){"control"!==e.category&&-1===i.indexOf(t)&&(n[t].forEach((t=>{null!=t&&(o[t.id]=(o[t.id]||0)+e.children.length)})),e.inputs.forEach((t=>{if("control"!==t.category){const e=function(t,e,n){return e[A(t,n.currentContextId)]}(t.name,n,r);null!=e&&e.forEach((t=>{if(t&&!s.has(t.id)){const e=o[t.id];1===e?(t.dispose(),delete o[t.id]):null!=e&&o[t.id]--}}))}})))}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e,n=!1,r={},s={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));const i=new nr(this.weightMap,r,s,this.functionExecutorMap),o=await this.executeWithControlFlow(t,i,e,n),a=e.map((t=>E(t,o,i))),u=a.map((t=>t.id)),c=Object.keys(t).map((e=>t[e].id)),l=new Set([...u,...c,...this.weightIds]);return Object.keys(o).forEach((t=>{o[t].forEach((t=>{!t||t.isDisposed||l.has(t.id)||t.dispose()}))})),null==this.parent&&i.dispose(l),a}async executeFunctionAsync(t,e,n){const r=t.reduce(((t,e,n)=>(t[this.inputs[n].name]=e,t)),{});return this._executeAsync(r,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,r){const s=Object.keys(t),i=s.map((t=>this.graph.nodes[R(t)[0]])),o=n.map((t=>R(t)[0]));let a=o.map((t=>this.graph.nodes[t]));0===a.length&&(a=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:l,syncInputs:h}=rr(t,a,this.weightMap,this._initNodes),d=[...i,...this.graph.weights,...this._initNodes||[]].map((t=>({node:t,contexts:e.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,r]=R(e),s=[];s[r]=t[e],f[n]=s}));const p={},m=this.getFrozenTensorIds(f),b={};for(;d.length>0;){const t=this.processStack(i,d,e,f,b,m,o,p,u);await Promise.all(t)}null!=l||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=a.filter((t=>!ar(t)&&!E(t.name,f,e))).map((t=>t.name));if(y.length>0){let t="";throw null!=l&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${t}`)}return f}processStack(t,e,n,r,s,i,o,a,u){const c=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let l="";if("Enter"===t.node.op&&C("isConstant",t.node,r,n)&&([l]=S(t.node.name,n)),null==r[t.node.name]){const h=er(t.node,r,n,this._resourceManager);l||([l]=S(t.node.name,n));const d=n.currentContext;k.D5U.tI(h)?c.push(h.then((c=>(r[l]=c,n.currentContext=d,this.checkTensorForDisposal(l,t.node,r,n,i,o,a),this.processChildNodes(t.node,e,n,r,s,u),c)))):(r[l]=h,this.checkTensorForDisposal(l,t.node,r,n,i,o,a),this.processChildNodes(t.node,e,n,r,s,u))}else this.processChildNodes(t.node,e,n,r,s,u)}return c}processChildNodes(t,e,n,r,s,i){t.children.forEach((t=>{const[o]=S(t.name,n);!s[o]&&i.has(t.name)&&("Merge"===t.op?t.inputNames.some((t=>!!E(t,r,n)))&&(s[o]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every((t=>!!E(t,r,n)))&&(s[o]=!0,e.push({contexts:n.currentContext,node:t})))}))}dispose(){Object.keys(this.weightMap).forEach((t=>this.weightMap[t].forEach((t=>t.dispose()))))}checkInputShapeAndType(t){Object.keys(t).forEach((e=>{const n=t[e],[r]=R(e),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const t=s.attrParams.shape.value,e=t.length===n.shape.length&&n.shape.every(((e,n)=>-1===t[n]||t[n]===e));k.D5U.hu(e,(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${t}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&k.D5U.hu(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(t){const e={};for(const n in t)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){e[this._signature.inputs[n].name]=t[n]}else e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter((t=>{const[e]=R(t);return null==this.graph.nodes[e]}));if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map((t=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]){return this._signature.outputs[t].name}return t}),{})}checkOutputs(t){t.forEach((t=>{const[e]=R(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)}))}}class hr{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class dr{constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={}),this.resourceManager=new hr}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=k.io.MP(t,this.loadOptions);else{const e=k.io.rM(t,this.loadOptions);if(0===e.length)e.push(k.io.MP(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const r=k.io.dI(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new lr(J.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){const e=J.Instance.transformGraph(t.modelInitializer);this.initializer=new lr(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"==typeof t){const e=k.io.yB(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof k.esB||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce(((e,n,r)=>(e[n]=t[r],e)),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce(((e,n)=>(e[n]=[t[n]],e)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function fr(t,e={}){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t=`${t}model.json?tfjs-format=file`);const n=new dr(t,e);return await n.load(),n}const pr="2.8.3"},8713:(t,e,n)=>{"use strict";n.d(e,{JL:()=>r,Zu:()=>s});class r{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class s{time(t){return i("time")}read(t){return i("read")}readSync(t){return i("readSync")}numDataIds(){return i("numDataIds")}disposeData(t){return i("disposeData")}write(t,e,n){return i("write")}move(t,e,n,r){return i("move")}memory(){return i("memory")}floatPrecision(){return i("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,r){return i("batchMatMul")}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:o,preluActivationWeights:a}){return i("fusedBatchMatMul")}slice(t,e,n){return i("slice")}stridedSlice(t,e,n,r){return i("stridedSlice")}unstack(t,e){return i("unstack")}reverse(t,e){return i("reverse")}concat(t,e){return i("concat")}neg(t){return i("neg")}add(t,e){return i("add")}addN(t){return i("addN")}subtract(t,e){return i("subtract")}multiply(t,e){return i("multiply")}realDivide(t,e){return i("realDivide")}floorDiv(t,e){return i("floorDiv")}sum(t,e){return i("sum")}prod(t,e){return i("prod")}unsortedSegmentSum(t,e,n){return i("unsortedSegmentSum")}argMin(t,e){return i("argMin")}argMax(t,e){return i("argMax")}equal(t,e){return i("equal")}notEqual(t,e){return i("notEqual")}less(t,e){return i("less")}lessEqual(t,e){return i("lessEqual")}greater(t,e){return i("greater")}greaterEqual(t,e){return i("greaterEqual")}logicalNot(t){return i("logicalNot")}logicalAnd(t,e){return i("logicalAnd")}logicalOr(t,e){return i("logicalOr")}where(t){return i("where")}select(t,e,n){return i("select")}topk(t,e,n){return i("topk")}min(t,e){return i("min")}minimum(t,e){return i("minimum")}mod(t,e){return i("mod")}max(t,e){return i("max")}maximum(t,e){return i("maximum")}all(t,e){return i("all")}any(t,e){return i("any")}squaredDifference(t,e){return i("squaredDifference")}ceil(t){return i("ceil")}floor(t){return i("floor")}round(t){return i("round")}sign(t){return i("sign")}isNaN(t){return i("isNaN")}isInf(t){return i("isInf")}isFinite(t){return i("isFinite")}pow(t,e){return i("pow")}exp(t){return i("exp")}expm1(t){return i("expm1")}softmax(t,e){return i("softmax")}log(t){return i("log")}log1p(t){return i("log1p")}sqrt(t){return i("sqrt")}rsqrt(t){return i("rsqrt")}square(t){return i("square")}reciprocal(t){return i("reciprocal")}relu(t){return i("relu")}relu6(t){return i("relu6")}prelu(t,e){return i("prelu")}elu(t){return i("elu")}eluDer(t,e){return i("eluDer")}selu(t){return i("selu")}int(t){return i("int")}clip(t,e,n){return i("clip")}abs(t){return i("abs")}complexAbs(t){return i("complexAbs")}sigmoid(t){return i("sigmoid")}softplus(t){return i("softplus")}sin(t){return i("sin")}cos(t){return i("cos")}tan(t){return i("tan")}asin(t){return i("asin")}acos(t){return i("acos")}atan(t){return i("atan")}atan2(t,e){return i("atan2")}sinh(t){return i("sinh")}cosh(t){return i("cosh")}tanh(t){return i("tanh")}asinh(t){return i("asinh")}acosh(t){return i("acosh")}atanh(t){return i("atanh")}erf(t){return i("erf")}step(t,e){return i("step")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:o}){return i("fusedConv2d")}conv2d(t,e,n){return i("conv2d")}conv2dDerInput(t,e,n){return i("conv2dDerInput")}conv2dDerFilter(t,e,n){return i("conv2dDerFilter")}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:o}){return i("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return i("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return i("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return i("depthwiseConv2DDerFilter")}conv3d(t,e,n){return i("conv3d")}conv3dDerInput(t,e,n){return i("conv3dDerInput")}conv3dDerFilter(t,e,n){return i("conv3dDerFilter")}maxPool(t,e){return i("maxPool")}maxPoolBackprop(t,e,n,r){return i("maxPoolBackprop")}avgPool(t,e){return i("avgPool")}avgPoolBackprop(t,e,n){return i("avgPoolBackprop")}avgPool3d(t,e){return i("avgPool3d")}avgPool3dBackprop(t,e,n){return i("avgPool3dBackprop")}maxPool3d(t,e){return i("maxPool3d")}maxPool3dBackprop(t,e,n,r){return i("maxPool3dBackprop")}reshape(t,e){return i("reshape")}cast(t,e){return i("cast")}tile(t,e){return i("tile")}pad(t,e,n){return i("pad")}transpose(t,e){return i("transpose")}gather(t,e,n,r=0){return i("gather")}gatherND(t,e){return i("gatherND")}scatterND(t,e,n){return i("scatterND")}batchToSpaceND(t,e,n){return i("batchToSpaceND")}spaceToBatchND(t,e,n){return i("spaceToBatchND")}resizeBilinear(t,e,n,r,s){return i("resizeBilinear")}resizeBilinearBackprop(t,e,n){return i("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,r,s){return i("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return i("resizeNearestNeighborBackprop")}batchNorm(t,e,n,r,s,o){return i("batchNorm")}localResponseNormalization4D(t,e,n,r,s){return i("localResponseNormalization4D")}LRNGrad(t,e,n,r,s,o,a){return i("LRNGrad")}multinomial(t,e,n,r){return i("multinomial")}oneHot(t,e,n,r){return i("oneHot")}cumsum(t,e,n,r){return i("cumsum")}nonMaxSuppression(t,e,n,r,s){return i("nonMaxSuppression")}fft(t){return i("fft")}ifft(t){return i("ifft")}complex(t,e){return i("complex")}real(t){return i("real")}imag(t){return i("imag")}cropAndResize(t,e,n,r,s,o){return i("cropAndResize")}depthToSpace(t,e,n){return i("depthToSpace")}split(t,e,n){return i("split")}sparseToDense(t,e,n,r){return i("sparseToDense")}diag(t){return i("diag")}fill(t,e,n){return i("fill")}onesLike(t){return i("onesLike")}zerosLike(t){return i("zerosLike")}linspace(t,e,n){return i("linspace")}dispose(){return i("dispose")}}function i(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},3337:(t,e,n)=>{"use strict";function r(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,s=t.length,i=0,o=!1;for(;r<s;){i=r+(s-r>>>1);const a=n(e,t[i]);a>0?r=i+1:(s=i,o=!a)}return o?r:-r-1}(t,e,n||s)}(t,e,n),i=r<0?-(r+1):r;t.splice(i,0,e)}function s(t,e){return t>e?1:t<e?-1:0}function i(t,e,n,r,s){return u(t,e,n,r,s,0)}function o(t,e,n,r,s,i){return u(t,e,n,r,s,0,!1,i,!0)}function a(t,e,n,r,s,i){return u(t,e,n,r,s,i,!0)}function u(t,e,n,s,i,o,a=!1,u=!1,d=!1){const f=[];for(let t=0;t<e.length;t++)e[t]>i&&f.push({score:e[t],boxIndex:t,suppressBeginIndex:0});f.sort(h);const p=o>0?-.5/o:0,m=[],b=[];for(;m.length<n&&f.length>0;){const e=f.pop(),{score:n,boxIndex:o,suppressBeginIndex:a}=e;if(n<i)break;let u=!1;for(let n=m.length-1;n>=a;--n){const r=c(t,o,m[n]);if(r>=s){u=!0;break}if(e.score=e.score*l(s,p,r),e.score<=i)break}e.suppressBeginIndex=m.length,u||(e.score===n?(m.push(o),b.push(e.score)):e.score>i&&r(f,e,h))}const y=m.length,g=n-y;u&&g>0&&(m.push(...new Array(g).fill(0)),b.push(...new Array(g).fill(0)));const x={selectedIndices:m};return a&&(x.selectedScores=b),d&&(x.validOutputs=y),x}function c(t,e,n){const r=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),a=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(s[0],s[2]),l=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),f=(a-i)*(u-o),p=(h-c)*(d-l);if(f<=0||p<=0)return 0;const m=Math.max(i,c),b=Math.max(o,l),y=Math.min(a,h),g=Math.min(u,d),x=Math.max(y-m,0)*Math.max(g-b,0);return x/(f+p-x)}function l(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function h(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}n.d(e,{GP:()=>i,qP:()=>o,pA:()=>a})},8333:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(2657);function s(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const s=(0,r.f)(t,"int32"),i=(0,r.f)([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const r=s.indexToLoc(n[e]),o=e*t.length;i.values.set(r,o)}return i.toTensor()}},7097:(t,e,n)=>{"use strict";n.d(e,{BV:()=>g,wv:()=>y});var r=n(8713),s=n(2885),i=n(5938),o=n(9121),a=n(6151),u=n(569);class c{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new h)}profileKernel(t,e,n){let r;const i=this.backendTimer.time((()=>{r=n()}));if((0,s.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let e=0;e<r.length;e++){const n=r[e];n.data().then((e=>{l(e,n.dtype,t)}))}return{kernelName:t,outputs:r,inputs:e,timeMs:i.then((t=>t.kernelMs)),extraInfo:i.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:s,extraInfo:i}=t;n.forEach((t=>{Promise.all([t.data(),r,i]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],s,n[2])}))}))}}function l(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class h{logKernelProfile(t,e,n,r,s,i){const o="number"==typeof r?u.oj(`${r}ms`,9):r.error,a=u.oj(t,25),c=e.rank,l=e.size,h=u.oj(e.shape.toString(),14);let d="";for(const t in s){const n=s[t];if(null!=n){const r=n.shape||e.shape,s=r.length;d+=`${t}: ${s}D ${s>0?r:""} `}}console.log(`%c${a}\t%c${o}\t%c${c}D ${h}\t%c${l}\t%c${d}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var d=n(4077),f=n(747),p=n(9155);class m{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((t=>t.name))))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class b{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new m}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new c(this.backendInstance),!0}setupRegisteredKernels(){(0,a.tr)(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){(0,a.tr)(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof r.Zu||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then((n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,s=this.readSync(e);r.disposeData(e),n.backend=t,t.move(e,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e="float32",n={x:t},r={dtype:e};return g.runKernelFunc((n=>n.cast(t,e)),n,null,o.RF,r)}})),[],{}),e}runKernel(t,e,n,r,s){return this.runKernelFunc(null,e,null,t,n,r,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let s=0;n.forEach((t=>{s+="complex64"===t.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-e-s-i;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${t}'`)}runKernelFunc(t,e,n,r,s,i,o){let u,c=[];const l=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const h=this.state.numBytes,d=this.state.numTensors;let f;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const p=(0,a.pI)(r,this.backendName);let m,b;if(null!=p)f=()=>{const t=this.backend.numDataIds();m=p.kernelFunc({inputs:e,attrs:s,backend:this.backend});const n=Array.isArray(m)?m:[m];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,t,n);const a=n.map((t=>{if(null!=t.rank)return t;const{dataId:e,shape:n,dtype:r}=t;return this.makeTensorFromDataId(e,n,r)}));if(l){let t=this.getTensorsForGradient(r,e,a);if(null==t){null==o&&(o=[]);const e=a.filter(((t,e)=>o[e]));t=(i||[]).slice().concat(e)}c=this.saveTensorsForBackwardMode(t)}return a};else{if(null==t)throw new Error(`Error running ${r}: Neither modular kernel nor forward func passed`);const e=t=>{l&&(c=t.map((t=>this.keep(this.clone(t)))))};f=()=>{const n=this.backend.numDataIds();m=this.tidy((()=>t(this.backend,e)));const s=Array.isArray(m)?m:[m];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,s),s}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(b=this.profiler.profileKernel(r,e,(()=>f())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(b),u=b.outputs):u=f()})),l&&this.addTapeNode(r,e,u,n,c,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-h,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-d,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map((t=>null!=e[t]?e[t].shape:null)),outputShapes:u.map((t=>t.shape)),kernelTimeMs:b.timeMs,extraInfo:b.extraInfo}),Array.isArray(m)?u:u[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const r=(0,a.uk)(t);if(null!=r){const t=r.inputsToSave||[],s=r.outputsToSave||[];let i;r.saveAllInputs?(u.hu(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(e).map((t=>e[t]))):i=t.map((t=>e[t]));const o=n.filter(((t,e)=>s[e]));return i.concat(o)}return null}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=t;"string"===n&&u.HD(t[0])&&(s=t.map((t=>p.YW(t))));const i=r.write(s,e,n),o=new d.es(e,n,i,this.nextTensorId());if(this.incRef(o,r),"string"===n){const t=this.state.tensorInfo.get(i),e=(0,u.Ub)(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return o}makeTensorFromDataId(t,e,n,r){n=n||"float32";const s=new d.es(e,n,t,this.nextTensorId());return this.incRef(s,r),s}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const s=new d._w(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*u.bT(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof d._w||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,s,i){const o={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},c=(0,a.uk)(t);null!=c&&(r=c.gradFunc),null!=r&&(o.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],r=u.wT(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t})),r(t.length>1?t:t[0],s,i))),this.state.activeTape.push(o)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=(0,f.Vu)(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==r.id||this.track(t)}))}gradients(t,e,n,r=!1){if(u.hu(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));u.hu(s instanceof d.es,(()=>"The result y returned by f() must be a tensor."));const i=function(t,e,n){const r={},s={};for(let t=0;t<e.length;t++)r[e[t].id]=!0;for(let n=0;n<t.length;n++){const i=t[n],o=i.inputs;for(const t in o){const n=o[t];let a=!1;for(let t=0;t<e.length;t++)if(r[n.id]){i.outputs.forEach((t=>r[t.id]=!0)),a=!0,s[i.id]=!0;break}if(a)break}}const i={};i[n.id]=!0;const o={};for(let e=t.length-1;e>=0;e--){const n=t[e],r=n.inputs;for(let t=0;t<n.outputs.length;t++)if(i[n.outputs[t].id]){for(const t in r)i[r[t].id]=!0,o[n.id]=!0;break}}const a=[];for(let e=0;e<t.length;e++){const n=t[e];if(s[n.id]&&o[n.id]){const t={};for(const e in n.inputs){const s=n.inputs[e];r[s.id]&&(t[e]=s)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,a.push(e)}}return a}(this.state.activeTape,e,s);if(!r&&0===i.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[s.id]=null==n?function(t){const e=(0,u.p8)((0,u.NA)(t),"float32");return g.makeTensor(e,t,"float32")}(s.shape):n,function(t,e,n,r){for(let s=e.length-1;s>=0;s--){const i=e[s],o=[];if(i.outputs.forEach((e=>{const n=t[e.id];null!=n?o.push(n):o.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const a=i.gradient(o);for(const e in i.inputs){if(!(e in a))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(a)}.`);const s=n((()=>a[e]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${s.dtype}'`);const o=i.inputs[e];if(!u.cO(s.shape,o.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${e}' has shape '${s.shape}', which does not match the shape of the input '${o.shape}'`);if(null==t[o.id])t[o.id]=s;else{const e=t[o.id];t[o.id]=r(e,s),e.dispose()}}}}(t,i,(t=>this.tidy(t)),x);const r=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(t){return u.hu(u.mf(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;u.hu(e.every((t=>t instanceof d.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return e.forEach(((t,e)=>{r[e]=t})),this.runKernelFunc(((r,s)=>(n=t(...e,s),u.hu(n.value instanceof d.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),u.hu(u.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),r,((t,r)=>{const s=n.gradFunc(t,r),i=Array.isArray(s)?s:[s];u.hu(i.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),u.hu(i.every((t=>t instanceof d.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return i.forEach(((t,e)=>{o[e]=()=>t})),o}))}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=(0,p.zO)(),n=await this.backend.time(t);return n.wallMs=(0,p.zO)()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new m;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function y(){const t=(0,i.D)();if(null==t._tfengine){const e=new s.qA(t);t._tfengine=new b(e)}return(0,s.iG)(t._tfengine.ENV),(0,d.Vi)((()=>t._tfengine)),t._tfengine}b.nextTensorId=0,b.nextVariableId=0;const g=y();function x(t,e){const n={a:t,b:e};return g.runKernel(o.mm,n)}},2885:(t,e,n)=>{"use strict";n.d(e,{qA:()=>i,OB:()=>o,Vi:()=>a,iG:()=>u});var r=n(569);const s="tfjsflags";class i{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if((0,r.tI)(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}(this.global.location.search);if(s in t){t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}}function o(){return a}let a=null;function u(t){a=t}},5938:(t,e,n)=>{"use strict";let r;function s(){if(null==r){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n.g)t=n.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}r=t}return r}function i(t,e){const n=function(){const t=s();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}n.d(e,{D:()=>s,R:()=>i})},4368:(t,e,n)=>{"use strict";n.d(e,{MX:()=>a,SR:()=>u,sq:()=>c,lu:()=>l,B9:()=>h,Cn:()=>d,CQ:()=>f,N_:()=>p,jq:()=>m,y3:()=>b});var r=n(7097),s=n(2885),i=n(4077),o=n(747);function a(t){(0,s.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function u(){return r.BV}function c(){return r.BV.memory()}function l(t,e){return r.BV.tidy(t,e)}function h(t){(0,o.Vu)(t).forEach((t=>t.dispose()))}function d(t){return r.BV.keep(t)}function f(t){return r.BV.setBackend(t)}function p(){return r.BV.backendName}function m(t,e,n=1){return r.BV.registerBackend(t,e,n)}function b(){return r.BV.backend}(0,i.FZ)(a)},633:(t,e,n)=>{"use strict";n.d(e,{cb:()=>a,pn:()=>o});var r=n(7097),s=n(4077),i=n(569);function o(t,e){i.hu(i.mf(t),(()=>"The f passed in variableGrads(f) must be a function")),i.hu(null==e||Array.isArray(e)&&e.every((t=>t instanceof s._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in r.BV.registeredVariables)e.push(r.BV.registeredVariables[t])}const o=n?e.filter((t=>!t.trainable)):null,a=e.length;e=e.filter((t=>t.trainable)),i.hu(e.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:u,grads:c}=r.BV.gradients(t,e,null,!0);i.hu(c.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),i.hu(0===u.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`));const l={};return e.forEach(((t,e)=>{null!=c[e]&&(l[t.name]=c[e])})),null!=o&&o.forEach((t=>l[t.name]=null)),{value:u,grads:l}}function a(t){return r.BV.customGrad(t)}},3976:(t,e,n)=>{"use strict";n.d(e,{SYM:()=>gt.SY,VGw:()=>gt.VG,SpW:()=>gt.Sp,mm_:()=>gt.mm,Xze:()=>gt.Xz,oT6:()=>gt.oT,IKK:()=>gt.IK,sJF:()=>gt.sJ,aJk:()=>gt.aJ,M2y:()=>gt.M2,qw7:()=>gt.qw,jMg:()=>gt.jM,QCc:()=>gt.QC,Oyi:()=>gt.Oy,JhU:()=>gt.Jh,_k9:()=>gt._k,IMb:()=>gt.IM,ROF:()=>gt.RO,XLW:()=>gt.XL,zws:()=>gt.zw,zvY:()=>gt.zv,RFZ:()=>gt.RF,gJX:()=>gt.gJ,xnO:()=>gt.xn,Zz9:()=>gt.Zz,yj2:()=>gt.yj,Eh3:()=>gt.Eh,mhS:()=>gt.mh,wUP:()=>gt.wU,wm:()=>gt.wm,x12:()=>gt.x1,o2y:()=>gt.o2,ik2:()=>gt.ik,mc4:()=>gt.mc,TR1:()=>gt.TR,VcC:()=>gt.Vc,iHb:()=>gt.iH,JLz:()=>fn.JL,QRR:()=>gt.QR,T0n:()=>gt.T0,cie:()=>gt.ci,sL$:()=>gt.sL,y7R:()=>gt.y7,$w:()=>gt.$w,p4S:()=>gt.p4,Vn9:()=>gt.Vn,ekb:()=>gt.ek,ViN:()=>m.Vi,SX0:()=>gt.SX,HEU:()=>gt.HE,hdR:()=>gt.hd,Omj:()=>gt.Om,NEP:()=>gt.NE,YFo:()=>gt.YF,Y0y:()=>gt.Y0,vwp:()=>gt.vw,deh:()=>gt.de,Uyb:()=>gt.Uy,OR:()=>gt.OR,jeX:()=>gt.je,eBW:()=>gt.eB,sHE:()=>gt.sH,_V0:()=>gt._V,luS:()=>gt.lu,q1x:()=>gt.q1,qi_:()=>gt.qi,iZT:()=>gt.iZ,Acj:()=>gt.Ac,Qg5:()=>gt.Qg,iJz:()=>gt.iJ,J_u:()=>gt.J_,avt:()=>gt.av,iWB:()=>gt.iW,r7n:()=>gt.r7,Zuw:()=>fn.Zu,eZ0:()=>gt.eZ,Hhh:()=>gt.Hh,J$2:()=>gt.J$,vtC:()=>gt.vt,CAk:()=>gt.CA,e7N:()=>gt.e7,ZbH:()=>gt.Zb,kU:()=>gt.kU,PYm:()=>gt.PY,VfG:()=>gt.Vf,MZg:()=>gt.MZ,YoZ:()=>gt.Yo,mTV:()=>gt.mT,OAf:()=>gt.OA,OU7:()=>gt.OU,OV7:()=>gt.OV,vFR:()=>gt.vF,BMI:()=>gt.BM,q2K:()=>gt.q2,c17:()=>gt.c1,q8u:()=>gt.q8,jQs:()=>gt.jQ,Vbg:()=>gt.Vb,NZg:()=>gt.NZ,wYn:()=>gt.wY,kuV:()=>gt.ku,uv1:()=>gt.uv,cye:()=>gt.cy,W0H:()=>gt.W0,yQU:()=>gt.yQ,we_:()=>gt.we,qWM:()=>gt.qW,gaJ:()=>Qt,QiL:()=>gt.Qi,lyA:()=>gt.ly,pe_:()=>gt.pe,o0g:()=>gt.o0,DlI:()=>gt.Dl,e6w:()=>gt.e6,xJR:()=>gt.xJ,oHH:()=>gt.oH,$HU:()=>gt.$H,qkr:()=>gt.qk,SbG:()=>gt.Sb,HZH:()=>gt.HZ,_Yw:()=>gt._Y,zbQ:()=>gt.zb,dpD:()=>gt.dp,Hmb:()=>gt.Hm,mKl:()=>gt.mK,b9H:()=>gt.b9,e07:()=>gt.e0,bV0:()=>gt.bV,xQA:()=>gt.xQ,PhF:()=>gt.Ph,oFR:()=>gt.oF,a5O:()=>gt.a5,i5y:()=>gt.i5,RQH:()=>gt.RQ,wYB:()=>gt.w3,p2w:()=>gt.p2,Gcp:()=>gt.Gc,MRv:()=>gt.MR,TQc:()=>gt.TQ,D2d:()=>gt.D2,L8s:()=>gt.L8,FKq:()=>gt.FK,bK0:()=>gt.bK,_tC:()=>gt._t,h8e:()=>gt.h8,jQk:()=>gt.m2,Tr8:()=>gt.Tr,GBy:()=>gt.GB,sEM:()=>gt.sE,MIZ:()=>gt.MI,esB:()=>at.es,YDk:()=>at.YD,n9L:()=>gt.n9,cWu:()=>gt.cW,G3Y:()=>gt.G3,kpP:()=>gt.kp,ToN:()=>gt.To,Qvg:()=>gt.Qv,RuY:()=>gt.Ru,usg:()=>gt.us,WnP:()=>te.WnP,IHx:()=>te.IHx,$6P:()=>te.$6P,YjB:()=>te.YjB,NqF:()=>te.NqF,wS1:()=>te.wS1,uR5:()=>te.uR5,y3$:()=>Jt.y3,Wap:()=>l,Dxk:()=>te.Dxk,JY5:()=>te.JY5,p3b:()=>te.p3b,Xhn:()=>i,f3b:()=>te.f3b,pju:()=>te.pju,iUl:()=>te.iUl,d9v:()=>te.d9v,zoF:()=>te.zoF,gME:()=>te.gME,Izb:()=>te.Izb,MNy:()=>te.MNy,ZaL:()=>te.ZaL,PAt:()=>te.PAt,Tek:()=>te.Tek,bc:()=>te.bc,pdZ:()=>te.pdZ,B10:()=>te.B10,C2$:()=>r,B90:()=>Jt.B9,hiC:()=>te.hiC,rvX:()=>te.rvX,pyx:()=>te.pyx,SRH:()=>Jt.SR,OBj:()=>m.OB,DgJ:()=>te.DgJ,dt4:()=>te.dt4,iyy:()=>te.iyy,hlL:()=>te.hlL,GWj:()=>te.GWj,imm:()=>te.imm,Iqj:()=>te.Iqj,DaI:()=>o,N_N:()=>Jt.N_,pjt:()=>te.pjt,brS:()=>te.brS,BHj:()=>te.BHj,io:()=>s,CnY:()=>Jt.Cn,GDt:()=>h,hi7:()=>te.hi7,$r2:()=>te.$r2,cM7:()=>te.cM7,CmS:()=>te.CmS,HvI:()=>te.HvI,Fp7:()=>te.Fp7,_sB:()=>te._sB,YQQ:()=>te.YQQ,gWQ:()=>te.gWQ,J69:()=>te.J69,sq6:()=>Jt.sq,VV$:()=>te.VV$,LTh:()=>te.LTh,Gi7:()=>te.Gi7,dC7:()=>te.dC7,W76:()=>te.W76,glt:()=>ke,Quu:()=>te.Quu,lfX:()=>te.lfX,iUs:()=>te.iUs,JpU:()=>te.JpU,vku:()=>te.vku,AL3:()=>te.AL3,nGf:()=>te.nGf,LGj:()=>te.LGj,jqO:()=>Jt.jq,wCN:()=>xt.wC,UYe:()=>te.UYe,XLQ:()=>te.XLQ,GYS:()=>te.GYS,iD$:()=>te.iD$,yV1:()=>Et,U8D:()=>te.U8D,U_I:()=>te.U_I,m7h:()=>u,CQI:()=>Jt.CQ,XD2:()=>te.XD2,tPi:()=>te.tPi,jZU:()=>te.jZU,SmN:()=>te.SmN,CnO:()=>te.CnO,p0P:()=>te.p0P,kuN:()=>a,XAC:()=>te.XAC,Wvh:()=>te.Wvh,Vl2:()=>te.Vl2,_b3:()=>te._b3,L9e:()=>te.L9e,knu:()=>te.knu,luU:()=>te.luU,Smz:()=>te.Smz,z4k:()=>Zt.z4,AEp:()=>te.AEp,XeE:()=>te.XeE,RRF:()=>te.RRF,odF:()=>te.odF,piX:()=>Ht,lub:()=>Jt.lu,Gg6:()=>te.Gg6,p_j:()=>we,p4s:()=>te.p4s,Xu6:()=>te.Xu6,HHK:()=>te.HHK,x8V:()=>Zt.x8,D5U:()=>qt,VD$:()=>te.VD$,jTM:()=>Xt,arb:()=>te.arb,lls:()=>te.lls,P84:()=>te.P84});var r={};n.r(r),n.d(r,{j:()=>p,t:()=>f});var s={};n.r(s),n.d(s,{MP:()=>yt,JY:()=>E,dI:()=>k,yz:()=>v,rM:()=>O,yB:()=>T});var i={};n.r(i),n.d(i,{n:()=>Nt});var o={};n.r(o),n.d(o,{V:()=>Ct});var a={};n.r(a),n.d(a,{assertParamsValid:()=>St,computeFlatOffset:()=>zt,computeOutShape:()=>Rt,getNormalizedAxes:()=>Ft,isSliceContinous:()=>Vt,maskToAxes:()=>At,parseSliceParams:()=>Bt,sliceInfo:()=>Wt,startForAxis:()=>Lt,startIndicesWithElidedDims:()=>_t,stopForAxis:()=>Pt,stopIndicesWithElidedDims:()=>Mt,stridesForAxis:()=>Dt,stridesWithElidedDims:()=>Tt});var u={};n.r(u),n.d(u,{iV:()=>Ut,U3:()=>Gt,ax:()=>jt});var c={};n.r(c),n.d(c,{collectGatherOpShapeInfo:()=>on,computeOutShape:()=>sn,segOpComputeOptimalWindowSize:()=>rn});var l={};n.r(l),n.d(l,{ERF_A1:()=>Be,ERF_A2:()=>We,ERF_A3:()=>Ue,ERF_A4:()=>Ge,ERF_A5:()=>je,ERF_P:()=>ze,PARALLELIZE_THRESHOLD:()=>Te,SELU_SCALE:()=>Ve,SELU_SCALEALPHA:()=>Pe,applyActivation:()=>Re.QH,assertAndGetBroadcastShape:()=>Ce.$N,assertAxesAreInnerMostDims:()=>Ne.lB,assertParamsConsistent:()=>Ee,assignToTypedArray:()=>Ze,axesAreInnerMostDims:()=>Ne.YB,calculateShapes:()=>Et.SU,castTensor:()=>an,combineLocations:()=>Ne.Vh,complexWithEvenIndex:()=>Ye,complexWithOddIndex:()=>Ke,computeConv2DInfo:()=>Ae.Ix,computeConv3DInfo:()=>Ae.jw,computeDefaultPad:()=>Ae.aO,computeDilation2DInfo:()=>Ae.Rf,computeOptimalWindowSize:()=>Oe,computeOutAndReduceShapes:()=>Ne.kz,computeOutShape:()=>Se,computePool2DInfo:()=>Ae.Xw,computePool3DInfo:()=>Ae.pl,convertConv2DDataFormat:()=>Ae.sl,eitherStridesOrDilationsAreOne:()=>Ae.jT,expandShapeToKeepDim:()=>Ne.rv,exponent:()=>en,exponents:()=>tn,fromStringArrayToUint8:()=>ln,fromUint8ToStringArray:()=>cn,getAxesPermutation:()=>Ne.Q3,getBroadcastDims:()=>Ce.XF,getComplexWithIndex:()=>Qe,getFusedBiasGradient:()=>Re.pf,getFusedDyActivation:()=>Re.Fr,getImageCenter:()=>Ie,getInnerMostAxes:()=>Ne.sY,getPermuted:()=>_e,getReductionAxes:()=>Ce.RR,getReshaped:()=>Fe,getReshapedPermuted:()=>Me,getSliceBeginCoords:()=>De,getSliceSize:()=>Le,getUndoAxesPermutation:()=>Ne.LJ,log:()=>qe,mergeRealAndImagArrays:()=>Xe,prepareAndValidate:()=>Ct,prepareSplitSize:()=>nn,reshapeTensor:()=>un,segment_util:()=>c,shouldFuse:()=>Re.uy,slice_util:()=>a,splitRealAndImagArrays:()=>Je,tupleValuesAreOne:()=>Ae.I0,upcastType:()=>Zt.x8,validateInput:()=>Et.b0,validateUpdateShape:()=>Et.l5,warn:()=>He});var h={};n.r(h),n.d(h,{GP:()=>hn.GP,qP:()=>hn.qP,pA:()=>hn.pA,ZA:()=>dn.Z});var d=n(7097);function f(){if("undefined"!=typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function p(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var m=n(2885);const b=(0,m.OB)();b.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),b.registerFlag("IS_BROWSER",(()=>p())),b.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),b.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),b.registerFlag("PROD",(()=>!1)),b.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>b.getBool("DEBUG"))),b.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),b.registerFlag("IS_TEST",(()=>!1)),b.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0));var y=n(1661),g=n(701),x=n(569);const w={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function v(t,e){const n=[],r=[],s=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let i=0;i<s.length;++i){const o=s[i],a=Array.isArray(t)?t[i].tensor:t[o];if("float32"!==a.dtype&&"int32"!==a.dtype&&"bool"!==a.dtype&&"string"!==a.dtype&&"complex64"!==a.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${a.dtype}`);const u={name:o,shape:a.shape,dtype:a.dtype};if("string"===a.dtype){const t=new Promise((async t=>{const e=await a.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,r=new Uint8Array(n);let s=0;for(let t=0;t<e.length;t++){const n=e[t],i=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(i,s),s+=4,r.set(n,s),s+=n.length}t(r)}));r.push(t)}else r.push(a.data());null!=e&&(u.group=e),n.push(u)}return{data:$(await Promise.all(r)),specs:n}}function k(t,e){const n={};let r,s=0;for(const i of e){const e=i.name,o=i.dtype,a=i.shape,u=(0,x.NA)(a);let c;if("quantization"in i){const n=i.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${i.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${i.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${i.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${o}.`)}const a=w[n.dtype],l=t.slice(s,s+u*a),h="uint8"===n.dtype?new Uint8Array(l):new Uint16Array(l);if("float32"===o)if("uint8"===n.dtype||"uint16"===n.dtype){c=new Float32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];c[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=A()),c=r(h)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${e}': ${o}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);c=new Int32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];c[t]=Math.round(e*n.scale+n.min)}}s+=u*a}else if("string"===o){const e=(0,x.NA)(i.shape);c=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(s,s+4))[0];s+=4;const n=new Uint8Array(t.slice(s,s+e));c.push(n),s+=e}}else{const r=w[o],i=t.slice(s,s+u*r);if("float32"===o)c=new Float32Array(i);else if("int32"===o)c=new Int32Array(i);else if("bool"===o)c=new Uint8Array(i);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${e}': ${o}`);{c=new Float32Array(i);const t=new Float32Array(c.length/2),r=new Float32Array(c.length/2);for(let e=0;e<t.length;e++)t[e]=c[2*e],r[e]=c[2*e+1];const s=(0,g.X)(t,a,"float32"),o=(0,g.X)(r,a,"float32");n[e]=(0,y.P)(s,o),s.dispose(),o.dispose()}}s+=u*r}"complex64"!==o&&(n[e]=(0,g.X)(c,a,o))}return n}function $(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)}));const r=new Uint8Array(e);let s=0;return n.forEach((t=>{r.set(new Uint8Array(t.buffer),s),s+=t.byteLength})),r.buffer}const N="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function C(t){return N?Buffer.byteLength(t):new Blob([t]).size}function E(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let r=0;return t.forEach((t=>{n.set(new Uint8Array(t),r),r+=t.byteLength})),n.buffer}function S(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:C(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:C(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function A(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0==(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const s=new ArrayBuffer(4*r.length),i=new Uint32Array(s);for(let s=0;s<r.length;s++){const o=r[s],a=t[n[o>>10]+(1023&o)]+e[o>>10];i[s]=a}return new Float32Array(s)}}class R{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==R.instance&&(R.instance=new R),R.instance}static registerSaveRouter(t){R.getInstance().saveRouters.push(t)}static registerLoadRouter(t){R.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return R.getHandlers(t,"save")}static getLoadHandlers(t,e){return R.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?R.getInstance().loadRouters:R.getInstance().saveRouters).forEach((e=>{const s=e(t,n);null!==s&&r.push(s)})),r}}const T=t=>R.getSaveHandlers(t),O=(t,e)=>R.getLoadHandlers(t,e),I="tensorflowjs",F="models_store",_="model_info_store";function M(){if(!(0,m.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function D(t){const e=t.result;e.createObjectStore(F,{keyPath:"modelPath"}),e.createObjectStore(_,{keyPath:"modelPath"})}class L{constructor(t){if(this.indexedDB=M(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const r=this.indexedDB.open(I,1);r.onupgradeneeded=()=>D(r),r.onsuccess=()=>{const s=r.result;if(null==e){const e=s.transaction(F,"readonly"),r=e.objectStore(F).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(s.close(),n(r.error)),e.oncomplete=()=>s.close()}else{const r=S(e),i=s.transaction(_,"readwrite");let o=i.objectStore(_);const a=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;a.onsuccess=()=>{u=s.transaction(F,"readwrite");const a=u.objectStore(F).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});a.onsuccess=()=>t({modelArtifactsInfo:r}),a.onerror=t=>{o=i.objectStore(_);const e=o.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(a.error)),e.onerror=t=>(s.close(),n(a.error))}},a.onerror=t=>(s.close(),n(a.error)),i.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=t=>n(r.error)}))}}L.URL_SCHEME="indexeddb://";const P=t=>{return(0,m.OB)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(L.URL_SCHEME)?(e=t.slice(L.URL_SCHEME.length),new L(e)):null;var e};R.registerSaveRouter(P),R.registerLoadRouter(P);class V{constructor(){this.indexedDB=M()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(I,1);n.onupgradeneeded=()=>D(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(_,"readonly"),i=s.objectStore(_).getAll();i.onsuccess=()=>{const e={};for(const t of i.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},i.onerror=t=>(r.close(),e(i.error)),s.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(L.URL_SCHEME)?e.slice(L.URL_SCHEME.length):e,new Promise(((e,n)=>{const r=this.indexedDB.open(I,1);r.onupgradeneeded=()=>D(r),r.onsuccess=()=>{const s=r.result,i=s.transaction(_,"readwrite"),o=i.objectStore(_),a=o.get(t);let u;a.onsuccess=()=>{if(null==a.result)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=o.delete(t),i=()=>{u=s.transaction(F,"readwrite");const r=u.objectStore(F).delete(t);r.onsuccess=()=>e(a.result.modelArtifactsInfo),r.onerror=t=>n(a.error)};r.onsuccess=i,r.onerror=t=>(i(),s.close(),n(a.error))}},a.onerror=t=>(s.close(),n(a.error)),i.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=t=>n(r.error)}))}}const z="/",B="tensorflowjs_models",W="info",U="model_topology",G="weight_specs",j="weight_data",H="model_metadata";function q(t){return{info:[B,t,W].join(z),topology:[B,t,U].join(z),weightSpecs:[B,t,G].join(z),weightData:[B,t,j].join(z),modelMetadata:[B,t,H].join(z)}}function X(t){const e=t.split(z);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(z)}class J{constructor(t){if(!(0,m.OB)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=q(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=S(t);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(N)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,r=e.length;t<r;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData));const s={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};return null!=t.signature&&(s.signature=t.signature),null!=t.userDefinedMetadata&&(s.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(s.modelInitializer=t.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(N){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(i),e}}J.URL_SCHEME="localstorage://";const Y=t=>{return(0,m.OB)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(J.URL_SCHEME)?(e=t.slice(J.URL_SCHEME.length),new J(e)):null;var e};R.registerSaveRouter(Y),R.registerLoadRouter(Y);class K{constructor(){(0,x.hu)((0,m.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,x.hu)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=B+z,n=z+W;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(e)&&s.endsWith(n)){t[X(s)]=JSON.parse(this.LS.getItem(s))}}return t}async removeModel(t){var e;const n=q(t=(e=t).startsWith(J.URL_SCHEME)?e.slice(J.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}const Q="://";class Z{constructor(){this.managers={}}static getInstance(){return null==Z.instance&&(Z.instance=new Z),Z.instance}static registerManager(t,e){(0,x.hu)(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith(Q)&&(t=t.slice(0,t.indexOf(Q))),(0,x.hu)(t.length>0,(()=>"scheme must not be an empty string."));const n=Z.getInstance();(0,x.hu)(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}class tt{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if((0,m.OB)().get("IS_BROWSER")){(0,m.OB)().setPlatform("browser",new tt);try{Z.registerManager(J.URL_SCHEME,new K)}catch(t){}try{Z.registerManager(L.URL_SCHEME,new V)}catch(t){}}const et=()=>n(8352);let nt;class rt{constructor(){this.util=n(1758),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=(0,m.OB)().global.fetch?(0,m.OB)().global.fetch(t,e):(null==nt&&(nt=et()),nt(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}}(0,m.OB)().get("IS_NODE")&&(0,m.OB)().setPlatform("node",new rt);var st=n(2657),it=n(2271),ot=n(8723);var at=n(4077);(0,d.wv)();const ut={buffer:st.f,cast:it.p,clone:ot.d,print:function(t,e=!1){console.log(t.toString(e))}};(0,at.Vp)(ut);function ct(t){return new Promise((t=>setTimeout(t))).then(t)}class lt{constructor(t){if(!(0,m.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(lt.URL_SCHEME)&&(t=t.slice(lt.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer);const s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),i=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(i.download=this.modelTopologyFileName,i.href=s,await ct((()=>i.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await ct((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:S(t)}}}}lt.URL_SCHEME="downloads://";function ht(t,e,n,r){!function(t){(0,x.hu)(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){(0,x.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),(0,x.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),(0,x.hu)(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(t.map((i=>(i.then((i=>{const o=n+ ++s/t.length*(r-n);return e(o),i})),i))))}async function dt(t,e){null==e&&(e={});const n=null==e.fetchFunc?(0,m.OB)().platform.fetch:e.fetchFunc,r=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),s=(null==e.onProgress?await Promise.all(r):await ht(r,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(s):await ht(s,e.onProgress,.5,1)}R.registerSaveRouter((t=>(0,m.OB)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(lt.URL_SCHEME)?function(t="model"){return new lt(t)}(t.slice(lt.URL_SCHEME.length)):null));class ft{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?((0,x.hu)("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=(0,m.OB)().platform.fetch,(0,x.hu)(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&(0,x.hu)(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer),e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:S(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest,s=e.generatedBy,i=e.convertedBy,o=e.format,a=e.signature,u=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let c,l;if(null!=r){const t=await this.loadWeights(r);[c,l]=t}const h={modelTopology:n,weightSpecs:c,weightData:l,generatedBy:s,convertedBy:i,format:o};null!=a&&(h.signature=a),null!=u&&(h.userDefinedMetadata=u);const d=e.modelInitializer;return d&&(h.modelInitializer=d),h}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),r=t.substring(0,e),s=n>e?t.substring(n):"";return[r+"/",s]}(e),s=this.weightPathPrefix||n,i=[];for(const e of t)i.push(...e.weights);const o=[],a=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?a.push(this.weightUrlConverter(t)):o.push(s+t+r);this.weightUrlConverter&&o.push(...await Promise.all(a));return[i,E(await dt(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function pt(t){return null!=t.match(ft.URL_SCHEME_REGEX)}ft.URL_SCHEME_REGEX=/^https?:\/\//;const mt=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>pt(t))):pt(t),n)return bt(t,e)}return null};function bt(t,e){return new ft(t,e)}function yt(t,e){return bt(t,e)}R.registerSaveRouter(mt),R.registerLoadRouter(mt);var gt=n(9121),xt=n(6151),wt=n(2668),vt=n(3740),kt=n(7852);let $t;const Nt=(0,wt.op)({fromPixels_:function(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,i=!1,o=!1,a=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)i=!0;else if(null!=t.getContext)o=!0;else{if(!("undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);a=!0}if(s){const e=2;if(s&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=(0,xt.pI)(gt.eB,d.BV.backendName)){const n={pixels:t},r={numChannels:e};return d.BV.runKernel(gt.eB,n,r)}const[u,c]=s?[t.videoWidth,t.videoHeight]:[t.width,t.height];let l,h;if(o?l=t.getContext("2d").getImageData(0,0,u,c).data:r||n?l=t.data:(i||s||a)&&(null==$t&&($t=document.createElement("canvas").getContext("2d")),$t.canvas.width=u,$t.canvas.height=c,$t.drawImage(t,0,0,u,c),l=$t.getImageData(0,0,u,c).data),4===e)h=new Int32Array(l);else{const t=u*c;h=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)h[n*e+t]=l[4*n+t]}return function(t,e,n){if((0,x.Cq)(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const r=(0,vt.C)(t,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,kt.H)(t,e,r,n)}(h,[c,u,e],"int32")}});function Ct(t,e){const n=t.shape.length,r=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${n}`);if(0===(0,x.NA)(t.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const s=e.shape,i=s[s.length-1];let o=1;for(let t=0;t<s.length-1;++t)o*=s[t];const a=t.shape,u=s.slice();u.pop();let c=1;for(let t=i;t<n;++t)c*=a[t],u.push(a[t]);const l=[...(0,x.e3)(t.shape).map((t=>t/c)),1].slice(0,i);return[u,o,c,l]}var Et=n(3028);function St(t,e,n){const r=t.shape.length;x.hu(r===e.length,(()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`)),x.hu(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)x.hu(e[s]+n[s]<=t.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`))}function At(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function Rt(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function Tt(t,e,n,r){const s=[...t];for(let t=s.length;t<r.length;t++)s.push(1);for(let t=0;t<n;t++)0===t?s[e]=1:(s.splice(e,0,1),s.pop());return s}function Ot(t,e,n){return n<=t?n:n-(e-1)}function It(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function Ft(t,e,n,r,s,i,o,a,u){const c=t.length;let l=new Array(c),h=new Array(c),d=new Array(c);if(e.length&&n>0){const u=e[0],c=n+1;l=_t(o,u,c,r,t),h=Mt(a,u,c,s,t),d=Tt(i,u,c,t)}else for(let e=0;e<c;e++)l[e]=Lt(o,r,i,t,e,u),h[e]=Pt(a,s,i,t,e,u),d[e]=Dt(i,e,u);return{begin:l,end:h,strides:d}}function _t(t,e,n,r,s){const i=[...s],o=It(n,e);for(let s=0;s<i.length;s++)if(o.indexOf(s)>-1)i[s]=0;else{const o=Ot(e,n,s);let a=r[o];t&1<<o&&(a=0),i[s]=a}return i}function Mt(t,e,n,r,s){const i=[...s],o=It(n,e);for(let s=0;s<i.length;s++)if(o.indexOf(s)>-1)i[s]=Number.MAX_SAFE_INTEGER;else{const o=Ot(e,n,s);let a=r[o];t&1<<o&&(a=Number.MAX_SAFE_INTEGER),i[s]=a}for(let t=0;t<i.length;t++){const e=s[t];i[t]<0&&(i[t]+=e),i[t]=x.uZ(0,i[t],s[t])}return i}function Dt(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function Lt(t,e,n,r,s,i){let o=e[s];const a=n[s]||1;(t&1<<s||i&1<<s||null==o)&&(o=a>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[s];return o<0&&(o+=u),o=x.uZ(0,o,u-1),o}function Pt(t,e,n,r,s,i){let o=e[s];const a=n[s]||1;(t&1<<s||i&1<<s||null==o)&&(o=a>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[s];return o<0&&(o+=u),o=a>0?x.uZ(0,o,u):x.uZ(-1,o,u-1),o}function Vt(t,e,n){let r=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){r=t;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function zt(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function Bt(t,e,n){let r;const s=t.shape.length;let i;return r="number"==typeof e?[e,...new Array(s-1).fill(0)]:e.length<s?e.concat(new Array(s-e.length).fill(0)):e.slice(),r.forEach((t=>{x.hu(-1!==t,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map(((e,n)=>e>=0?e:(x.hu(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-r[n]))),[r,i]}function Wt(t,e,n,r,s,i,o,a,u){let c=e.slice(),l=n.slice(),h=r;null==r&&(h=new Array(c.length));const d=At(o);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==o&&0!==a)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==o&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const f=t.length-c.length,p=At(a),m=t.slice();p.forEach((t=>{c[t]=0,l[t]=1,m.splice(t,0,1)}));const{begin:b,end:y,strides:g}=Ft(m,d,f,c,l,h,s,i,o);c=b,l=y,h=g;const x=At(u);x.forEach((t=>{l[t]=c[t]+1,h[t]=1}));const w=Rt(c,l,h),v=w.filter(((t,e)=>-1===x.indexOf(e)));return{nonStrided:h.every((t=>1===t)),$begin:c,$end:l,$strides:h,size:w,newShape:m,outShape:v}}class Ut{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Gt{constructor(){this.classNameMap={}}static getMap(){return null==Gt.instance&&(Gt.instance=new Gt),Gt.instance}static register(t){Gt.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function jt(t){(0,x.hu)(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),(0,x.hu)("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),(0,x.hu)(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Gt.register(t)}var Ht=n(747),qt=n(9155);const Xt="2.8.3";var Jt=n(4368),Yt=n(633),Kt=n(9494);class Qt extends Ut{minimize(t,e=!1,n){const{value:r,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:s[t.name]})));this.applyGradients(t)}else this.applyGradients(s);return(0,Jt.B9)(s),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return(0,Yt.pn)(t,e)}dispose(){null!=this.iterations_&&(0,Jt.B9)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,Kt.i)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Qt,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});var Zt=n(1221),te=n(1900),ee=n(6407),ne=n(1274),re=n(4841),se=n(3261),ie=n(248),oe=n(6577);class ae extends Qt{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=d.BV.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=d.BV.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:(0,Jt.lu)((()=>(0,oe.P)(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:(0,Jt.lu)((()=>(0,oe.P)(r).variable(false)))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;(0,Jt.lu)((()=>{const t=(0,ee.I)((0,re.d)(i,this.rho),(0,re.d)((0,ie.h)(s),1-this.rho)),e=(0,re.d)((0,ne.h)((0,se._)((0,ee.I)(o,this.epsilon)),(0,se._)((0,ee.I)(i,this.epsilon))),s),n=(0,ee.I)((0,re.d)(o,this.rho),(0,re.d)((0,ie.h)(e),1-this.rho));i.assign(t),o.assign(n);const a=(0,ee.I)((0,re.d)(e,-this.learningRate),r);r.assign(a)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,Jt.B9)(this.accumulatedGrads.map((t=>t.variable))),(0,Jt.B9)(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}ae.className="Adadelta",jt(ae);var ue=n(4006);class ce extends Qt{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=d.BV.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:(0,Jt.lu)((()=>(0,ue.h)(r.shape,this.initialAccumulatorValue).variable(t)))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const i=this.accumulatedGrads[n].variable;(0,Jt.lu)((()=>{const t=(0,ee.I)(i,(0,ie.h)(s));i.assign(t);const e=(0,ee.I)((0,re.d)((0,ne.h)(s,(0,se._)((0,ee.I)(t,d.BV.backend.epsilon()))),-this.learningRate),r);r.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,Jt.B9)(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}ce.className="Adagrad",jt(ce);var le=n(3453),he=n(827);class de extends Qt{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,Jt.lu)((()=>{this.accBeta1=(0,Kt.i)(e).variable(),this.accBeta2=(0,Kt.i)(n).variable()})),null==r&&(this.epsilon=d.BV.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);(0,Jt.lu)((()=>{const n=(0,he.l)(1,this.accBeta1),r=(0,he.l)(1,this.accBeta2);e.forEach(((e,s)=>{const i=d.BV.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:(0,Jt.lu)((()=>(0,oe.P)(i).variable(false)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${e}/v`,variable:(0,Jt.lu)((()=>(0,oe.P)(i).variable(false)))});const o=Array.isArray(t)?t[s].tensor:t[e];if(null==o)return;const a=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,c=(0,ee.I)((0,re.d)(a,this.beta1),(0,re.d)(o,1-this.beta1)),l=(0,ee.I)((0,re.d)(u,this.beta2),(0,re.d)((0,ie.h)(o),1-this.beta2)),h=(0,ne.h)(c,n),f=(0,ne.h)(l,r);a.assign(c),u.assign(l);const p=(0,ee.I)((0,re.d)((0,ne.h)(h,(0,ee.I)((0,se._)(f),this.epsilon)),-this.learningRate),i);i.assign(p)})),this.accBeta1.assign((0,re.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,re.d)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,Jt.B9)(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&(0,Jt.B9)(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),(0,Jt.lu)((()=>{this.accBeta1.assign((0,le.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,le.s)(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}de.className="Adam",jt(de);var fe=n(6235),pe=n(632);class me extends Qt{constructor(t,e,n,r=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,Jt.lu)((()=>{this.iteration=(0,Kt.i)(0).variable(),this.accBeta1=(0,Kt.i)(e).variable()})),null==r&&(this.epsilon=d.BV.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);(0,Jt.lu)((()=>{const n=(0,he.l)(1,this.accBeta1),r=(0,ne.h)(-this.learningRate,(0,ee.I)((0,re.d)(this.iteration,this.decay),1));e.forEach(((e,s)=>{const i=d.BV.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:(0,oe.P)(i).variable(false)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${e}/v`,variable:(0,oe.P)(i).variable(false)});const o=Array.isArray(t)?t[s].tensor:t[e];if(null==o)return;const a=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,c=(0,ee.I)((0,re.d)(a,this.beta1),(0,re.d)(o,1-this.beta1)),l=(0,re.d)(u,this.beta2),h=(0,fe.W)(o),f=(0,pe.g)(l,h);a.assign(c),u.assign(f);const p=(0,ee.I)((0,re.d)((0,ne.h)(r,n),(0,ne.h)(c,(0,ee.I)(f,this.epsilon))),i);i.assign(p)})),this.iteration.assign((0,ee.I)(this.iteration,1)),this.accBeta1.assign((0,re.d)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,Jt.B9)(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&(0,Jt.B9)(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}me.className="Adamax",jt(me);class be extends Qt{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=d.BV.registeredVariables[e];(0,Jt.lu)((()=>{const t=(0,ee.I)((0,re.d)(this.c,r),s);s.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=(0,Jt.Cn)((0,Kt.i)(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}be.className="SGD",jt(be);class ye extends be{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=(0,Kt.i)(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=d.BV.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:(0,Jt.lu)((()=>(0,oe.P)(r).variable(t)))}}const s=this.accumulations[n].variable,i=Array.isArray(t)?t[n].tensor:t[e];null!=i&&(0,Jt.lu)((()=>{let t;const e=(0,ee.I)((0,re.d)(this.m,s),i);t=this.useNesterov?(0,ee.I)((0,re.d)(this.c,(0,ee.I)(i,(0,re.d)(e,this.m))),r):(0,ee.I)((0,re.d)(this.c,e),r),s.assign(e),r.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,Jt.B9)(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}ye.className="Momentum",jt(ye);class ge extends Qt{constructor(t,e=.9,n=0,r=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=d.BV.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=d.BV.registeredVariables[e],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:(0,Jt.lu)((()=>(0,oe.P)(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:(0,Jt.lu)((()=>(0,oe.P)(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:(0,Jt.lu)((()=>(0,oe.P)(r).variable(s)))});const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const o=this.accumulatedMeanSquares[n].variable,a=this.accumulatedMoments[n].variable;(0,Jt.lu)((()=>{const t=(0,ee.I)((0,re.d)(o,this.decay),(0,re.d)((0,ie.h)(i),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,s=(0,ee.I)((0,re.d)(e,this.decay),(0,re.d)(i,1-this.decay)),u=(0,ne.h)((0,re.d)(i,this.learningRate),(0,se._)((0,he.l)(t,(0,ee.I)((0,ie.h)(s),this.epsilon)))),c=(0,ee.I)((0,re.d)(a,this.momentum),u);o.assign(t),e.assign(s),a.assign(c);const l=(0,he.l)(r,c);r.assign(l)}else{const t=(0,ee.I)((0,re.d)(o,this.decay),(0,re.d)((0,ie.h)(i),1-this.decay)),e=(0,ee.I)((0,re.d)(a,this.momentum),(0,ne.h)((0,re.d)(i,this.learningRate),(0,se._)((0,ee.I)(t,this.epsilon))));o.assign(t),a.assign(e);const n=(0,he.l)(r,e);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,Jt.B9)(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,Jt.B9)(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&(0,Jt.B9)(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}ge.className="RMSProp",jt(ge);class xe{static sgd(t){return new be(t)}static momentum(t,e,n=!1){return new ye(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,s=!1){return new ge(t,e,n,r,s)}static adam(t=.001,e=.9,n=.999,r=null){return new de(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new ae(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,s=0){return new me(t,e,n,r,s)}static adagrad(t,e=.1){return new ce(t,e)}}const we={sgd:xe.sgd,momentum:xe.momentum,adadelta:xe.adadelta,adagrad:xe.adagrad,rmsprop:xe.rmsprop,adamax:xe.adamax,adam:xe.adam},ve="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function ke(){return new Promise((t=>ve((()=>t()))))}var $e=n(9640),Ne=n(3591),Ce=n(2200);function Ee(t,e){const n=t[0].length;t.forEach(((t,e)=>{x.hu(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),x.hu(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=t[0];t.forEach(((t,s)=>{for(let i=0;i<n;i++)x.hu(i===e||t[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Se(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}var Ae=n(2582),Re=n(9323);const Te=30;function Oe(t){return t<=Te?t:(0,x.jP)(t,Math.floor(Math.sqrt(t)))}function Ie(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function Fe(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)s=s.concat([t[r+1]/e[r],e[r]]);s=s.concat(t.slice(n+1))}return s}function _e(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Me(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?r?s.push(e[n-1]*t[n]):s.push(t[n]/e[n-1]):s.push(t[n]);return s}function De(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function Le(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}const Pe=1.7580993408473768,Ve=1.0507009873554805,ze=.3275911,Be=.254829592,We=-.284496736,Ue=1.421413741,Ge=-1.453152027,je=1.061405429;function He(...t){(0,m.OB)().getBool("IS_TEST")||console.warn(...t)}function qe(...t){(0,m.OB)().getBool("IS_TEST")||console.log(...t)}function Xe(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function Je(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function Ye(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function Ke(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function Qe(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Ze(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function tn(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const i=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(i),r[s]=Math.sin(i)}return{real:n,imag:r}}function en(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}function nn(t,e,n=0){let r=[];if("number"==typeof e)(0,x.hu)(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(e).fill(t.shape[n]/e);else{const s=e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0);(0,x.hu)(s<=1,(()=>"There should be only one negative value in split array."));const i=e.indexOf(-1);if(-1!==i){const r=e.reduce(((t,e)=>e>0?t+e:t));e[i]=t.shape[n]-r}(0,x.hu)(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=e}return r}function rn(t,e){let n,r=!1;for(t<=Te?(n=t,r=!0):n=(0,x.jP)(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=(0,x.jP)(t,n+1);return n}function sn(t,e,n){const r=[],s=t.length;for(let i=0;i<s;i++)i!==e?r.push(t[i]):r.push(n);return r}function on(t,e,n,r){const s=e.shape.length,i=t.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${i}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(t.shape[n]!==e.shape[n])throw new Error(`x.shape[${n}]: ${t.shape[n]} should be equal to indices.shape[${n}]: ${e.shape[n]}.`);const o=t.shape[n],a=[];let u=1,c=1,l=1;for(let e=0;e<r;++e)a.push(t.shape[e]),u*=t.shape[e];for(let e=r;e<n;e++)a.push(t.shape[e]),c*=t.shape[e];for(let t=r;t<s;t++)a.push(e.shape[t]);for(let e=n+1;e<i;e++)a.push(t.shape[e]),l*=t.shape[e];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:o,outputShape:a}}function an(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=(0,$e.l)(t.shape),r=(0,it.p)(t,"float32"),s=n.complex(r,e);return e.dispose(),r.dispose(),s}if(!(0,x.QB)(t.dtype,e))return d.BV.makeTensorFromDataId(t.dataId,t.shape,e);if("complex64"===t.dtype){const r=n.real(t),s=(0,it.p)(r,e);return r.dispose(),s}if("int32"===e)return n.int(t);if("bool"===e){const e=(0,Kt.i)(0,t.dtype),r=n.notEqual(t,e);return e.dispose(),r}throw new Error(`Error in Cast: failed to cast ${t.dtype} to ${e}`)}function un(t,e){return d.BV.makeTensorFromDataId(t.dataId,e,t.dtype)}function cn(t){try{return t.map((t=>(0,qt.v5)(t)))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function ln(t){return t.map((t=>(0,qt.YW)(t)))}var hn=n(3337),dn=n(8333),fn=n(8713),pn=n(1901);const mn={kernelName:gt.SY,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,re.d)(t,(0,pn.N)((0,it.p)(n,"float32"),-1))}}};var bn=n(7370);const yn={kernelName:gt.VG,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=(0,ie.h)((0,it.p)(n,"float32")),r=(0,se._)((0,he.l)((0,Kt.i)(1),e));return(0,bn.W)((0,ne.h)(t,r))}}}},gn={kernelName:gt.Sp,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=(0,se._)((0,he.l)((0,ie.h)((0,it.p)(n,"float32")),1));return(0,ne.h)(t,e)}}}};var xn=n(4968),wn=n(5475);const vn={kernelName:gt.mm,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ce.$N(n.shape,r.shape);return{a:()=>{let e=t;const r=Ce.RR(n.shape,s);return r.length>0&&(e=(0,wn.S)(e,r)),(0,xn.X)(e,n.shape)},b:()=>{let e=t;const n=Ce.RR(r.shape,s);return n.length>0&&(e=(0,wn.S)(e,n)),(0,xn.X)(e,r.shape)}}}},kn={kernelName:gt.Xz,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,r)=>{n[r]=()=>t.clone()})),n}},$n={kernelName:gt.sJ,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,oe.P)(n)}}},Nn={kernelName:gt.aJ,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,oe.P)(n)}}},Cn={kernelName:gt.M2,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,ne.h)(t,(0,se._)((0,he.l)((0,Kt.i)(1),(0,ie.h)((0,it.p)(n,"float32")))))}}},En={kernelName:gt.qw,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=(0,se._)((0,ee.I)((0,Kt.i)(1),(0,ie.h)((0,it.p)(n,"float32"))));return(0,ne.h)(t,e)}}}},Sn={kernelName:gt.QC,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=(0,Ce.$N)(n.shape,r.shape);return{a:()=>{const e=(0,ee.I)((0,ie.h)(n),(0,ie.h)(r));let i=(0,re.d)(t,(0,ne.h)(r,e));const o=(0,Ce.RR)(n.shape,s);return o.length>0&&(i=(0,wn.S)(i,o)),(0,xn.X)(i,n.shape)},b:()=>{const e=(0,ee.I)((0,ie.h)(n),(0,ie.h)(r));let i=(0,bn.W)((0,re.d)(t,(0,ne.h)(n,e)));const o=(0,Ce.RR)(r.shape,s);return o.length>0&&(i=(0,wn.S)(i,o)),(0,xn.X)(i,r.shape)}}}},An={kernelName:gt.jM,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,ne.h)(t,(0,ee.I)((0,ie.h)((0,it.p)(n,"float32")),1))}}},Rn={kernelName:gt.Oy,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,ne.h)(t,(0,he.l)((0,Kt.i)(1),(0,ie.h)((0,it.p)(n,"float32"))))}}};const Tn=(0,wt.op)({avgPool3dGrad_:function(t,e,n,r,s=[1,1,1],i,o){const a=(0,vt._1)(t,"dy","avgPool3dGrad"),u=(0,vt._1)(e,"input","avgPool3dGrad");let c=a,l=u,h=!1;4===u.rank&&(h=!0,c=(0,xn.X)(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),l=(0,xn.X)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),x.hu(5===c.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),x.hu(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),x.hu(Ae.jT(r,s),(()=>`Error in avgPool3dGrad: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`)),null!=o&&x.hu(x.GN(i),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const f={dy:c,input:l},p={filterSize:n,strides:r,dilations:s,pad:i,dimRoundingMode:o},m=d.BV.runKernel(gt.IM,f,p);return h?(0,xn.X)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),On={kernelName:gt._k,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:i,dilations:o,pad:a,dimRoundingMode:u}=n,c=null==o?[1,1,1]:o;return{x:()=>Tn(t,r,s,i,c,a,u)}}};const In=(0,wt.op)({avgPoolGrad_:function(t,e,n,r,s){const i=(0,vt._1)(t,"dy","avgPoolGrad"),o=(0,vt._1)(e,"input","avgPoolGrad");x.hu(o.rank===i.rank,(()=>`Rank of input (${o.rank}) does not match rank of dy (${i.rank})`));let a=o,u=i,c=!1;3===o.rank&&(c=!0,a=(0,xn.X)(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=(0,xn.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]])),x.hu(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),x.hu(4===a.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`));const l={dy:u,input:a},h={filterSize:n,strides:r,pad:s},f=d.BV.runKernel(gt.RO,l,h);return c?(0,xn.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Fn={kernelName:gt.Jh,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:i,pad:o}=n;return{x:()=>In(t,r,s,i,o)}}};var _n=n(8687);const Mn={kernelName:gt.XL,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,s]=e,{transposeA:i,transposeB:o}=n;return i||o?!i&&o?{a:()=>(0,_n.O)(t,s,!1,!1),b:()=>(0,_n.O)(t,r,!0,!1)}:i&&!o?{a:()=>(0,_n.O)(s,t,!1,!0),b:()=>(0,_n.O)(r,t,!1,!1)}:{a:()=>(0,_n.O)(s,t,!0,!0),b:()=>(0,_n.O)(t,r,!0,!0)}:{a:()=>(0,_n.O)(t,s,!1,!0),b:()=>(0,_n.O)(r,t,!0,!1)}}};var Dn=n(7918);const Ln={kernelName:gt.zw,gradFunc:(t,e,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>(0,Dn.f)(t,r,s)}}},Pn={kernelName:gt.Ly,gradFunc:(t,e,n)=>{const r=n,s=r.inputShape,i=r.shape,o=Array.from(i);for(let t=s.length-1;t>=0;t--)if(s[t]===i[t])o[t]=1;else if(1!==s[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${i}].`);const a=[];for(let t=0;t<o.length;t++)o[t]>1&&a.push(t);return{x:()=>(0,wn.S)(t,a,!0)}}},Vn={kernelName:gt.RF,gradFunc:t=>({x:()=>t.clone()})},zn={kernelName:gt.gJ,gradFunc:t=>({x:()=>(0,oe.P)(t)})};var Bn=n(7630),Wn=n(624),Un=n(2856),Gn=n(5912);const jn={kernelName:gt.xn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:s,clipValueMax:i}=n;return{x:()=>(0,Gn.a)((0,Un.H)((0,Bn.b)(r,s),(0,Wn.z)(r,i)),t,(0,oe.P)(t))}}},Hn={kernelName:gt.yj,inputsToSave:["x"],gradFunc:mn.gradFunc};var qn=n(8644);const Xn={kernelName:gt.Eh,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map((t=>t.shape)),{axis:s}=n,i=(0,x.EC)(s,e[0].shape)[0],o=r.map((t=>t[i]));return(0,qn.V)(t,o,i).map((t=>()=>t))}};var Jn=n(6013),Yn=n(9832);const Kn={kernelName:gt.mh,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{dilations:i,strides:o,pad:a,dataFormat:u}=n;return x.hu(Ae.I0(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>(0,Yn._)(r.shape,t,s,o,a,u),filter:()=>(0,Jn.p)(r,t,s.shape,o,a,u)}}};var Qn=n(4794);const Zn={kernelName:gt.wm,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{strides:i,pad:o,dataFormat:a,dimRoundingMode:u}=n;return{dy:()=>(0,Qn.T)(t,s,i,o,a,1,u),filter:()=>(0,Jn.p)(t,r,s.shape,i,o,a,u)}}};const tr=(0,wt.op)({conv3DBackpropFilter_:function(t,e,n,r,s){let i=t;4===t.rank&&(i=(0,xn.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let o=e;4===o.rank&&(o=(0,xn.X)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),x.hu(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),x.hu(5===o.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`)),x.hu(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),x.hu(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),x.hu(o.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`));const a={x:i,dy:o},u={strides:r,pad:s,filterShape:n};return d.BV.runKernel(gt.o2,a,u)}});const er=(0,wt.op)({conv3DBackpropInput_:function(t,e,n,r,s){x.hu(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let i=t,o=e,a=!1;4===e.rank&&(a=!0,o=(0,xn.X)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,t[0],t[1],t[2],t[3]]);const u=i[4],c=o.shape[4];x.hu(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),x.hu(5===o.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`)),x.hu(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),x.hu(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),x.hu(c===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`));const l={dy:o,filter:n},h={pad:s,strides:r,inputShape:i},f=d.BV.runKernel(gt.ik,l,h);return a?(0,xn.X)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),nr={kernelName:gt.x1,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:i}=n;x.hu((0,Ae.I0)(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[o,a]=e;return{x:()=>er(o.shape,t,a,s,i),filter:()=>tr(o,t,a.shape,s,i)}}};var rr=n(9331);const sr={kernelName:gt.mc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,re.d)((0,bn.W)((0,rr.O)((0,it.p)(n,"float32"))),t)}}};var ir=n(3254);const or={kernelName:gt.TR,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,re.d)((0,ir.R)((0,it.p)(n,"float32")),t)}}};var ar=n(7405),ur=n(9065);const cr={kernelName:gt.iH,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s,exclusive:i,reverse:o}=n;return{x:()=>{const e=(0,Ne.Q3)([s],r.rank);let n=(0,ar.z)(t,s,i,!o);return null!=e&&(n=(0,ur.p)(n,e)),n}}}};var lr=n(8098),hr=n(4375);const dr={kernelName:gt.ci,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:i,dimRoundingMode:o}=n,a=null==r?[1,1]:r;x.hu(Ae.I0(a),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[u,c]=e;return x.hu(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),x.hu(4===c.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`)),x.hu(u.shape[3]===c.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`)),x.hu(Ae.jT(s,a),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${a}'.`)),null!=o&&x.hu(x.GN(i),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`)),{x:()=>(0,hr.v)(u.shape,t,c,s,i,r,o),filter:()=>(0,lr.z)(u,t,c.shape,s,i,r,o)}}},fr={kernelName:gt.p4,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,i={x:r,filter:s,dy:t},o={x:r,filter:s,dy:t};return{x:()=>d.BV.runKernel(gt.ek,i,n),filter:()=>d.BV.runKernel(gt.Vn,o,n)}}},pr={kernelName:gt.SX,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r={dy:t,y:n};return{x:()=>d.BV.runKernel(gt.HE,r)}}};var mr=n(4842);const br={kernelName:gt.Om,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=(0,re.d)((0,mr.Q)((0,bn.W)((0,ie.h)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,re.d)(t,r)}}},yr={kernelName:gt.NE,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,re.d)(t,n)}}},gr={kernelName:gt.YF,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>(0,xn.X)(t,n.shape)}}},xr={kernelName:gt.Y0,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,re.d)(t,(0,mr.Q)(n))}}},wr={kernelName:gt.OR,gradFunc:t=>({x:()=>(0,oe.P)(t)})},vr={kernelName:gt.je,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=(0,Ce.$N)(n.shape,r.shape);return{a:()=>{const e=(0,ne.h)(t,(0,it.p)(r,"float32")),i=(0,Ce.RR)(n.shape,s);return i.length>0?(0,xn.X)((0,wn.S)(e,i),n.shape):e},b:()=>{let e=(0,re.d)(t,(0,it.p)(n,"float32"));const i=(0,Ce.RR)(r.shape,s);i.length>0&&(e=(0,xn.X)((0,wn.S)(e,i),r.shape));const o=(0,ie.h)(r);return(0,bn.W)((0,ne.h)(e,(0,it.p)(o,"float32")))}}}};var kr=n(2634),$r=n(7501);const Nr={kernelName:gt.sH,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[s,i,o,a]=e,u=null==a?(0,Kt.i)(1):a,c=(0,Ce.RR)(i.shape,s.shape),l=[];if(1===i.rank){for(let t=0;t<s.shape.length-1;++t)l.push(s.shape[t]);l.push(1)}const h=(0,he.l)(s,i),d=(0,re.d)(t,u),f=(0,kr.b)((0,ee.I)(o,(0,Kt.i)(r))),p=(0,re.d)((0,re.d)((0,re.d)(f,f),f),(0,Kt.i)(-.5));return{x:()=>1===i.rank?(0,xn.X)((0,re.d)((0,re.d)(t,(0,$r.G)((0,xn.X)(f,[1,1,1,i.shape[0]]),l)),u),s.shape):(0,xn.X)((0,re.d)((0,re.d)(t,f),u),s.shape),mean:()=>{let t=(0,re.d)((0,re.d)(f,(0,Kt.i)(-1)),d);return 1===i.rank&&(t=(0,wn.S)(t,c)),(0,xn.X)(t,i.shape)},variance:()=>{let t=(0,re.d)((0,re.d)(p,h),d);return 1===i.rank&&(t=(0,wn.S)(t,c)),(0,xn.X)(t,i.shape)},scale:()=>{const e=(0,re.d)(h,f);let n=(0,re.d)(t,e);return 1===i.rank&&(n=(0,wn.S)(n,c)),(0,xn.X)(n,i.shape)},offset:()=>{let e=t;return 1===i.rank&&(e=(0,wn.S)(e,c)),(0,xn.X)(e,i.shape)}}}};const Cr=(0,wt.op)({unsortedSegmentSum_:function(t,e,n){const r=(0,vt._1)(t,"x","unsortedSegmentSum"),s=(0,vt._1)(e,"segmentIds","unsortedSegmentSum","int32");(0,x.hu)((0,x.GN)(n),(()=>"numSegments must be of dtype int"));const i={x:r,segmentIds:s},o={numSegments:n};return d.BV.runKernel(gt.Qv,i,o)}}),Er={kernelName:gt.qi,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,s]=e,{axis:i}=n,o=(0,x.EC)(i,r.shape)[0];return{x:()=>{const e=r.shape,n=s.size,a=e.slice(0,o),u=a.length,c=e.slice(i,e.length).slice(1),l=c.length,h=Sr(0,u),d=Sr(u+1,u+1+l),f=Ar([a,[n],c]),p=(0,xn.X)(t,f),m=(0,xn.X)(s,[n]),b=Ar([[u],h,d]),y=(0,ur.p)(p,b);let g=Cr(y,m,r.shape[o]);const x=(0,Ne.LJ)(b);return g=(0,ur.p)(g,x),g},indices:()=>s}}};function Sr(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Ar(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const Rr={kernelName:gt.Ac,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>(0,oe.P)(n),b:()=>(0,oe.P)(r)}}},Tr={kernelName:gt.iJ,gradFunc:t=>({x:()=>(0,it.p)(t,"float32")})},Or={kernelName:gt.av,gradFunc:t=>({x:()=>(0,oe.P)(t)})},Ir={kernelName:gt.iW,gradFunc:t=>({x:()=>(0,oe.P)(t)})},Fr={kernelName:gt.r7,gradFunc:t=>({x:()=>(0,oe.P)(t)})};var _r=n(636);const Mr={kernelName:gt.J$,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{alpha:s}=n,i=(0,_r.p)(r,0);return{x:()=>(0,Gn.a)(i,t,(0,re.d)(t,s))}}},Dr={kernelName:gt.kU,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,ne.h)(t,(0,ee.I)(n,1))}}},Lr={kernelName:gt.Zb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,ne.h)(t,(0,it.p)(n,"float32"))}}},Pr={kernelName:gt.qC,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n;return{logits:()=>{const e=(0,mr.Q)(r);return(0,he.l)(t,(0,re.d)((0,wn.S)(t,s,!0),e))}}}};const Vr=(0,wt.op)({localResponseNormalizationBackprop_:function(t,e,n,r=5,s=1,i=1,o=.5){const a={x:t,y:e,dy:n},u={depthRadius:r,bias:s,alpha:i,beta:o};return d.BV.runKernel(gt.Hh,a,u)}}),zr={kernelName:gt.eZ,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{depthRadius:i,bias:o,alpha:a,beta:u}=n;return{x:()=>Vr(r,s,t,i,o,a,u)}}};var Br=n(6477);function Wr(t,e,n,r){return e.rank<n.rank&&(e=(0,xn.X)(e,Ne.rv(e.shape,r))),t.rank<n.rank&&(t=(0,xn.X)(t,Ne.rv(t.shape,r))),{x:()=>(0,re.d)(t,(0,it.p)((0,Br.D)(n,e),t.dtype))}}const Ur={kernelName:gt.Yo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:s}=r,i=e[0],o=Wr(t,e[1],i,x.EC(s,i.shape));return{x:()=>o.x()}}};var Gr=n(6573);const jr={kernelName:gt.BM,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>(0,re.d)(t,(0,it.p)((0,Bn.b)(n,r),"float32")),b:()=>(0,re.d)(t,(0,it.p)((0,Gr.d)(n,r),"float32"))}}};const Hr=(0,wt.op)({maxPool3dGrad_:function(t,e,n,r,s,i=[1,1,1],o,a){const u=(0,vt._1)(t,"dy","maxPool3dGrad"),c=(0,vt._1)(e,"input","maxPool3dGrad"),l=(0,vt._1)(n,"output","maxPool3dGrad");let h=u,f=c,p=l,m=!1;4===c.rank&&(m=!0,h=(0,xn.X)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),f=(0,xn.X)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),p=(0,xn.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),x.hu(5===h.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),x.hu(5===f.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${f.rank}.`)),x.hu(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),x.hu(Ae.jT(s,i),(()=>`Error in maxPool3dGrad: Either strides or dilations must be 1. Got strides ${s} and dilations '${i}'`)),null!=a&&x.hu(x.GN(o),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`));const b={dy:h,input:f,output:p},y={filterSize:r,strides:s,dilations:i,pad:o,dimRoundingMode:a},g=d.BV.runKernel(gt.OU,b,y);return m?(0,xn.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),qr={kernelName:gt.OA,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:i,strides:o,dilations:a,pad:u,dimRoundingMode:c}=n,l=null==a?[1,1,1]:a;return{x:()=>Hr(t,r,s,i,o,l,u,c)}}};const Xr=(0,wt.op)({maxPoolGrad_:function(t,e,n,r,s,i,o){const a=(0,vt._1)(t,"dy","maxPoolGrad"),u=(0,vt._1)(e,"input","maxPoolGrad"),c=(0,vt._1)(n,"output","maxPoolGrad");x.hu(u.rank===a.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${a.rank})`)),x.hu(4===a.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`)),x.hu(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),null!=o&&x.hu(x.GN(i),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const l={dy:a,input:u,output:c},h={filterSize:r,strides:s,pad:i,dimRoundingMode:o};return d.BV.runKernel(gt.OV,l,h)}}),Jr={kernelName:gt.mT,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:i,strides:o,pad:a}=n;return{x:()=>Xr(t,r,s,i,o,a)}}};var Yr=n(4917);const Kr={kernelName:gt.q2,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n,i=x.EC(s,r.shape),o=(0,Ne.kz)(r.shape,i)[1],a=x.NA(o);return{x:()=>{const e=r.shape.slice();i.forEach((t=>{e[t]=1}));const n=(0,xn.X)(t,e);return(0,ne.h)((0,re.d)(n,(0,Yr.i)(r.shape,"float32")),a)}}}},Qr={kernelName:gt.c1,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:s}=r,[i,o]=e,a=Wr(t,o,i,x.EC(s,i.shape));return{x:()=>a.x()}}},Zr={kernelName:gt.q8,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>(0,re.d)(t,(0,it.p)((0,Wn.z)(n,r),"float32")),b:()=>(0,re.d)(t,(0,it.p)((0,_r.p)(n,r),"float32"))}}};var ts=n(2676);const es={kernelName:gt.jQ,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,i=s.map((t=>t[0]));return{x:()=>(0,ts.t)(t,i,r.shape)}}};var ns=n(6943);const rs={kernelName:gt.Vb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=(0,Ce.$N)(n.shape,r.shape);return{a:()=>{const e=(0,Ce.RR)(n.shape,s);return e.length>0?(0,xn.X)((0,wn.S)(t,e),n.shape):t},b:()=>{const e=(0,re.d)(t,(0,bn.W)((0,ns.G)((0,ne.h)(n,r)))),i=(0,Ce.RR)(r.shape,s);return i.length>0?(0,xn.X)((0,wn.S)(e,i),r.shape):e}}}},ss={kernelName:gt.wY,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=(0,Ce.$N)(n.shape,r.shape);return{a:()=>{const e=(0,re.d)(t,(0,it.p)(r,"float32")),i=(0,Ce.RR)(n.shape,s);return i.length>0?(0,xn.X)((0,wn.S)(e,i),n.shape):e},b:()=>{const e=(0,re.d)(t,(0,it.p)(n,"float32")),i=(0,Ce.RR)(r.shape,s);return i.length>0?(0,xn.X)((0,wn.S)(e,i),r.shape):e}}}},is={kernelName:gt.ku,gradFunc:t=>({x:()=>(0,bn.W)(t)})},os={kernelName:gt.we,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>(0,$e.l)(n.shape,"float32")}}},as={kernelName:gt.qW,gradFunc:t=>({x:()=>(0,oe.P)(t)})};var us=n(4136);const cs={kernelName:gt.Qi,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:r}=n;return(0,us.H)(t,r).map((t=>()=>t))}},ls={kernelName:gt.ly,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,i=s.map((t=>t[0]));return{x:()=>(0,ts.t)(t,i,r.shape)}}};var hs=n(2597);const ds={kernelName:gt.pe,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,s]=e,i=n,o=r,a=Ce.$N(i.shape,o.shape);return{a:()=>{const e=(0,it.p)(o,"float32");let n=(0,re.d)(t,(0,re.d)(e,(0,le.s)(i,(0,he.l)(e,(0,Kt.i)(1)))));const r=Ce.RR(i.shape,a);return r.length>0&&(n=(0,wn.S)(n,r)),(0,xn.X)(n,i.shape)},b:()=>{const e=(0,_r.p)(i,0),n=(0,Gn.a)(e,(0,hs.c)(i),(0,oe.P)(i));let r=(0,re.d)(t,(0,re.d)(s,n));const u=Ce.RR(o.shape,a);return u.length>0&&(r=(0,wn.S)(r,u)),(0,xn.X)(r,o.shape)}}}},fs={kernelName:gt.o0,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,s=(0,_r.p)(n,0);return{x:()=>(0,Gn.a)(s,t,(0,re.d)(t,r)),alpha:()=>{let e=(0,Gn.a)(s,(0,oe.P)(t),(0,re.d)(t,n));const i=(0,Ce.RR)(r.shape,t.shape);return i.length>0&&(e=(0,wn.S)(e,i)),(0,xn.X)(e,r.shape)}}}},ps={kernelName:gt.oH,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ce.$N(n.shape,r.shape);return{a:()=>{const e=(0,ne.h)(t,(0,it.p)(r,"float32")),i=Ce.RR(n.shape,s);return i.length>0?(0,xn.X)((0,wn.S)(e,i),n.shape):e},b:()=>{let e=(0,re.d)(t,(0,it.p)(n,"float32"));const i=Ce.RR(r.shape,s);i.length>0&&(e=(0,xn.X)((0,wn.S)(e,i),r.shape));const o=(0,ie.h)(r);return(0,bn.W)((0,ne.h)(e,(0,it.p)(o,"float32")))}}}},ms={kernelName:gt.$H,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,ne.h)(t,(0,bn.W)((0,ie.h)(n)))}}},bs={kernelName:gt.Sb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=(0,re.d)((0,Wn.z)(n,6),(0,pn.N)(n));return{x:()=>(0,re.d)(t,(0,it.p)(r,"float32"))}}},ys={kernelName:gt.qk,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,re.d)(t,(0,it.p)((0,pn.N)(n),"float32"))}}},gs={kernelName:gt.HZ,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,xn.X)(t,n.shape)}}},xs={kernelName:gt._Y,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s={dy:t,images:r};return{images:()=>d.BV.runKernel(gt.zb,s,n)}}},ws={kernelName:gt.dp,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s={dy:t,images:r};return{images:()=>d.BV.runKernel(gt.Hm,s,n)}}};var vs=n(7486);const ks={kernelName:gt.mK,gradFunc:(t,e,n)=>{const{dims:r}=n,s=(0,x.EC)(r,t.shape);return{x:()=>(0,vs.G)(t,s)}}},$s={kernelName:gt.e0,gradFunc:t=>({x:()=>(0,oe.P)(t)})},Ns={kernelName:gt.bV,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,bn.W)((0,ne.h)(t,(0,re.d)((0,le.s)(n,1.5),2)))}}};var Cs=n(8651);const Es={kernelName:gt.Ph,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>(0,it.p)((0,oe.P)(n),"float32"),t:()=>(0,re.d)(t,(0,it.p)(n,t.dtype)),e:()=>(0,re.d)(t,(0,it.p)((0,Cs.h)(n),t.dtype))}}},Ss={kernelName:gt.oF,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=(0,_r.p)(n,(0,Kt.i)(0)),r=(0,Kt.i)(Pe),s=(0,Kt.i)(Ve),i=(0,re.d)(t,s),o=(0,re.d)((0,re.d)(t,r),(0,mr.Q)((0,it.p)(n,"float32")));return(0,Gn.a)(e,i,o)}}}},As={kernelName:gt.a5,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,re.d)(t,(0,re.d)(n,(0,he.l)((0,Kt.i)(1),n)))}}},Rs={kernelName:gt.i5,gradFunc:t=>({x:()=>(0,oe.P)(t)})};var Ts=n(173);const Os={kernelName:gt.RQ,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,re.d)((0,Ts.m)((0,it.p)(n,"float32")),t)}}};var Is=n(2699);const Fs={kernelName:gt.w3,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,re.d)((0,Is.f)((0,it.p)(n,"float32")),t)}}};var _s=n(9682);const Ms={kernelName:gt.p2,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:s,size:i}=n,o=r.shape,[a,u]=Bt(r,s,i),c=[];for(let e=0;e<t.rank;e++)c.push([a[e],o[e]-a[e]-u[e]]);return{x:()=>(0,_s.v)(t,c)}}},Ds={kernelName:gt.Gc,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:s}=n,i=(0,re.d)(t,r);return{logits:()=>(0,he.l)(i,(0,re.d)((0,wn.S)(i,[s],true),r))}}};var Ls=n(625);const Ps={kernelName:gt.MR,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,re.d)(t,(0,Ls.X)(n))}}};var Vs=n(8441);const zs={kernelName:gt.TQ,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>(0,Vs.E)(t,r,s)}}};var Bs=n(6884);const Ws={kernelName:gt.L8,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>(0,Bs.z)(t,r)}}},Us={kernelName:gt.FK,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,ne.h)(t,(0,re.d)((0,se._)((0,it.p)(n,"float32")),2))}}},Gs={kernelName:gt.bK,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,re.d)(t,(0,re.d)((0,it.p)(n,"float32"),2))}}},js={kernelName:gt._t,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=(0,Kt.i)(2);return{a:()=>(0,re.d)(t,(0,re.d)(s,(0,he.l)(n,r))),b:()=>(0,re.d)(t,(0,re.d)(s,(0,he.l)(r,n)))}}},Hs={kernelName:gt.h8,gradFunc:t=>({x:()=>(0,oe.P)(t)})},qs={kernelName:gt.Tr,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ce.$N(n.shape,r.shape);return{a:()=>{let e=t;const r=Ce.RR(n.shape,s);return r.length>0&&(e=(0,wn.S)(e,r)),(0,xn.X)(e,n.shape)},b:()=>{let e=t;const n=Ce.RR(r.shape,s);return n.length>0&&(e=(0,wn.S)(e,n)),(0,xn.X)((0,bn.W)(e),r.shape)}}}},Xs={kernelName:gt.GB,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,s=r.shape.slice(),{axis:i}=n;(0,x.EC)(i,r.shape).forEach((t=>{s[t]=1}));const o=(0,xn.X)(t,s),a=(0,re.d)(o,(0,Yr.i)(r.shape,"float32"));return{x:()=>a}}},Js={kernelName:gt.sE,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,ne.h)(t,(0,ie.h)((0,Ts.m)(n)))}}},Ys={kernelName:gt.MI,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,re.d)((0,he.l)((0,Kt.i)(1),(0,ie.h)(n)),t)}}},Ks={kernelName:gt.n9,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:s}=n;return{x:()=>{let e=(0,oe.P)(r);if(1===r.rank)for(let n=0;n<s[0];++n)e=(0,ee.I)(e,(0,ts.t)(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)e=(0,ee.I)(e,(0,ts.t)(t,[n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let o=0;o<s[2];++o)e=(0,ee.I)(e,(0,ts.t)(t,[n*r.shape[0],i*r.shape[1],o*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let o=0;o<s[2];++o)for(let a=0;a<s[3];++a)e=(0,ee.I)(e,(0,ts.t)(t,[n*r.shape[0],i*r.shape[1],o*r.shape[2],a*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},Qs={kernelName:gt.G3,gradFunc:(t,e,n)=>{const r=n,{perm:s}=r,i=Ne.LJ(s);return{x:()=>(0,ur.p)(t,i)}}};var Zs=n(2991);const ti={kernelName:gt.To,gradFunc:(t,e,n)=>{const r=n,{axis:s}=r;return{value:()=>(0,Zs.k)(t,s)}}};var ei=n(1300),ni=n(4926);const ri=[mn,yn,gn,vn,kn,$n,Nn,Cn,En,Sn,An,Rn,On,Fn,Mn,Ln,Pn,Vn,zn,jn,Hn,Xn,Zn,Kn,nr,sr,or,cr,dr,fr,ps,pr,br,yr,gr,xr,vr,wr,Nr,Er,Rr,Tr,Or,Ir,Fr,Mr,Dr,Lr,Pr,zr,Ur,Ur,jr,qr,Jr,Kr,Qr,Zr,es,rs,ss,is,os,as,cs,ls,ls,ds,fs,ms,bs,ys,gs,xs,ws,ks,$s,Ns,Es,Ss,As,Rs,Os,Fs,Ms,Ds,Ps,zs,zs,Ws,Ws,Us,js,Gs,Hs,qs,Xs,Js,Ys,Ks,Qs,ti,{kernelName:gt.Qv,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=(0,pe.g)(e,(0,oe.P)(e)),r=(0,ni.I)(t,n);let s=(0,Bn.b)(e,(0,Kt.i)(0,"int32"));const i=r.rank-s.rank;for(let t=0;t<i;++t)s=(0,ei.d)(s,t+1);s=(0,Un.H)(s,(0,Yr.i)(r.shape,"bool"));const o=(0,oe.P)(r);return(0,Gn.a)(s,r,o)}(t,n)}}},{kernelName:gt.Ru,gradFunc:t=>({x:()=>(0,oe.P)(t)})}];for(const t of ri)(0,xt.Li)(t);at.es.prototype.abs=function(){return this.throwIfDisposed(),(0,fe.W)(this)};var si=n(7839);at.es.prototype.acos=function(){return this.throwIfDisposed(),(0,si.K)(this)};var ii=n(1470);at.es.prototype.acosh=function(){return this.throwIfDisposed(),(0,ii._)(this)};var oi=n(4513),ai=n(5228),ui=n(5265);const ci=(0,wt.op)({addStrict_:function(t,e){(0,Jt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,vt._1)(t,"a","addStrict"),r=(0,vt._1)(e,"b","addStrict");return x.k5(n.shape,r.shape,"Error in addStrict: "),(0,ee.I)(n,r)}}),li=(0,wt.op)({divStrict_:function(t,e){(0,Jt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,vt._1)(t,"a","div"),r=(0,vt._1)(e,"b","div");return x.k5(n.shape,r.shape,"Error in divideStrict: "),(0,ne.h)(n,r)}}),hi=(0,wt.op)({maximumStrict_:function(t,e){(0,Jt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,vt._1)(t,"a","maximumStrict"),r=(0,vt._1)(e,"b","maximumStrict");return x.k5(n.shape,r.shape,"Error in maximumStrict: "),(0,pe.g)(n,r)}}),di=(0,wt.op)({minimumStrict_:function(t,e){(0,Jt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,vt._1)(t,"a","minimumStrict"),r=(0,vt._1)(e,"b","minimumStrict");return x.k5(n.shape,r.shape,"Error in minimumStrict: "),(0,oi.L)(n,r)}}),fi=(0,wt.op)({modStrict_:function(t,e){(0,Jt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,vt._1)(t,"a","modStrict"),r=(0,vt._1)(e,"b","modStrict");return x.k5(n.shape,r.shape,"Error in modStrict: "),(0,ai.w)(n,r)}}),pi=(0,wt.op)({mulStrict_:function(t,e){(0,Jt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,vt._1)(t,"a","mul"),r=(0,vt._1)(e,"b","mul");return x.k5(n.shape,r.shape,"Error in multiplyStrict: "),(0,re.d)(n,r)}}),mi=(0,wt.op)({powStrict_:function(t,e){return(0,Jt.MX)("strict variants of ops have been deprecated and will be removed in future"),x.k5(t.shape,e.shape,"Error in powStrict: "),(0,le.s)(t,e)}}),bi=(0,wt.op)({squaredDifferenceStrict_:function(t,e){(0,Jt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,vt._1)(t,"a","squaredDifferenceStrict"),r=(0,vt._1)(e,"b","squaredDifferenceStrict");return x.k5(n.shape,r.shape,"Error in squaredDifferenceStrict: "),(0,ui.$)(n,r)}}),yi=(0,wt.op)({subStrict_:function(t,e){(0,Jt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,vt._1)(t,"a","subStrict"),r=(0,vt._1)(e,"b","subStrict");return x.k5(n.shape,r.shape,"Error in subStrict: "),(0,he.l)(n,r)}});at.es.prototype.addStrict=function(t){return this.throwIfDisposed(),ci(this,t)},at.es.prototype.add=function(t){return this.throwIfDisposed(),(0,ee.I)(this,t)};var gi=n(781);at.es.prototype.all=function(t,e){return this.throwIfDisposed(),(0,gi.$)(this,t,e)};var xi=n(2998);at.es.prototype.any=function(t,e){return this.throwIfDisposed(),(0,xi.Y)(this,t,e)};var wi=n(47);at.es.prototype.argMax=function(t){return this.throwIfDisposed(),(0,wi.N)(this,t)};var vi=n(7394);at.es.prototype.argMin=function(t){return this.throwIfDisposed(),(0,vi.v)(this,t)},at.es.prototype.asScalar=function(){return this.throwIfDisposed(),(0,x.hu)(1===this.size,(()=>"The array must have only 1 element.")),(0,xn.X)(this,[])},at.es.prototype.asType=function(t){return this.throwIfDisposed(),(0,it.p)(this,t)},at.es.prototype.as1D=function(){return this.throwIfDisposed(),(0,xn.X)(this,[this.size])},at.es.prototype.as2D=function(t,e){return this.throwIfDisposed(),(0,xn.X)(this,[t,e])},at.es.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),(0,xn.X)(this,[t,e,n])},at.es.prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),(0,xn.X)(this,[t,e,n,r])},at.es.prototype.as5D=function(t,e,n,r,s){return this.throwIfDisposed(),(0,xn.X)(this,[t,e,n,r,s])};var ki=n(2421);at.es.prototype.asin=function(){return this.throwIfDisposed(),(0,ki.Z)(this)};var $i=n(1891);at.es.prototype.asinh=function(){return this.throwIfDisposed(),(0,$i.V)(this)};var Ni=n(7037);at.es.prototype.atan=function(){return this.throwIfDisposed(),(0,Ni.z)(this)};var Ci=n(9812);at.es.prototype.atan2=function(t){return this.throwIfDisposed(),(0,Ci.f)(this,t)};var Ei=n(369);at.es.prototype.atanh=function(){return this.throwIfDisposed(),(0,Ei.C)(this)};var Si=n(5176);at.es.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),(0,Si.w)(this,t,e,n,r)},at.es.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),(0,Vs.E)(this,t,e)};var Ai=n(7505);at.es.prototype.batchNorm=function(t,e,n,r,s){return this.throwIfDisposed(),(0,Ai.t)(this,t,e,n,r,s)};var Ri=n(8247);at.es.prototype.broadcastTo=function(t){return this.throwIfDisposed(),(0,Ri.U)(this,t)},at.es.prototype.cast=function(t){return this.throwIfDisposed(),(0,it.p)(this,t)};var Ti=n(6825);at.es.prototype.ceil=function(){return this.throwIfDisposed(),(0,Ti.m)(this)};var Oi=n(2279);at.es.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),(0,Oi.i)(this,t,e)},at.es.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof at.es&&(t=[t]),(0,Bs.z)([this,...t],e)};var Ii=n(1355);at.es.prototype.conv1d=function(t,e,n,r,s,i){return this.throwIfDisposed(),(0,Ii.P)(this,t,e,n,r,s,i)};var Fi=n(1405);at.es.prototype.conv2dTranspose=function(t,e,n,r,s){return this.throwIfDisposed(),(0,Fi.b)(this,t,e,n,r,s)},at.es.prototype.conv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),(0,Qn.T)(this,t,e,n,r,s,i)},at.es.prototype.cos=function(){return this.throwIfDisposed(),(0,Ts.m)(this)},at.es.prototype.cosh=function(){return this.throwIfDisposed(),(0,Is.f)(this)},at.es.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),(0,ar.z)(this,t,e,n)};var _i=n(9112);at.es.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),(0,_i.n)(this,t,e)};var Mi=n(4718);at.es.prototype.depthwiseConv2D=function(t,e,n,r,s,i){return(0,Jt.MX)("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),(0,Mi.B)(this,t,e,n,r,s,i)},at.es.prototype.depthwiseConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),(0,Mi.B)(this,t,e,n,r,s,i)};var Di=n(557);at.es.prototype.dilation2d=function(t,e,n,r,s){return this.throwIfDisposed(),(0,Di.W)(this,t,e,n,r,s)};var Li=n(9322);at.es.prototype.divNoNan=function(t){return this.throwIfDisposed(),(0,Li.N)(this,t)},at.es.prototype.divStrict=function(t){return this.throwIfDisposed(),li(this,t)},at.es.prototype.div=function(t){return this.throwIfDisposed(),(0,ne.h)(this,t)};const Pi=(0,wt.op)({dot_:function(t,e){const n=(0,vt._1)(t,"t1","dot"),r=(0,vt._1)(e,"t2","dot");x.hu(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(x.hu(s===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`)),1===n.rank&&1===r.rank){const t=(0,xn.X)(n,[1,-1]),e=(0,xn.X)(r,[-1,1]),s=(0,_n.O)(t,e);return(0,xn.X)(s,[])}if(1===n.rank&&2===r.rank){const t=(0,xn.X)(n,[1,-1]),e=(0,xn.X)(r,[r.shape[0],r.shape[1]]),s=(0,_n.O)(t,e);return(0,xn.X)(s,[s.size])}if(2===n.rank&&1===r.rank){const t=(0,xn.X)(r,[-1,1]),e=(0,_n.O)(n,t);return(0,xn.X)(e,[e.size])}{const t=(0,xn.X)(r,[r.shape[0],r.shape[1]]);return(0,_n.O)(n,t)}}});at.es.prototype.dot=function(t){return this.throwIfDisposed(),Pi(this,t)};var Vi=n(3233);at.es.prototype.elu=function(){return this.throwIfDisposed(),(0,Vi.p)(this)};var zi=n(6500);const Bi=(0,wt.op)({equalStrict_:function(t,e){(0,Jt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,vt._1)(t,"a","equalStrict"),r=(0,vt._1)(e,"b","equalStrict");return(0,x.k5)(n.shape,r.shape,"Error in equalStrict: "),(0,Br.D)(n,r)}}),Wi=(0,wt.op)({greaterEqualStrict_:function(t,e){(0,Jt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,vt._1)(t,"a","greaterEqualStrict"),r=(0,vt._1)(e,"b","greaterEqualStrict");return(0,x.k5)(n.shape,r.shape,"Error in greaterEqualStrict: "),(0,Bn.b)(n,r)}}),Ui=(0,wt.op)({greaterStrict_:function(t,e){(0,Jt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,vt._1)(t,"a","greaterStrict"),r=(0,vt._1)(e,"b","greaterStrict");return(0,x.k5)(n.shape,r.shape,"Error in greaterStrict: "),(0,_r.p)(n,r)}}),Gi=(0,wt.op)({lessEqualStrict_:function(t,e){(0,Jt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,vt._1)(t,"a","lessEqualStrict"),r=(0,vt._1)(e,"b","lessEqualStrict");return(0,x.k5)(n.shape,r.shape,"Error in lessEqualStrict: "),(0,Wn.z)(n,r)}}),ji=(0,wt.op)({lessStrict_:function(t,e){(0,Jt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,vt._1)(t,"a","lessStrict"),r=(0,vt._1)(e,"b","lessStrict");return(0,x.k5)(n.shape,r.shape,"Error in lessStrict: "),(0,Gr.d)(n,r)}}),Hi=(0,wt.op)({notEqualStrict_:function(t,e){(0,Jt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,vt._1)(t,"a","notEqualStrict"),r=(0,vt._1)(e,"b","notEqualStrict");return(0,x.k5)(n.shape,r.shape,"Error in notEqualStrict: "),(0,zi.Q)(n,r)}});at.es.prototype.equalStrict=function(t){return this.throwIfDisposed(),Bi(this,t)},at.es.prototype.equal=function(t){return this.throwIfDisposed(),(0,Br.D)(this,t)};var qi=n(4650);at.es.prototype.erf=function(){return this.throwIfDisposed(),(0,qi.q)(this)},at.es.prototype.exp=function(){return this.throwIfDisposed(),(0,mr.Q)(this)},at.es.prototype.expandDims=function(t){return this.throwIfDisposed(),(0,ei.d)(this,t)};var Xi=n(3426);at.es.prototype.expm1=function(){return this.throwIfDisposed(),(0,Xi.t)(this)};var Ji=n(7020);at.es.prototype.fft=function(){return this.throwIfDisposed(),(0,Ji.k)(this)},at.es.prototype.flatten=function(){return this.throwIfDisposed(),(0,xn.X)(this,[this.size])},at.es.prototype.floor=function(){return this.throwIfDisposed(),(0,ns.G)(this)};var Yi=n(9165);at.es.prototype.floorDiv=function(t){return this.throwIfDisposed(),(0,Yi.q)(this,t)},at.es.prototype.gather=function(t,e){return this.throwIfDisposed(),(0,ni.I)(this,t,e)},at.es.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),Wi(this,t)},at.es.prototype.greaterEqual=function(t){return this.throwIfDisposed(),(0,Bn.b)(this,t)},at.es.prototype.greaterStrict=function(t){return this.throwIfDisposed(),Ui(this,t)},at.es.prototype.greater=function(t){return this.throwIfDisposed(),(0,_r.p)(this,t)};var Ki=n(8447);at.es.prototype.ifft=function(){return this.throwIfDisposed(),(0,Ki.S)(this)};var Qi=n(4415);at.es.prototype.irfft=function(){return this.throwIfDisposed(),(0,Qi.w)(this)};const Zi=(0,wt.op)({isFinite_:function(t){const e={x:(0,vt._1)(t,"x","isFinite")};return d.BV.runKernel(gt.av,e)}});at.es.prototype.isFinite=function(){return this.throwIfDisposed(),Zi(this)};const to=(0,wt.op)({isInf_:function(t){const e={x:(0,vt._1)(t,"x","isInf")};return d.BV.runKernel(gt.iW,e)}});at.es.prototype.isInf=function(){return this.throwIfDisposed(),to(this)};const eo=(0,wt.op)({isNaN_:function(t){const e={x:(0,vt._1)(t,"x","isNaN")};return d.BV.runKernel(gt.r7,e)}});at.es.prototype.isNaN=function(){return this.throwIfDisposed(),eo(this)};var no=n(9133);at.es.prototype.leakyRelu=function(t){return this.throwIfDisposed(),(0,no.h)(this,t)},at.es.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),Gi(this,t)},at.es.prototype.lessEqual=function(t){return this.throwIfDisposed(),(0,Wn.z)(this,t)},at.es.prototype.lessStrict=function(t){return this.throwIfDisposed(),ji(this,t)},at.es.prototype.less=function(t){return this.throwIfDisposed(),(0,Gr.d)(this,t)};var ro=n(9648);at.es.prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),(0,ro.G)(this,t,e,n,r)};var so=n(3694);const io=(0,wt.op)({logSigmoid_:function(t){const e=(0,vt._1)(t,"x","logSigmoid");return(0,Yt.cb)((t=>({value:(0,bn.W)((0,so.W)((0,bn.W)(t))),gradFunc:e=>(0,re.d)(e,(0,Ls.X)((0,bn.W)(t)))})))(e)}});at.es.prototype.logSigmoid=function(){return this.throwIfDisposed(),io(this)};var oo=n(1510);at.es.prototype.logSoftmax=function(t){return this.throwIfDisposed(),(0,oo.C)(this,t)};var ao=n(1391);at.es.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),(0,ao.l)(this,t,e)},at.es.prototype.log=function(){return this.throwIfDisposed(),(0,hs.c)(this)};var uo=n(7474);at.es.prototype.log1p=function(){return this.throwIfDisposed(),(0,uo.K)(this)},at.es.prototype.logicalAnd=function(t){return this.throwIfDisposed(),(0,Un.H)(this,t)},at.es.prototype.logicalNot=function(){return this.throwIfDisposed(),(0,Cs.h)(this)};var co=n(5750);at.es.prototype.logicalOr=function(t){return this.throwIfDisposed(),(0,co.K)(this,t)};const lo=(0,wt.op)({logicalXor_:function(t,e){const n=(0,vt._1)(t,"a","logicalXor","bool"),r=(0,vt._1)(e,"b","logicalXor","bool");return(0,Ce.$N)(n.shape,r.shape),(0,Un.H)((0,co.K)(t,e),(0,Cs.h)((0,Un.H)(t,e)))}});at.es.prototype.logicalXor=function(t){return this.throwIfDisposed(),lo(this,t)},at.es.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),(0,_n.O)(this,t,e,n)};var ho=n(1174);at.es.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),(0,ho._)(this,t,e,n,r)};var fo=n(3307);at.es.prototype.max=function(t,e){return this.throwIfDisposed(),(0,fo.F)(this,t,e)},at.es.prototype.maximumStrict=function(t){return this.throwIfDisposed(),hi(this,t)},at.es.prototype.maximum=function(t){return this.throwIfDisposed(),(0,pe.g)(this,t)};var po=n(5130);at.es.prototype.mean=function(t,e){return this.throwIfDisposed(),(0,po.J)(this,t,e)};var mo=n(5735);at.es.prototype.min=function(t,e){return this.throwIfDisposed(),(0,mo.V)(this,t,e)},at.es.prototype.minimumStrict=function(t){return this.throwIfDisposed(),di(this,t)},at.es.prototype.minimum=function(t){return this.throwIfDisposed(),(0,oi.L)(this,t)};var bo=n(1483);at.es.prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),(0,bo.V)(this,t,e)},at.es.prototype.modStrict=function(t){return this.throwIfDisposed(),fi(this,t)},at.es.prototype.mod=function(t){return this.throwIfDisposed(),(0,ai.w)(this,t)},at.es.prototype.mulStrict=function(t){return this.throwIfDisposed(),pi(this,t)},at.es.prototype.mul=function(t){return this.throwIfDisposed(),(0,re.d)(this,t)},at.es.prototype.neg=function(){return this.throwIfDisposed(),(0,bn.W)(this)};var yo=n(3561);at.es.prototype.norm=function(t,e,n){return this.throwIfDisposed(),(0,yo.K)(this,t,e,n)},at.es.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),Hi(this,t)},at.es.prototype.notEqual=function(t){return this.throwIfDisposed(),(0,zi.Q)(this,t)};var go=n(6708);at.es.prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),(0,go.l)(this,t,e,n)};var xo=n(7846);at.es.prototype.onesLike=function(){return this.throwIfDisposed(),(0,xo.J)(this)},at.es.prototype.pad=function(t,e){return this.throwIfDisposed(),(0,_s.v)(this,t,e)};const wo=(0,wt.op)({pool_:function(t,e,n,r,s,i){null==s&&(s=[1,1]),null==i&&(i=1),0===r&&(r="valid");const o=(0,vt._1)(t,"x","maxPool");let a=o,u=!1;3===o.rank&&(u=!0,a=(0,xn.X)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),x.hu(Ae.jT(i,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`));const c=Ae.Xw(a.shape,e,i,s,r),l=[c.dilationHeight,c.dilationWidth];let h;h="same"===r?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),r=n.map((t=>Math.floor(t/2))),s=n.map(((t,e)=>t-r[e]));return n.map(((t,e)=>[r[e],s[e]]))}([c.filterHeight,c.filterWidth],l):[[0,0],[0,0]];const d=1===l[0]&&1===l[1],[f,p]=function(t,e,n){const r=n.map((t=>t[0])),s=n.map((t=>t[1])),i=t.concat(r,s),o=e.map(((t,e)=>(t-i[e]%t)%t)),a=s.map(((t,e)=>t+o[e])),u=e.map(((t,e)=>[r[e],a[e]])),c=e.map(((t,e)=>[0,o[e]]));return[u,c]}([c.inHeight,c.inWidth],l,h),m=d?r:"valid",b=d?a:(0,Dn.f)(a,l,f),y=("avg"===n?()=>(0,Si.w)(b,e,i,m):()=>(0,ho._)(b,e,i,m))(),g=d?y:(0,Vs.E)(y,l,p);return u?(0,xn.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});at.es.prototype.pool=function(t,e,n,r,s){return this.throwIfDisposed(),wo(this,t,e,n,r,s)},at.es.prototype.powStrict=function(t){return this.throwIfDisposed(),mi(this,t)},at.es.prototype.pow=function(t){return this.throwIfDisposed(),(0,le.s)(this,t)};var vo=n(8151);at.es.prototype.prelu=function(t){return this.throwIfDisposed(),(0,vo.A)(this,t)};var ko=n(9451);at.es.prototype.prod=function(t,e){return this.throwIfDisposed(),(0,ko.W)(this,t,e)};var $o=n(9036);at.es.prototype.reciprocal=function(){return this.throwIfDisposed(),(0,$o.M)(this)};var No=n(7409);at.es.prototype.relu=function(){return this.throwIfDisposed(),(0,No.U)(this)};var Co=n(3582);at.es.prototype.relu6=function(){return this.throwIfDisposed(),(0,Co.b)(this)},at.es.prototype.reshapeAs=function(t){return this.throwIfDisposed(),(0,xn.X)(this,t.shape)},at.es.prototype.reshape=function(t){return this.throwIfDisposed(),(0,xn.X)(this,t)};var Eo=n(3305);at.es.prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),(0,Eo.I)(this,t,e,n)};var So=n(5098);at.es.prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),(0,So.j)(this,t,e,n)},at.es.prototype.reverse=function(t){return this.throwIfDisposed(),(0,vs.G)(this,t)};var Ao=n(3710);at.es.prototype.rfft=function(){return this.throwIfDisposed(),(0,Ao.Q)(this)};var Ro=n(7809);at.es.prototype.round=function(){return this.throwIfDisposed(),(0,Ro.N)(this)},at.es.prototype.rsqrt=function(){return this.throwIfDisposed(),(0,kr.b)(this)};var To=n(5503);at.es.prototype.selu=function(){return this.throwIfDisposed(),(0,To.U)(this)};var Oo=n(8678);at.es.prototype.separableConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),(0,Oo.U)(this,t,e,n,r,s,i)},at.es.prototype.sigmoid=function(){return this.throwIfDisposed(),(0,Ls.X)(this)};var Io=n(4434);at.es.prototype.sign=function(){return this.throwIfDisposed(),(0,Io.X)(this)},at.es.prototype.sin=function(){return this.throwIfDisposed(),(0,rr.O)(this)},at.es.prototype.sinh=function(){return this.throwIfDisposed(),(0,ir.R)(this)},at.es.prototype.slice=function(t,e){return this.throwIfDisposed(),(0,ts.t)(this,t,e)};var Fo=n(682);at.es.prototype.softmax=function(t){return this.throwIfDisposed(),(0,Fo.X)(this,t)},at.es.prototype.softplus=function(){return this.throwIfDisposed(),(0,so.W)(this)},at.es.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),(0,Dn.f)(this,t,e)},at.es.prototype.split=function(t,e){return this.throwIfDisposed(),(0,qn.V)(this,t,e)},at.es.prototype.sqrt=function(){return this.throwIfDisposed(),(0,se._)(this)},at.es.prototype.square=function(){return this.throwIfDisposed(),(0,ie.h)(this)},at.es.prototype.squaredDifference=function(t){return this.throwIfDisposed(),(0,ui.$)(this,t)},at.es.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),bi(this,t)};var _o=n(9590);at.es.prototype.squeeze=function(t){return this.throwIfDisposed(),(0,_o.L)(this,t)},at.es.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof at.es?[this,t]:[this,...t];return(0,Zs.k)(n,e)},at.es.prototype.step=function(t){return this.throwIfDisposed(),(0,pn.N)(this,t)};var Mo=n(5158);at.es.prototype.stridedSlice=function(t,e,n,r,s,i,o,a){return this.throwIfDisposed(),(0,Mo.N)(this,t,e,n,r,s,i,o,a)},at.es.prototype.subStrict=function(t){return this.throwIfDisposed(),yi(this,t)},at.es.prototype.sub=function(t){return this.throwIfDisposed(),(0,he.l)(this,t)},at.es.prototype.sum=function(t,e){return this.throwIfDisposed(),(0,wn.S)(this,t,e)};var Do=n(1173);at.es.prototype.tan=function(){return this.throwIfDisposed(),(0,Do.O)(this)};var Lo=n(1869);at.es.prototype.tanh=function(){return this.throwIfDisposed(),(0,Lo.A)(this)},at.es.prototype.tile=function(t){return this.throwIfDisposed(),(0,$r.G)(this,t)},at.es.prototype.toBool=function(){return this.throwIfDisposed(),(0,it.p)(this,"bool")},at.es.prototype.toFloat=function(){return this.throwIfDisposed(),(0,it.p)(this,"float32")},at.es.prototype.toInt=function(){return this.throwIfDisposed(),(0,it.p)(this,"int32")};var Po=n(3243);at.es.prototype.topk=function(t,e){return this.throwIfDisposed(),(0,Po.h)(this,t,e)},at.es.prototype.transpose=function(t){return this.throwIfDisposed(),(0,ur.p)(this,t)};var Vo=n(9608);at.es.prototype.unique=function(t){return this.throwIfDisposed(),(0,Vo.T)(this,t)},at.es.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Cr(this,t,e)},at.es.prototype.unstack=function(t){return this.throwIfDisposed(),(0,us.H)(this,t)},at.es.prototype.where=function(t,e){return this.throwIfDisposed(),(0,Gn.a)(t,this,e)},at.es.prototype.zerosLike=function(){return this.throwIfDisposed(),(0,oe.P)(this)}},9121:(t,e,n)=>{"use strict";n.d(e,{SY:()=>r,VG:()=>s,Sp:()=>i,mm:()=>o,Xz:()=>a,oT:()=>u,IK:()=>c,sJ:()=>l,aJ:()=>h,M2:()=>d,qw:()=>f,jM:()=>p,Oy:()=>m,QC:()=>b,Jh:()=>y,RO:()=>g,_k:()=>x,IM:()=>w,XL:()=>v,zw:()=>k,zv:()=>$,Ly:()=>N,RF:()=>C,gJ:()=>E,xn:()=>S,Zz:()=>A,yj:()=>R,Eh:()=>T,mh:()=>O,wU:()=>I,wm:()=>F,x1:()=>_,o2:()=>M,ik:()=>D,mc:()=>L,TR:()=>P,iH:()=>V,Vc:()=>z,QR:()=>B,T0:()=>W,ci:()=>U,sL:()=>G,y7:()=>j,$w:()=>H,p4:()=>q,ek:()=>X,Vn:()=>J,oH:()=>Y,SX:()=>K,HE:()=>Q,Om:()=>Z,hd:()=>tt,NE:()=>et,YF:()=>nt,Y0:()=>rt,vw:()=>st,de:()=>it,Uy:()=>ot,OR:()=>at,je:()=>ut,sH:()=>ct,qi:()=>lt,q1:()=>ht,iZ:()=>dt,Ac:()=>ft,iJ:()=>pt,Qg:()=>mt,J_:()=>bt,av:()=>yt,iW:()=>gt,r7:()=>xt,J$:()=>wt,vt:()=>vt,CA:()=>kt,e7:()=>$t,Zb:()=>Nt,kU:()=>Ct,PY:()=>Et,Vf:()=>St,MZ:()=>At,qC:()=>Rt,eZ:()=>Tt,Hh:()=>Ot,Yo:()=>It,BM:()=>Ft,mT:()=>_t,OV:()=>Mt,OA:()=>Dt,OU:()=>Lt,vF:()=>Pt,q2:()=>Vt,c1:()=>zt,q8:()=>Bt,jQ:()=>Wt,Vb:()=>Ut,NZ:()=>Gt,wY:()=>jt,ku:()=>Ht,yQ:()=>qt,uv:()=>Xt,cy:()=>Jt,W0:()=>Yt,qW:()=>Kt,we:()=>Qt,Qi:()=>Zt,ly:()=>te,pe:()=>ee,o0:()=>ne,Dl:()=>re,e6:()=>se,xJ:()=>ie,$H:()=>oe,qk:()=>ae,HZ:()=>ue,dp:()=>ce,Hm:()=>le,_Y:()=>he,zb:()=>de,Sb:()=>fe,mK:()=>pe,e0:()=>me,bV:()=>be,xQ:()=>ye,Ph:()=>ge,oF:()=>xe,p2:()=>we,RQ:()=>ve,w3:()=>ke,i5:()=>$e,a5:()=>Ne,MR:()=>Ce,FK:()=>Ee,GB:()=>Se,TQ:()=>Ae,L8:()=>Re,Gc:()=>Te,_t:()=>Oe,bK:()=>Ie,Tr:()=>Fe,D2:()=>_e,m2:()=>Me,sE:()=>De,MI:()=>Le,n9:()=>Pe,cW:()=>Ve,G3:()=>ze,kp:()=>Be,To:()=>We,Qv:()=>Ue,Ru:()=>Ge,h8:()=>je,eB:()=>He,b9:()=>qe,us:()=>Xe,_V:()=>Je,lu:()=>Ye});const r="Abs",s="Acos",i="Acosh",o="Add",a="AddN",u="All",c="Any",l="ArgMax",h="ArgMin",d="Asin",f="Asinh",p="Atan",m="Atanh",b="Atan2",y="AvgPool",g="AvgPoolGrad",x="AvgPool3D",w="AvgPool3DGrad",v="BatchMatMul",k="BatchToSpaceND",$="Bincount",N="BroadcastTo",C="Cast",E="Ceil",S="ClipByValue",A="Complex",R="ComplexAbs",T="Concat",O="Conv2D",I="Conv2DBackpropFilter",F="Conv2DBackpropInput",_="Conv3D",M="Conv3DBackpropFilterV2",D="Conv3DBackpropInputV2",L="Cos",P="Cosh",V="Cumsum",z="CropAndResize",B="DenseBincount",W="DepthToSpace",U="DepthwiseConv2dNative",G="DepthwiseConv2dNativeBackpropFilter",j="DepthwiseConv2dNativeBackpropInput",H="Diag",q="Dilation2D",X="Dilation2DBackpropInput",J="Dilation2DBackpropFilter",Y="RealDiv",K="Elu",Q="EluGrad",Z="Erf",tt="Equal",et="Exp",nt="ExpandDims",rt="Expm1",st="FFT",it="Fill",ot="FlipLeftRight",at="Floor",ut="FloorDiv",ct="FusedBatchNorm",lt="GatherV2",ht="GatherNd",dt="Greater",ft="GreaterEqual",pt="Identity",mt="IFFT",bt="Imag",yt="IsFinite",gt="IsInf",xt="IsNan",wt="LeakyRelu",vt="Less",kt="LessEqual",$t="LinSpace",Nt="Log",Ct="Log1p",Et="LogicalAnd",St="LogicalNot",At="LogicalOr",Rt="LogSoftmax",Tt="LRN",Ot="LRNGrad",It="Max",Ft="Maximum",_t="MaxPool",Mt="MaxPoolGrad",Dt="MaxPool3D",Lt="MaxPool3DGrad",Pt="MaxPoolWithArgmax",Vt="Mean",zt="Min",Bt="Minimum",Wt="MirrorPad",Ut="Mod",Gt="Multinomial",jt="Multiply",Ht="Neg",qt="NotEqual",Xt="NonMaxSuppressionV3",Jt="NonMaxSuppressionV4",Yt="NonMaxSuppressionV5",Kt="OnesLike",Qt="OneHot",Zt="Pack",te="PadV2",ee="Pow",ne="Prelu",re="Prod",se="Range",ie="Real",oe="Reciprocal",ae="Relu",ue="Reshape",ce="ResizeNearestNeighbor",le="ResizeNearestNeighborGrad",he="ResizeBilinear",de="ResizeBilinearGrad",fe="Relu6",pe="Reverse",me="Round",be="Rsqrt",ye="ScatterNd",ge="Select",xe="Selu",we="Slice",ve="Sin",ke="Sinh",$e="Sign",Ne="Sigmoid",Ce="Softplus",Ee="Sqrt",Se="Sum",Ae="SpaceToBatchND",Re="SplitV",Te="Softmax",Oe="SquaredDifference",Ie="Square",Fe="Sub",_e="SparseToDense",Me="StridedSlice",De="Tan",Le="Tanh",Pe="Tile",Ve="TopK",ze="Transpose",Be="Unique",We="Unpack",Ue="UnsortedSegmentSum",Ge="ZerosLike",je="Step",He="FromPixels",qe="RotateWithOffset",Xe="_FusedMatMul",Je="FusedConv2D",Ye="FusedDepthwiseConv2D"},6151:(t,e,n)=>{"use strict";n.d(e,{pI:()=>a,uk:()=>u,tr:()=>c,wC:()=>l,Li:()=>h});var r=n(2885),s=n(5938);const i=(0,s.R)("kernelRegistry",(()=>new Map)),o=(0,s.R)("gradRegistry",(()=>new Map));function a(t,e){const n=d(t,e);return i.get(n)}function u(t){return o.get(t)}function c(t){const e=i.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[i,o]=s,[a]=i.split("_");a===t&&n.push(o)}return n}function l(t){const{kernelName:e,backendName:n}=t,r=d(e,n);i.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),i.set(r,t)}function h(t){const{kernelName:e}=t;o.has(e)&&(0,r.OB)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),o.set(e,t)}function d(t,e){return`${e}_${t}`}},6235:(t,e,n)=>{"use strict";n.d(e,{W:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({abs_:function(t){const e=(0,i._1)(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return r.BV.runKernel(s.yj,t)}{const t={x:e};return r.BV.runKernel(s.SY,t)}}})},7839:(t,e,n)=>{"use strict";n.d(e,{K:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({acos_:function(t){const e={x:(0,i._1)(t,"x","acos")};return r.BV.runKernel(s.VG,e)}})},1470:(t,e,n)=>{"use strict";n.d(e,{_:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({acosh_:function(t){const e={x:(0,i._1)(t,"x","acosh")};return r.BV.runKernel(s.Sp,e)}})},6407:(t,e,n)=>{"use strict";n.d(e,{I:()=>a});var r=n(7097),s=n(9121),i=n(747),o=n(3740);const a=(0,n(2668).op)({add_:function(t,e){let n=(0,o._1)(t,"a","add"),a=(0,o._1)(e,"b","add");[n,a]=(0,i.T_)(n,a);const u={a:n,b:a};return r.BV.runKernel(s.mm,u)}})},781:(t,e,n)=>{"use strict";n.d(e,{$:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({all_:function(t,e=null,n=!1){const o={x:(0,i._1)(t,"x","all","bool")},a={axis:e,keepDims:n};return r.BV.runKernel(s.oT,o,a)}})},2998:(t,e,n)=>{"use strict";n.d(e,{Y:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({any_:function(t,e=null,n=!1){const o={x:(0,i._1)(t,"x","any","bool")},a={axis:e,keepDims:n};return r.BV.runKernel(s.IK,o,a)}})},47:(t,e,n)=>{"use strict";n.d(e,{N:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({argMax_:function(t,e=0){const n={x:(0,i._1)(t,"x","argMax")},o={axis:e};return r.BV.runKernel(s.sJ,n,o)}})},7394:(t,e,n)=>{"use strict";n.d(e,{v:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({argMin_:function(t,e=0){const n={x:(0,i._1)(t,"x","argMin")},o={axis:e};return r.BV.runKernel(s.aJ,n,o)}})},2421:(t,e,n)=>{"use strict";n.d(e,{Z:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({asin_:function(t){const e={x:(0,i._1)(t,"x","asin")};return r.BV.runKernel(s.M2,e)}})},1891:(t,e,n)=>{"use strict";n.d(e,{V:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({asinh_:function(t){const e={x:(0,i._1)(t,"x","asinh")};return r.BV.runKernel(s.qw,e)}})},7037:(t,e,n)=>{"use strict";n.d(e,{z:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({atan_:function(t){const e={x:(0,i._1)(t,"x","atan")};return r.BV.runKernel(s.jM,e)}})},9812:(t,e,n)=>{"use strict";n.d(e,{f:()=>a});var r=n(7097),s=n(9121),i=n(747),o=n(3740);const a=(0,n(2668).op)({atan2_:function(t,e){let n=(0,o._1)(t,"a","atan2"),a=(0,o._1)(e,"b","atan2");[n,a]=(0,i.T_)(n,a);const u={a:n,b:a};return r.BV.runKernel(s.QC,u)}})},369:(t,e,n)=>{"use strict";n.d(e,{C:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({atanh_:function(t){const e={x:(0,i._1)(t,"x","atanh")};return r.BV.runKernel(s.Oy,e)}})},5176:(t,e,n)=>{"use strict";n.d(e,{w:()=>h});var r=n(7097),s=n(9121),i=n(3740),o=n(569),a=n(2271),u=n(2582),c=n(2668),l=n(4968);const h=(0,c.op)({avgPool_:function(t,e,n,c,h){const d=(0,i._1)(t,"x","avgPool","float32");o.hu(u.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let f=d,p=!1;3===d.rank&&(p=!0,f=(0,l.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),o.hu(4===f.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${f.rank}.`)),null!=h&&o.hu(o.GN(c),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${h} but got pad ${c}.`));const m={x:f},b={filterSize:e,strides:n,pad:c,dimRoundingMode:h};let y=r.BV.runKernel(s.Jh,m,b);return y=(0,a.p)(y,d.dtype),p?(0,l.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},1749:(t,e,n)=>{"use strict";n.d(e,{u:()=>d});var r=n(7097),s=n(4368),i=n(9121),o=n(3740),a=n(569),u=n(2271),c=n(2582),l=n(2668),h=n(4968);const d=(0,l.op)({avgPool3d_:function(t,e,n,l,d,f="NDHWC",p){null==p?p=[1,1,1]:(0,s.MX)("dilations is deprecated, this field will be gone in v3.0.0.");const m=(0,o._1)(t,"x","avgPool3d","float32");let b=m,y=!1;4===m.rank&&(y=!0,b=(0,h.X)(m,[1,m.shape[0],m.shape[1],m.shape[2],m.shape[3]])),a.hu(5===b.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${b.rank}.`)),a.hu("NDHWC"===f,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${f}`)),a.hu(c.jT(n,p),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${p}'`)),null!=d&&a.hu(a.GN(l),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${l}.`));const g={x:b},x={filterSize:e,strides:n,pad:l,dimRoundingMode:d,dataFormat:f,dilations:p};let w=r.BV.runKernel(i._k,g,x);return w=(0,u.p)(w,b.dtype),y?(0,h.X)(w,[w.shape[1],w.shape[2],w.shape[3],w.shape[4]]):w}})},3591:(t,e,n)=>{"use strict";n.d(e,{YB:()=>s,Vh:()=>i,kz:()=>o,rv:()=>a,lB:()=>u,Q3:()=>c,LJ:()=>l,sY:()=>h});var r=n(569);function s(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function i(t,e,n){const r=t.length+e.length,s=[];let i=0,o=0;for(let a=0;a<r;a++)-1===n.indexOf(a)?s.push(t[i++]):s.push(e[o++]);return s}function o(t,e){const n=[],r=t.length;for(let s=0;s<r;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map((e=>t[e]))]}function a(t,e){return i(t,e.map((t=>1)),e)}function u(t,e,n){r.hu(s(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function c(t,e){if(s(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach((t=>n.push(t))),n}function l(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function h(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}},8441:(t,e,n)=>{"use strict";n.d(e,{E:()=>a});var r=n(7097),s=n(9121),i=n(3740),o=n(569);const a=(0,n(2668).op)({batchToSpaceND_:function(t,e,n){const a=(0,i._1)(t,"x","batchToSpaceND"),u=e.reduce(((t,e)=>t*e));o.hu(a.rank>=1+e.length,(()=>`input rank is ${a.rank} but should be > than blockShape.length ${e.length}`)),o.hu(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),o.hu(a.shape[0]%u==0,(()=>`input tensor batch is ${a.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${u}`));const c={x:a},l={blockShape:e,crops:n};return r.BV.runKernel(s.zw,c,l)}})},7505:(t,e,n)=>{"use strict";n.d(e,{t:()=>u});var r=n(7097),s=n(9121),i=n(3740),o=n(569),a=n(4968);const u=(0,n(2668).op)({batchNorm_:function(t,e,n,u,c,l){null==l&&(l=.001);const h=(0,i._1)(t,"x","batchNorm"),d=(0,i._1)(e,"mean","batchNorm"),f=(0,i._1)(n,"variance","batchNorm");let p,m;null!=c&&(p=(0,i._1)(c,"scale","batchNorm")),null!=u&&(m=(0,i._1)(u,"offset","batchNorm")),o.hu(d.rank===f.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o.hu(null==m||d.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o.hu(null==p||d.rank===p.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const b={x:function(t){let e;return e=0===t.rank||1===t.rank?(0,a.X)(t,[1,1,1,t.size]):2===t.rank?(0,a.X)(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?(0,a.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(h),scale:p,offset:m,mean:d,variance:f},y={varianceEpsilon:l},g=r.BV.runKernel(s.sH,b,y);return(0,a.X)(g,h.shape)}})},8247:(t,e,n)=>{"use strict";n.d(e,{U:()=>c});var r=n(7097),s=n(9121),i=n(3740),o=n(8723),a=n(2668),u=n(4968);const c=(0,a.op)({broadcastTo_:function(t,e){let n=(0,i._1)(t,"broadcastTo","x");const a=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=(0,u.X)(n,t)}const c=n.shape,l=Array.from(e);for(let t=e.length-1;t>=0;t--)if(c[t]===e[t])l[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${e}].`);if(0===l.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return(0,o.d)(n);const h={x:n},d={reps:l};return r.BV.runKernel(s.n9,h,d)}})},2200:(t,e,n)=>{"use strict";function r(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const i=n-1-s,o=t[i]||1;(e[e.length-1-s]||1)>1&&1===o&&r.unshift(i)}return r}function s(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],i=e.length-r-1,o=e[i];(null==s||1===s&&o>1)&&n.unshift(i)}return n}function i(t,e){const n=[],r=Math.max(t.length,e.length);for(let s=0;s<r;s++){let r=t[t.length-s-1];null==r&&(r=1);let i=e[e.length-s-1];if(null==i&&(i=1),1===r)n.unshift(i);else if(1===i)n.unshift(r);else{if(r!==i){throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`)}n.unshift(r)}}return n}n.d(e,{XF:()=>r,RR:()=>s,$N:()=>i})},2657:(t,e,n)=>{"use strict";n.d(e,{f:()=>i});var r=n(4077),s=n(569);function i(t,e="float32",n){return e=e||"float32",s.Mu(t),new r.YD(t,e,n)}},2271:(t,e,n)=>{"use strict";n.d(e,{p:()=>a});var r=n(7097),s=n(9121),i=n(3740),o=n(569);const a=(0,n(2668).op)({cast_:function(t,e){const n=(0,i._1)(t,"x","cast");if(!o.LP(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const a={x:n},u={dtype:e};return r.BV.runKernel(s.RF,a,u)}})},6825:(t,e,n)=>{"use strict";n.d(e,{m:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({ceil_:function(t){const e={x:(0,i._1)(t,"x","ceil")};return r.BV.runKernel(s.gJ,e)}})},2279:(t,e,n)=>{"use strict";n.d(e,{i:()=>a});var r=n(7097),s=n(9121),i=n(3740),o=n(569);const a=(0,n(2668).op)({clipByValue_:function(t,e,n){const a=(0,i._1)(t,"x","clipByValue");o.hu(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const u={x:a},c={clipValueMin:e,clipValueMax:n};return r.BV.runKernel(s.xn,u,c)}})},8723:(t,e,n)=>{"use strict";n.d(e,{d:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({clone_:function(t){const e={x:(0,i._1)(t,"x","clone","string_or_numeric")};return r.BV.runKernel(s.iJ,e)}})},1661:(t,e,n)=>{"use strict";n.d(e,{P:()=>a});var r=n(7097),s=n(9121),i=n(3740),o=n(569);const a=(0,n(2668).op)({complex_:function(t,e){const n=(0,i._1)(t,"real","complex"),a=(0,i._1)(e,"imag","complex");o.k5(n.shape,a.shape,`real and imag shapes, ${n.shape} and ${a.shape}, must match in call to tf.complex().`);const u={real:n,imag:a};return r.BV.runKernel(s.Zz,u)}})},6884:(t,e,n)=>{"use strict";n.d(e,{z:()=>u});var r=n(7097),s=n(9121),i=n(3740),o=n(569),a=n(8723);const u=(0,n(2668).op)({concat_:function(t,e=0){(0,o.hu)(t.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,i.sI)(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)})),1===n.length)return(0,a.d)(n[0]);const u=n,c={axis:e};return r.BV.runKernel(s.Eh,u,c)}})},1355:(t,e,n)=>{"use strict";n.d(e,{P:()=>c});var r=n(3740),s=n(569),i=n(4794),o=n(2582),a=n(2668),u=n(4968);const c=(0,a.op)({conv1d_:function(t,e,n,a,c="NWC",l=1,h){const d=(0,r._1)(t,"x","conv1d"),f=(0,r._1)(e,"filter","conv1d");let p=d,m=!1;2===d.rank&&(m=!0,p=(0,u.X)(d,[1,d.shape[0],d.shape[1]])),s.hu(3===p.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${p.rank}.`)),s.hu(3===f.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${f.rank}.`)),null!=h&&s.hu(s.GN(a),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${a}.`)),s.hu(p.shape[2]===f.shape[1],(()=>`Error in conv1d: depth of input (${p.shape[2]}) must match input depth for filter ${f.shape[1]}.`)),s.hu(o.jT(n,l),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${l}'`)),s.hu("NWC"===c,(()=>`Error in conv1d: got dataFormat of ${c} but only NWC is currently supported.`));const b=(0,u.X)(f,[1,f.shape[0],f.shape[1],f.shape[2]]),y=(0,u.X)(p,[p.shape[0],1,p.shape[1],p.shape[2]]),g=[1,n],x=[1,l],w=(0,i.T)(y,b,g,a,"NHWC",x,h);return m?(0,u.X)(w,[w.shape[2],w.shape[3]]):(0,u.X)(w,[w.shape[0],w.shape[2],w.shape[3]])}})},4794:(t,e,n)=>{"use strict";n.d(e,{T:()=>l});var r=n(7097),s=n(9121),i=n(3740),o=n(569),a=n(2582),u=n(2668),c=n(4968);const l=(0,u.op)({conv2d_:function(t,e,n,u,l="NHWC",h=[1,1],d){const f=(0,i._1)(t,"x","conv2d"),p=(0,i._1)(e,"filter","conv2d");let m=f,b=!1;3===f.rank&&(b=!0,m=(0,c.X)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),o.hu(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),o.hu(4===p.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${p.rank}.`)),null!=d&&o.hu(o.GN(u),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${u}.`));const y="NHWC"===l?m.shape[3]:m.shape[1];o.hu(y===p.shape[2],(()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${p.shape[2]}.`)),o.hu(a.jT(n,h),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`));const g={x:m,filter:p},x={strides:n,pad:u,dataFormat:l,dilations:h,dimRoundingMode:d},w=r.BV.runKernel(s.mh,g,x);return b?(0,c.X)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},6013:(t,e,n)=>{"use strict";n.d(e,{p:()=>u});var r=n(7097),s=n(9121),i=n(569),o=n(2668),a=n(4968);const u=(0,o.op)({conv2DBackpropFilter_:function(t,e,n,o,u,c="NHWC",l){let h=t;3===t.rank&&(h=(0,a.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let d=e;3===d.rank&&(d=(0,a.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]])),i.hu(4===h.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${h.shape}.`)),i.hu(4===d.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${d.shape}.`)),i.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const f="NHWC"===c?h.shape[3]:h.shape[1],p="NHWC"===c?d.shape[3]:d.shape[1];i.hu(f===n[2],(()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${n[2]}.`)),i.hu(p===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${n[3]}).`)),null!=l&&i.hu(i.GN(u),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`));const m={x:h,dy:d},b={strides:o,pad:u,dataFormat:c,dimRoundingMode:l,filterShape:n};return r.BV.runKernel(s.wU,m,b)}})},9832:(t,e,n)=>{"use strict";n.d(e,{_:()=>u});var r=n(7097),s=n(9121),i=n(569),o=n(2668),a=n(4968);const u=(0,o.op)({conv2DBackpropInput_:function(t,e,n,o,u,c="NHWC",l){i.hu(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let h=t,d=e,f=!1;3===e.rank&&(f=!0,d=(0,a.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]),h=[1,t[0],t[1],t[2]]),i.hu(4===h.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${h.length}.`)),i.hu(4===d.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${d.rank}`)),i.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const p="NHWC"===c?h[3]:h[1],m="NHWC"===c?d.shape[3]:d.shape[1];i.hu(p===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[2]}.`)),i.hu(m===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${n.shape[3]}.`)),null!=l&&i.hu(i.GN(u),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`));const b={dy:d,filter:n},y={strides:o,pad:u,dataFormat:c,dimRoundingMode:l,inputShape:h},g=r.BV.runKernel(s.wm,b,y);return f?(0,a.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},1405:(t,e,n)=>{"use strict";n.d(e,{b:()=>i});var r=n(3740),s=n(9832);const i=(0,n(2668).op)({conv2dTranspose_:function(t,e,n,i,o,a){const u=(0,r._1)(t,"x","conv2dTranspose"),c=(0,r._1)(e,"filter","conv2dTranspose");return(0,s._)(n,u,c,i,o,"NHWC",a)}})},473:(t,e,n)=>{"use strict";n.d(e,{p:()=>l});var r=n(7097),s=n(9121),i=n(3740),o=n(569),a=n(2582),u=n(2668),c=n(4968);const l=(0,u.op)({conv3d_:function(t,e,n,u,l="NDHWC",h=[1,1,1]){const d=(0,i._1)(t,"x","conv3d"),f=(0,i._1)(e,"filter","conv3d");let p=d,m=!1;4===d.rank&&(m=!0,p=(0,c.X)(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),o.hu(5===p.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${p.rank}.`)),o.hu(5===f.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${f.rank}.`)),o.hu(p.shape[4]===f.shape[3],(()=>`Error in conv3d: depth of input (${p.shape[4]}) must match input depth for filter ${f.shape[3]}.`)),o.hu((0,a.jT)(n,h),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`)),o.hu("NDHWC"===l,(()=>`Error in conv3d: got dataFormat of ${l} but only NDHWC is currently supported.`));const b={x:p,filter:f},y={strides:n,pad:u,dataFormat:l,dilations:h},g=r.BV.runKernel(s.x1,b,y);return m?(0,c.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},2582:(t,e,n)=>{"use strict";function r(t,e,n,r,s="NHWC",i){return o(t,[...e,t[3]],n,i,r,null,null,m(s))}function s(t,e,n,r,s,i,a="channelsLast"){const[u,l]=c(e);let h;if("channelsLast"===a)h=[u,l,t[3],t[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);h=[u,l,t[1],t[1]]}return o(t,h,n,r,s,i,!1,a)}function i(t,e,n,r,s,i,o="NDHWC"){const[u,c,h]=l(e);let d,f;if("NDHWC"===o)f="channelsLast",d=[u,c,h,t[4],t[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);f="channelsFirst",d=[u,c,h,t[1],t[1]]}return a(t,d,n,r,s,!1,f,i)}function o(t,e,n,r,s,i,o=!1,a="channelsLast"){let[l,f,p,m]=[-1,-1,-1,-1];if("channelsLast"===a)[l,f,p,m]=t;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,m,f,p]=t}const[b,y,,g]=e,[x,w]=c(n),[v,k]=c(r),$=h(b,v),N=h(y,k),{padInfo:C,outHeight:E,outWidth:S}=function(t,e,n,r,s,i,o,a,c){let l,h,f;if("number"==typeof t){l={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,s){null==r&&(r=u(t,e,n));const i=t[0],o=t[1],a=d((i-e+2*r)/n+1,s),c=d((o-e+2*r)/n+1,s);return[a,c]}([e,n],i,r,t,a);h=s[0],f=s[1]}else if("same"===t){h=Math.ceil(e/r),f=Math.ceil(n/s);const t=Math.max(0,(h-1)*r+i-e),a=Math.max(0,(f-1)*s+o-n),u=Math.floor(t/2),c=t-u,d=Math.floor(a/2);l={top:u,bottom:c,left:d,right:a-d,type:"SAME"}}else if("valid"===t)l={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((e-i+1)/r),f=Math.ceil((n-o+1)/s);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const u="channelsLast"===c?t[1][0]:t[2][0],p="channelsLast"===c?t[1][1]:t[2][1],m="channelsLast"===c?t[2][0]:t[3][0],b="channelsLast"===c?t[2][1]:t[3][1];l={top:u,bottom:p,left:m,right:b,type:0===u&&0===p&&0===m&&0===b?"VALID":"EXPLICIT"},h=d((e-i+u+p)/r+1,a),f=d((n-o+m+b)/s+1,a)}}return{padInfo:l,outHeight:h,outWidth:f}}(s,f,p,x,w,$,N,i,a),A=o?g*m:g;let R;return"channelsFirst"===a?R=[l,A,E,S]:"channelsLast"===a&&(R=[l,E,S,A]),{batchSize:l,dataFormat:a,inHeight:f,inWidth:p,inChannels:m,outHeight:E,outWidth:S,outChannels:A,padInfo:C,strideHeight:x,strideWidth:w,filterHeight:b,filterWidth:y,effectiveFilterHeight:$,effectiveFilterWidth:N,dilationHeight:v,dilationWidth:k,inShape:t,outShape:R,filterShape:e}}function a(t,e,n,r,s,i=!1,o="channelsLast",a){let[c,f,p,m,b]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[c,f,p,m,b]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[c,b,f,p,m]=t}const[y,g,x,,w]=e,[v,k,$]=l(n),[N,C,E]=l(r),S=h(y,N),A=h(g,C),R=h(x,E),{padInfo:T,outDepth:O,outHeight:I,outWidth:F}=function(t,e,n,r,s,i,o,a,c,l,h){let f,p,m,b;if("number"==typeof t){f={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const i=function(t,e,n,r,s,i){null==s&&(s=u(t,e,r));const o=t[0],a=t[1],c=t[2],l=d((o-e+2*s)/r+1,i),h=d((a-e+2*s)/r+1,i),f=d((c-e+2*s)/r+1,i);return[l,h,f,n]}([e,n,r,1],a,1,s,t,h);p=i[0],m=i[1],b=i[2]}else if("same"===t){p=Math.ceil(e/s),m=Math.ceil(n/i),b=Math.ceil(r/o);const t=(p-1)*s+a-e,u=(m-1)*i+c-n,h=(b-1)*o+l-r,d=Math.floor(t/2),y=t-d,g=Math.floor(u/2),x=u-g,w=Math.floor(h/2);f={top:g,bottom:x,left:w,right:h-w,front:d,back:y,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);f={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((e-a+1)/s),m=Math.ceil((n-c+1)/i),b=Math.ceil((r-l+1)/o)}return{padInfo:f,outDepth:p,outHeight:m,outWidth:b}}(s,f,p,m,v,k,$,S,A,R,a),_=i?w*b:w;let M;return"channelsFirst"===o?M=[c,_,O,I,F]:"channelsLast"===o&&(M=[c,O,I,F,_]),{batchSize:c,dataFormat:o,inDepth:f,inHeight:p,inWidth:m,inChannels:b,outDepth:O,outHeight:I,outWidth:F,outChannels:_,padInfo:T,strideDepth:v,strideHeight:k,strideWidth:$,filterDepth:y,filterHeight:g,filterWidth:x,effectiveFilterDepth:S,effectiveFilterHeight:A,effectiveFilterWidth:R,dilationDepth:N,dilationHeight:C,dilationWidth:E,inShape:t,outShape:M,filterShape:e}}function u(t,e,n,r=1){const s=h(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function c(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function l(t){return"number"==typeof t?[t,t,t]:t}function h(t,e){return e<=1?t:t+(t-1)*(e-1)}function d(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function f(t){const[e,n,r]=c(t);return 1===e&&1===n&&1===r}function p(t,e){return f(t)||f(e)}function m(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}n.d(e,{Rf:()=>r,Xw:()=>s,pl:()=>i,Ix:()=>o,jw:()=>a,aO:()=>u,I0:()=>f,jT:()=>p,sl:()=>m})},173:(t,e,n)=>{"use strict";n.d(e,{m:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({cos_:function(t){const e={x:(0,i._1)(t,"x","cos")};return r.BV.runKernel(s.mc,e)}})},2699:(t,e,n)=>{"use strict";n.d(e,{f:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({cosh_:function(t){const e={x:(0,i._1)(t,"x","cosh")};return r.BV.runKernel(s.TR,e)}})},7405:(t,e,n)=>{"use strict";n.d(e,{z:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({cumsum_:function(t,e=0,n=!1,o=!1){const a={x:(0,i._1)(t,"x","cumsum")},u={axis:e,exclusive:n,reverse:o};return r.BV.runKernel(s.iH,a,u)}})},9112:(t,e,n)=>{"use strict";n.d(e,{n:()=>a});var r=n(7097),s=n(9121),i=n(3740),o=n(569);const a=(0,n(2668).op)({depthToSpace_:function(t,e,n="NHWC"){const a=(0,i._1)(t,"x","depthToSpace"),u="NHWC"===n?a.shape[1]:a.shape[2],c="NHWC"===n?a.shape[2]:a.shape[3],l="NHWC"===n?a.shape[3]:a.shape[1];o.hu(u*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${e}  for depthToSpace with input shape\n    ${a.shape}`)),o.hu(c*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${c} and ${e} for depthToSpace with input shape\n        ${a.shape}`)),o.hu(l%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${l} for depthToSpace with input shape ${a.shape}`));const h={x:a},d={blockSize:e,dataFormat:n};return r.BV.runKernel(s.T0,h,d)}})},4718:(t,e,n)=>{"use strict";n.d(e,{B:()=>c});var r=n(7097),s=n(9121),i=n(3740),o=n(569),a=n(2668),u=n(4968);const c=(0,a.op)({depthwiseConv2d_:function(t,e,n,a,c="NHWC",l=[1,1],h){const d=(0,i._1)(t,"x","depthwiseConv2d"),f=(0,i._1)(e,"filter","depthwiseConv2d");let p=d,m=!1;3===d.rank&&(m=!0,p=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),o.hu(4===p.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),o.hu(4===f.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`)),o.hu(p.shape[3]===f.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`)),null!=h&&o.hu(o.GN(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${a}.`));const b={x:p,filter:f},y={strides:n,pad:a,dataFormat:c,dilations:l,dimRoundingMode:h},g=r.BV.runKernel(s.ci,b,y);return m?(0,u.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},8098:(t,e,n)=>{"use strict";n.d(e,{z:()=>a});var r=n(7097),s=n(9121),i=n(2668),o=n(4968);const a=(0,i.op)({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,i,a,u=[1,1],c){let l=t;3===t.rank&&(l=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let h=e;3===h.rank&&(h=(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const d={x:l,dy:h},f={strides:i,pad:a,dimRoundingMode:c,dilations:u,filterShape:n};return r.BV.runKernel(s.sL,d,f)}})},4375:(t,e,n)=>{"use strict";n.d(e,{v:()=>a});var r=n(7097),s=n(9121),i=n(2668),o=n(4968);const a=(0,i.op)({depthwiseConv2dNativeBackpropInput_:function(t,e,n,i,a,u=[1,1],c){let l=e,h=!1;3===e.rank&&(h=!0,l=(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const d={dy:l,filter:n},f={strides:i,pad:a,dimRoundingMode:c,dilations:u,inputShape:t},p=r.BV.runKernel(s.y7,d,f);return h?(0,o.X)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}})},557:(t,e,n)=>{"use strict";n.d(e,{W:()=>c});var r=n(7097),s=n(9121),i=n(3740),o=n(569),a=n(2668),u=n(4968);const c=(0,a.op)({dilation2d_:function(t,e,n,a,c=[1,1],l="NHWC"){const h=(0,i._1)(t,"x","dilation2d"),d=(0,i._1)(e,"filter","dilation2d");o.hu(3===h.rank||4===h.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${h.rank}.`)),o.hu(3===d.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${d.rank}.`)),o.hu("NHWC"===l,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${l}`));let f=h,p=!1;3===h.rank&&(f=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),p=!0);const m={x:f,filter:d},b={strides:n,pad:a,dilations:c},y=r.BV.runKernel(s.p4,m,b);return p?(0,u.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},1274:(t,e,n)=>{"use strict";n.d(e,{h:()=>u});var r=n(7097),s=n(9121),i=n(747),o=n(3740),a=n(9165);const u=(0,n(2668).op)({div_:function(t,e){let n=(0,o._1)(t,"a","div"),u=(0,o._1)(e,"b","div");if([n,u]=(0,i.T_)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return(0,a.q)(n,u);const c={a:n,b:u};return r.BV.runKernel(s.oH,c,{})}})},9322:(t,e,n)=>{"use strict";n.d(e,{N:()=>l});var r=n(747),s=n(3740),i=n(1274),o=n(6477),a=n(2668),u=n(5912),c=n(6577);const l=(0,a.op)({divNoNan_:function(t,e){let n=(0,s._1)(t,"a","div"),a=(0,s._1)(e,"b","div");[n,a]=(0,r.T_)(n,a);const l=(0,i.h)(n,a),h=(0,c.P)(l),d=(0,o.D)(a,h);return(0,u.a)(d,h,l)}})},3233:(t,e,n)=>{"use strict";n.d(e,{p:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({elu_:function(t){const e={x:(0,i._1)(t,"x","elu")};return r.BV.runKernel(s.SX,e)}})},6477:(t,e,n)=>{"use strict";n.d(e,{D:()=>u});var r=n(7097),s=n(9121),i=n(747),o=n(3740),a=n(2200);const u=(0,n(2668).op)({equal_:function(t,e){let n=(0,o._1)(t,"a","equal"),u=(0,o._1)(e,"b","equal");[n,u]=(0,i.T_)(n,u),(0,a.$N)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernel(s.hd,c)}})},4650:(t,e,n)=>{"use strict";n.d(e,{q:()=>u});var r=n(7097),s=n(9121),i=n(3740),o=n(569),a=n(2271);const u=(0,n(2668).op)({erf_:function(t){let e=(0,i._1)(t,"x","erf");o.hu("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=(0,a.p)(e,"float32"));const n={x:e};return r.BV.runKernel(s.Om,n)}})},4842:(t,e,n)=>{"use strict";n.d(e,{Q:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({exp_:function(t){const e={x:(0,i._1)(t,"x","exp")};return r.BV.runKernel(s.NE,e)}})},1300:(t,e,n)=>{"use strict";n.d(e,{d:()=>a});var r=n(7097),s=n(9121),i=n(3740),o=n(569);const a=(0,n(2668).op)({expandDims_:function(t,e=0){const n=(0,i._1)(t,"x","expandDims","string_or_numeric");o.hu(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const a={input:n},u={dim:e};return r.BV.runKernel(s.YF,a,u)}})},3426:(t,e,n)=>{"use strict";n.d(e,{t:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({expm1_:function(t){const e={x:(0,i._1)(t,"x","expm1")};return r.BV.runKernel(s.Y0,e)}})},4006:(t,e,n)=>{"use strict";n.d(e,{h:()=>i});var r=n(7097),s=n(9121);function i(t,e,n){const i={shape:t,value:e,dtype:n};return r.BV.runKernel(s.de,{},i)}},6943:(t,e,n)=>{"use strict";n.d(e,{G:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({floor_:function(t){const e={x:(0,i._1)(t,"x","floor")};return r.BV.runKernel(s.OR,e)}})},9165:(t,e,n)=>{"use strict";n.d(e,{q:()=>a});var r=n(7097),s=n(9121),i=n(747),o=n(3740);const a=(0,n(2668).op)({floorDiv_:function(t,e){let n=(0,o._1)(t,"a","floorDiv"),a=(0,o._1)(e,"b","floorDiv");[n,a]=(0,i.T_)(n,a);const u={a:n,b:a};return r.BV.runKernel(s.je,u)}})},4624:(t,e,n)=>{"use strict";n.d(e,{Te:()=>g,B1:()=>k,OI:()=>N});var r=n(7097),s=n(633),i=n(9121),o=n(747),a=n(3740),u=n(569),c=n(6407),l=n(2200),h=n(4794),d=n(6013),f=n(9832),p=n(2582),m=n(9323),b=n(2668),y=n(4968);const g=(0,b.op)({fusedConv2d_:function({x:t,filter:e,strides:n,pad:b,dataFormat:g="NHWC",dilations:x=[1,1],dimRoundingMode:w,bias:v,activation:k="linear",preluActivationWeights:$,leakyreluAlpha:N}){if(k=k||"linear",!1===(0,m.uy)(r.BV.state.gradientDepth,k)){let r=(0,h.T)(t,e,n,b,g,x,w);return null!=v&&(r=(0,c.I)(r,v)),(0,m.QH)(r,k,$,N)}const C=(0,a._1)(t,"x","conv2d"),E=(0,a._1)(e,"filter","conv2d");let S=C,A=!1;3===C.rank&&(A=!0,S=(0,y.X)(C,[1,C.shape[0],C.shape[1],C.shape[2]])),u.hu(4===S.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${S.rank}.`)),u.hu(4===E.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${E.rank}.`)),null!=w&&u.hu(u.GN(b),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${w} but got pad ${b}.`)),u.hu(S.shape[3]===E.shape[2],(()=>`Error in conv2d: depth of input (${S.shape[3]}) must match input depth for filter ${E.shape[2]}.`)),u.hu(p.jT(n,x),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${x}'`)),u.hu("NHWC"===g,(()=>`Error in conv2d: got dataFormat of ${g} but only NHWC is currently supported.`));const R=p.Ix(S.shape,E.shape,n,x,b,w);let T,O;null!=v&&(T=(0,a._1)(v,"bias","fused conv2d"),[T]=(0,o.T_)(T,C),l.$N(R.outShape,T.shape)),null!=$&&(O=(0,a._1)($,"prelu weights","fused conv2d"));const I=(t,e)=>{const[r,s,i,o]=e,a=(0,m.Fr)(t,i,k);u.hu(p.I0(x),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${x}'`));const c=[(0,f._)(s.shape,a,r,n,b),(0,d.p)(s,a,r.shape,n,b)];if(null!=o){const t=(0,m.pf)(o,a);c.push(t)}return c},F={x:S,filter:E,bias:T,preluActivationWeights:O},_={strides:n,pad:b,dataFormat:g,dilations:x,dimRoundingMode:w,activation:k,leakyreluAlpha:N};if(null==v){return(0,s.cb)(((t,e,n)=>{let s=r.BV.runKernel(i._V,F,_);return n([e,t,s]),A&&(s=(0,y.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:I}}))(S,E)}return(0,s.cb)(((t,e,n,s)=>{let o=r.BV.runKernel(i._V,F,_);return s([e,t,o,n]),A&&(o=(0,y.X)(o,[o.shape[1],o.shape[2],o.shape[3]])),{value:o,gradFunc:I}}))(S,E,T)}});var x=n(4718),w=n(8098),v=n(4375);const k=(0,b.op)({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:h,dataFormat:d="NHWC",dilations:f=[1,1],dimRoundingMode:b,bias:g,activation:k="linear",preluActivationWeights:$,leakyreluAlpha:N}){if(!1===(0,m.uy)(r.BV.state.gradientDepth,k)){let r=(0,x.B)(t,e,n,h,d,f,b);return null!=g&&(r=(0,c.I)(r,g)),(0,m.QH)(r,k,$,N)}const C=(0,a._1)(t,"x","depthwiseConv2d"),E=(0,a._1)(e,"filter","depthwiseConv2d");let S=C,A=!1;3===C.rank&&(A=!0,S=(0,y.X)(C,[1,C.shape[0],C.shape[1],C.shape[2]])),u.hu(4===S.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${S.rank}.`)),u.hu(4===E.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${E.rank}.`)),u.hu(S.shape[3]===E.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${S.shape[3]}) must match the inChannels dimension in filter ${E.shape[2]}.`)),null==f&&(f=[1,1]),u.hu(p.jT(n,f),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${f}'`)),null!=b&&u.hu(u.GN(h),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${b} but got pad ${h}.`));const R=p.Ix(S.shape,E.shape,n,f,h,b,!0);let T,O;null!=g&&(T=(0,a._1)(g,"bias","fused conv2d"),[T]=(0,o.T_)(T,C),l.$N(R.outShape,T.shape)),null!=$&&(O=(0,a._1)($,"prelu weights","fused depthwiseConv2d"));const I=(t,e)=>{u.hu(p.I0(f),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${f}'`));const[r,s,i,o]=e,a=(0,m.Fr)(t,i,k),c=(0,v.v)(s.shape,a,r,n,h,f,b),l=(0,w.z)(s,a,r.shape,n,h,f,b);if(null!=o){return[c,l,(0,m.pf)(T,a)]}return[c,l]},F={x:S,filter:E,bias:T,preluActivationWeights:O},_={strides:n,pad:h,dataFormat:d,dilations:f,dimRoundingMode:b,activation:k,leakyreluAlpha:N};if(null==g){return(0,s.cb)(((t,e,n)=>{let s=r.BV.runKernel(i.lu,F,_);return n([e,t,s]),A&&(s=(0,y.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:I}}))(S,E)}return(0,s.cb)(((t,e,n,s)=>{let o=r.BV.runKernel(i.lu,F,_);return s([e,t,o,n]),A&&(o=(0,y.X)(o,[o.shape[1],o.shape[2],o.shape[3]])),{value:o,gradFunc:I}}))(S,E,T)}});var $=n(8687);const N=(0,b.op)({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:h=!1,bias:d,activation:f="linear",preluActivationWeights:p,leakyreluAlpha:b}){if(!1===(0,m.uy)(r.BV.state.gradientDepth,f)){let r=(0,$.O)(t,e,n,h);return null!=d&&(r=(0,c.I)(r,d)),(0,m.QH)(r,f,p,b)}let g=(0,a._1)(t,"a","fused matMul"),x=(0,a._1)(e,"b","fused matMul");[g,x]=(0,o.T_)(g,x);const w=n?g.shape[g.rank-2]:g.shape[g.rank-1],v=h?x.shape[x.rank-1]:x.shape[x.rank-2],k=n?g.shape[g.rank-1]:g.shape[g.rank-2],N=h?x.shape[x.rank-2]:x.shape[x.rank-1],C=g.shape.slice(0,-2),E=x.shape.slice(0,-2),S=u.NA(C),A=u.NA(E);u.hu(g.rank>=2&&x.rank>=2&&g.rank===x.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${g.rank} and ${x.rank}.`)),u.hu(u.cO(C,E),(()=>`Error in fused matMul: outer dimensions (${C}) and (${E}) of Tensors with shapes ${g.shape} and ${x.shape} must match.`)),u.hu(w===v,(()=>`Error in fused matMul: inner shapes (${w}) and (${v}) of Tensors with shapes ${g.shape} and ${x.shape} and transposeA=${n} and transposeB=${h} must match.`));const R=g.shape.slice(0,-2).concat([k,N]),T=n?(0,y.X)(g,[S,w,k]):(0,y.X)(g,[S,k,w]),O=h?(0,y.X)(x,[A,N,v]):(0,y.X)(x,[A,v,N]);let I,F;null!=d&&(I=(0,a._1)(d,"bias","fused matMul"),[I]=(0,o.T_)(I,g),l.$N(R,I.shape)),null!=p&&(F=(0,a._1)(p,"prelu weights","fused matMul"));const _=(t,e)=>{const[r,s,i,o]=e,a=(0,m.Fr)((0,y.X)(t,i.shape),i,f);let u,c;if(n||h?!n&&h?(u=(0,$.O)(a,s,!1,!1),c=(0,$.O)(a,r,!0,!1)):n&&!h?(u=(0,$.O)(s,a,!1,!0),c=(0,$.O)(r,a,!1,!1)):(u=(0,$.O)(s,a,!0,!0),c=(0,$.O)(a,r,!0,!0)):(u=(0,$.O)(a,s,!1,!0),c=(0,$.O)(r,a,!0,!1)),null!=d){return[u,c,(0,m.pf)(o,a)]}return[u,c]},M={a:T,b:O,bias:I,preluActivationWeights:F},D={transposeA:n,transposeB:h,activation:f,leakyreluAlpha:b};if(null==d){return(0,s.cb)(((t,e,n)=>{const s=r.BV.runKernel(i.us,M,D);return n([t,e,s]),{value:(0,y.X)(s,R),gradFunc:_}}))(T,O)}return(0,s.cb)(((t,e,n,s)=>{const o=r.BV.runKernel(i.us,M,D);return s([t,e,o,n]),{value:(0,y.X)(o,R),gradFunc:_}}))(T,O,I)}})},9323:(t,e,n)=>{"use strict";n.d(e,{Fr:()=>f,pf:()=>p,QH:()=>m,uy:()=>b});var r=n(2200),s=n(3233),i=n(9133),o=n(4841),a=n(8151),u=n(7409),c=n(3582),l=n(4968),h=n(1901),d=n(5475);function f(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return(0,o.d)(t,(0,h.N)(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function p(t,e){let n=e;const s=r.RR(t.shape,e.shape);return s.length>0&&(n=(0,d.S)(n,s)),(0,l.X)(n,t.shape)}function m(t,e,n,r){if("linear"===e)return t;if("relu"===e)return(0,u.U)(t);if("elu"===e)return(0,s.p)(t);if("relu6"===e)return(0,c.b)(t);if("prelu"===e)return(0,a.A)(t,n);if("leakyrelu"===e)return(0,i.h)(t,r);throw new Error(`Unknown fused activation ${e}.`)}const b=(t,e)=>!(t>0)||"linear"===e},4926:(t,e,n)=>{"use strict";n.d(e,{I:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({gather_:function(t,e,n=0,o=0){const a={x:(0,i._1)(t,"x","gather"),indices:(0,i._1)(e,"indices","gather","int32")},u={axis:n,batchDims:o};return r.BV.runKernel(s.qi,a,u)}})},636:(t,e,n)=>{"use strict";n.d(e,{p:()=>u});var r=n(7097),s=n(9121),i=n(747),o=n(3740),a=n(2200);const u=(0,n(2668).op)({greater_:function(t,e){let n=(0,o._1)(t,"a","greater"),u=(0,o._1)(e,"b","greater");[n,u]=(0,i.T_)(n,u),(0,a.$N)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernel(s.iZ,c)}})},7630:(t,e,n)=>{"use strict";n.d(e,{b:()=>u});var r=n(7097),s=n(9121),i=n(747),o=n(3740),a=n(2200);const u=(0,n(2668).op)({greaterEqual_:function(t,e){let n=(0,o._1)(t,"a","greaterEqual"),u=(0,o._1)(e,"b","greaterEqual");[n,u]=(0,i.T_)(n,u),(0,a.$N)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernel(s.Ac,c)}})},4386:(t,e,n)=>{"use strict";n.d(e,{a:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({imag_:function(t){const e={input:(0,i._1)(t,"input","imag")};return r.BV.runKernel(s.J_,e)}})},3305:(t,e,n)=>{"use strict";n.d(e,{I:()=>c});var r=n(7097),s=n(9121),i=n(3740),o=n(569),a=n(2668),u=n(4968);const c=(0,a.op)({resizeBilinear_:function(t,e,n=!1,a=!1){const c=(0,i._1)(t,"images","resizeBilinear");o.hu(3===c.rank||4===c.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${c.rank}.`)),o.hu(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`)),o.hu(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let l=c,h=!1;3===c.rank&&(h=!0,l=(0,u.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const[]=e,d={images:l},f={alignCorners:n,halfPixelCenters:a,size:e},p=r.BV.runKernel(s._Y,d,f);return h?(0,u.X)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}})},5098:(t,e,n)=>{"use strict";n.d(e,{j:()=>c});var r=n(7097),s=n(9121),i=n(3740),o=n(569),a=n(2668),u=n(4968);const c=(0,a.op)({resizeNearestNeighbor_:function(t,e,n=!1,a=!1){const c=(0,i._1)(t,"images","resizeNearestNeighbor");o.hu(3===c.rank||4===c.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${c.rank}.`)),o.hu(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),o.hu("float32"===c.dtype||"int32"===c.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),o.hu(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let l=c,h=!1;3===c.rank&&(h=!0,l=(0,u.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const[]=e,d={images:l},f={alignCorners:n,halfPixelCenters:a,size:e},p=r.BV.runKernel(s.dp,d,f);return h?(0,u.X)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}})},9133:(t,e,n)=>{"use strict";n.d(e,{h:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({leakyRelu_:function(t,e=.2){const n={x:(0,i._1)(t,"x","leakyRelu")},o={alpha:e};return r.BV.runKernel(s.J$,n,o)}})},6573:(t,e,n)=>{"use strict";n.d(e,{d:()=>u});var r=n(7097),s=n(9121),i=n(747),o=n(3740),a=n(2200);const u=(0,n(2668).op)({less_:function(t,e){let n=(0,o._1)(t,"a","less"),u=(0,o._1)(e,"b","less");[n,u]=(0,i.T_)(n,u),(0,a.$N)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernel(s.vt,c)}})},624:(t,e,n)=>{"use strict";n.d(e,{z:()=>u});var r=n(7097),s=n(9121),i=n(747),o=n(3740),a=n(2200);const u=(0,n(2668).op)({lessEqual_:function(t,e){let n=(0,o._1)(t,"a","lessEqual"),u=(0,o._1)(e,"b","lessEqual");[n,u]=(0,i.T_)(n,u),(0,a.$N)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernel(s.CA,c)}})},9648:(t,e,n)=>{"use strict";n.d(e,{G:()=>c});var r=n(7097),s=n(9121),i=n(3740),o=n(569),a=n(2668),u=n(4968);const c=(0,a.op)({localResponseNormalization_:function(t,e=5,n=1,a=1,c=.5){const l=(0,i._1)(t,"x","localResponseNormalization");o.hu(4===l.rank||3===l.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${l.rank}.`)),o.hu(o.GN(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let h=l,d=!1;3===l.rank&&(d=!0,h=(0,u.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const f={x:h},p={depthRadius:e,bias:n,alpha:a,beta:c},m=r.BV.runKernel(s.eZ,f,p);return d?(0,u.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},2597:(t,e,n)=>{"use strict";n.d(e,{c:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({log_:function(t){const e={x:(0,i._1)(t,"x","log")};return r.BV.runKernel(s.Zb,e)}})},7474:(t,e,n)=>{"use strict";n.d(e,{K:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({log1p_:function(t){const e={x:(0,i._1)(t,"x","log1p")};return r.BV.runKernel(s.kU,e)}})},1510:(t,e,n)=>{"use strict";n.d(e,{C:()=>f});var r=n(633),s=n(3740),i=n(2271),o=n(4842),a=n(2597),u=n(3307),c=n(4841),l=n(2668),h=n(827),d=n(5475);const f=(0,l.op)({logSoftmax_:function(t,e=-1){const n=(0,s._1)(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return(0,r.cb)(((t,n)=>{const r=(0,u.F)(t,e,!0),s=(0,h.l)(t,r),l=(0,h.l)((0,i.p)(s,"float32"),(0,a.c)((0,d.S)((0,o.Q)(s),e,!0)));n([l]);return{value:l,gradFunc:(t,n)=>{const[r]=n,s=(0,o.Q)(r);return(0,h.l)(t,(0,c.d)((0,d.S)(t,e,!0),s))}}}))(n)}})},1391:(t,e,n)=>{"use strict";n.d(e,{l:()=>p});var r=n(3740),s=n(569),i=n(6407),o=n(3591),a=n(4842),u=n(2597),c=n(3307),l=n(2668),h=n(4968),d=n(827),f=n(5475);const p=(0,l.op)({logSumExp_:function(t,e=null,n=!1){const l=(0,r._1)(t,"x","logSumExp"),p=(0,s.EC)(e,l.shape),m=(0,c.F)(l,p,!0),b=(0,d.l)(l,m),y=(0,a.Q)(b),g=(0,f.S)(y,p),x=(0,u.c)(g),w=(0,i.I)((0,h.X)(m,x.shape),x);if(n){const t=(0,o.rv)(w.shape,p);return(0,h.X)(w,t)}return w}})},2856:(t,e,n)=>{"use strict";n.d(e,{H:()=>a});var r=n(7097),s=n(9121),i=n(3740),o=n(2200);const a=(0,n(2668).op)({logicalAnd_:function(t,e){const n=(0,i._1)(t,"a","logicalAnd","bool"),a=(0,i._1)(e,"b","logicalAnd","bool");(0,o.$N)(n.shape,a.shape);const u={a:n,b:a};return r.BV.runKernel(s.PY,u)}})},8651:(t,e,n)=>{"use strict";n.d(e,{h:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({logicalNot_:function(t){const e={x:(0,i._1)(t,"x","logicalNot","bool")};return r.BV.runKernel(s.Vf,e)}})},5750:(t,e,n)=>{"use strict";n.d(e,{K:()=>a});var r=n(7097),s=n(9121),i=n(3740),o=n(2200);const a=(0,n(2668).op)({logicalOr_:function(t,e){const n=(0,i._1)(t,"a","logicalOr","bool"),a=(0,i._1)(e,"b","logicalOr","bool");(0,o.$N)(n.shape,a.shape);const u={a:n,b:a};return r.BV.runKernel(s.MZ,u)}})},8687:(t,e,n)=>{"use strict";n.d(e,{O:()=>a});var r=n(7097),s=n(9121),i=n(747),o=n(3740);const a=(0,n(2668).op)({matMul_:function(t,e,n=!1,a=!1){let u=(0,o._1)(t,"a","matMul"),c=(0,o._1)(e,"b","matMul");[u,c]=(0,i.T_)(u,c);const l={a:u,b:c},h={transposeA:n,transposeB:a};return r.BV.runKernel(s.XL,l,h)}})},3307:(t,e,n)=>{"use strict";n.d(e,{F:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({max_:function(t,e=null,n=!1){const o={x:(0,i._1)(t,"x","max")},a={reductionIndices:e,keepDims:n};return r.BV.runKernel(s.Yo,o,a)}})},1174:(t,e,n)=>{"use strict";n.d(e,{_:()=>l});var r=n(7097),s=n(9121),i=n(3740),o=n(569),a=n(2582),u=n(2668),c=n(4968);const l=(0,u.op)({maxPool_:function(t,e,n,u,l){const h=(0,i._1)(t,"x","maxPool");let d=h,f=!1;3===h.rank&&(f=!0,d=(0,c.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.hu(4===d.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${d.rank}.`)),o.hu(a.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=l&&o.hu(o.GN(u),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`));const p={x:d},m={filterSize:e,strides:n,pad:u,dimRoundingMode:l},b=r.BV.runKernel(s.mT,p,m);return f?(0,c.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},5020:(t,e,n)=>{"use strict";n.d(e,{Y:()=>h});var r=n(7097),s=n(4368),i=n(9121),o=n(3740),a=n(569),u=n(2582),c=n(2668),l=n(4968);const h=(0,c.op)({maxPool3d_:function(t,e=[1,1,1],n,c,h,d="NDHWC",f){null==f?f=[1,1,1]:(0,s.MX)("dilations is deprecated, this field will be gone in v3.0.0.");const p=(0,o._1)(t,"x","maxPool3d");let m=p,b=!1;4===p.rank&&(b=!0,m=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),a.hu(5===m.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${m.rank}.`)),a.hu("NDHWC"===d,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${d}`)),a.hu(u.jT(n,f),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${f}'`)),null!=h&&a.hu(a.GN(c),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${c}.`));const y={x:m},g={filterSize:e,strides:n,pad:c,dimRoundingMode:h,dataFormat:d,dilations:f},x=r.BV.runKernel(i.OA,y,g);return b?(0,l.X)(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}})},632:(t,e,n)=>{"use strict";n.d(e,{g:()=>c});var r=n(7097),s=n(9121),i=n(747),o=n(3740),a=n(2200),u=n(2271);const c=(0,n(2668).op)({maximum_:function(t,e){let n=(0,o._1)(t,"a","maximum"),c=(0,o._1)(e,"b","maximum");[n,c]=(0,i.T_)(n,c),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),c=(0,u.p)(c,"int32")),(0,a.$N)(n.shape,c.shape);const l={a:n,b:c};return r.BV.runKernel(s.BM,l)}})},5130:(t,e,n)=>{"use strict";n.d(e,{J:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({mean_:function(t,e=null,n=!1){const o={x:(0,i._1)(t,"x","mean")},a={axis:e,keepDims:n};return r.BV.runKernel(s.q2,o,a)}})},5735:(t,e,n)=>{"use strict";n.d(e,{V:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({min_:function(t,e=null,n=!1){const o={x:(0,i._1)(t,"x","min")},a={axis:e,keepDims:n};return r.BV.runKernel(s.c1,o,a)}})},4513:(t,e,n)=>{"use strict";n.d(e,{L:()=>c});var r=n(7097),s=n(9121),i=n(747),o=n(3740),a=n(2200),u=n(2271);const c=(0,n(2668).op)({minimum_:function(t,e){let n=(0,o._1)(t,"a","minimum"),c=(0,o._1)(e,"b","minimum");[n,c]=(0,i.T_)(n,c),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),c=(0,u.p)(c,"int32")),(0,a.$N)(n.shape,c.shape);const l={a:n,b:c};return r.BV.runKernel(s.q8,l)}})},1483:(t,e,n)=>{"use strict";n.d(e,{V:()=>a});var r=n(7097),s=n(9121),i=n(3740),o=n(569);const a=(0,n(2668).op)({mirrorPad_:function(t,e,n){o.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const a=(0,i._1)(t,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");o.hu(e.length===a.rank,(()=>`Padding doesn't match input. Must be ${a.rank}. Got ${e.length}.`));const u="reflect"===n?1:0;for(let t=0;t<a.rank;t++)o.hu(2===e[t].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),o.hu(e[t][0]>=0&&e[t][0]<=a.shape[t]-u&&e[t][1]>=0&&e[t][1]<=a.shape[t]-u,(()=>`Padding in dimension ${t} cannot be greater than or equal to ${a.shape[t]-u} or less than 0 for input of shape ${a.shape}`));const c={paddings:e,mode:n},l={x:a};return r.BV.runKernel(s.jQ,l,c)}})},5228:(t,e,n)=>{"use strict";n.d(e,{w:()=>a});var r=n(7097),s=n(9121),i=n(747),o=n(3740);const a=(0,n(2668).op)({mod_:function(t,e){let n=(0,o._1)(t,"a","mod"),a=(0,o._1)(e,"b","mod");[n,a]=(0,i.T_)(n,a);const u={a:n,b:a};return r.BV.runKernel(s.Vb,u)}})},4841:(t,e,n)=>{"use strict";n.d(e,{d:()=>a});var r=n(7097),s=n(9121),i=n(747),o=n(3740);const a=(0,n(2668).op)({mul_:function(t,e){let n=(0,o._1)(t,"a","mul"),a=(0,o._1)(e,"b","mul");[n,a]=(0,i.T_)(n,a);const u={a:n,b:a};return r.BV.runKernel(s.wY,u)}})},7370:(t,e,n)=>{"use strict";n.d(e,{W:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({neg_:function(t){const e={x:(0,i._1)(t,"x","neg")};return r.BV.runKernel(s.ku,e)}})},3561:(t,e,n)=>{"use strict";n.d(e,{K:()=>y});var r=n(3740),s=n(569),i=n(6235),o=n(3591),a=n(3307),u=n(5735),c=n(2668),l=n(3453),h=n(4968),d=n(9494),f=n(3261),p=n(248),m=n(5475);function b(t,e,n=null){if(0===t.rank)return(0,i.W)(t);if(1!==t.rank&&null===n)return b((0,h.X)(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return(0,m.S)((0,i.W)(t),n);if(e===1/0)return(0,a.F)((0,i.W)(t),n);if(e===-1/0)return(0,u.V)((0,i.W)(t),n);if("euclidean"===e||2===e)return(0,f._)((0,m.S)((0,l.s)((0,i.W)(t),(0,d.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return(0,a.F)((0,m.S)((0,i.W)(t),n[0]),n[1]-1);if(e===1/0)return(0,a.F)((0,m.S)((0,i.W)(t),n[1]),n[0]);if(e===-1/0)return(0,u.V)((0,m.S)((0,i.W)(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return(0,f._)((0,m.S)((0,p.h)(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const y=(0,c.op)({norm_:function(t,e="euclidean",n=null,i=!1){const a=b(t=(0,r._1)(t,"x","norm"),e,n);let u=a.shape;if(i){const e=(0,s.EC)(n,t.shape);u=o.rv(a.shape,e)}return(0,h.X)(a,u)}})},6500:(t,e,n)=>{"use strict";n.d(e,{Q:()=>u});var r=n(7097),s=n(9121),i=n(747),o=n(3740),a=n(2200);const u=(0,n(2668).op)({notEqual_:function(t,e){let n=(0,o._1)(t,"a","notEqual"),u=(0,o._1)(e,"b","notEqual");[n,u]=(0,i.T_)(n,u),(0,a.$N)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernel(s.yQ,c)}})},6708:(t,e,n)=>{"use strict";n.d(e,{l:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({oneHot_:function(t,e,n=1,o=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const a={indices:(0,i._1)(t,"indices","oneHot","int32")},u={depth:e,onValue:n,offValue:o};return r.BV.runKernel(s.we,a,u)}})},4917:(t,e,n)=>{"use strict";n.d(e,{i:()=>a});var r=n(7097),s=n(569),i=n(1661),o=n(9640);function a(t,e="float32"){if("complex64"===e){const e=a(t,"float32"),n=(0,o.l)(t,"float32");return(0,i.P)(e,n)}const n=(0,s.p8)((0,s.NA)(t),e);return r.BV.makeTensor(n,t,e)}},7846:(t,e,n)=>{"use strict";n.d(e,{J:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({onesLike_:function(t){const e={x:(0,i._1)(t,"x","onesLike")};return r.BV.runKernel(s.qW,e)}})},2668:(t,e,n)=>{"use strict";n.d(e,{op:()=>i});var r=n(7097),s=n(569);function i(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const i=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const o=(...t)=>{r.BV.startScope(n);try{const e=i(...t);return(0,s.tI)(e)&&console.error("Cannot return a Promise inside of tidy."),r.BV.endScope(e),e}catch(t){throw r.BV.endScope(null),t}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},1900:(t,e,n)=>{"use strict";n.d(e,{WnP:()=>r.W,IHx:()=>s.I,$6P:()=>i.$,YjB:()=>o.Y,NqF:()=>a.N,wS1:()=>u.w,uR5:()=>c.u,Dxk:()=>p,JY5:()=>m,p3b:()=>b,f3b:()=>y.f,pju:()=>g.p,iUl:()=>x.i,d9v:()=>w.d,zoF:()=>v.z,gME:()=>k,Izb:()=>$,MNy:()=>N,ZaL:()=>C,PAt:()=>E.P,Tek:()=>S.T,bc:()=>A.b,pdZ:()=>R.p,B10:()=>T.B,hiC:()=>O.h,rvX:()=>qt,pyx:()=>I.p,DgJ:()=>F.D,dt4:()=>_.d,iyy:()=>L,hlL:()=>P.h,GWj:()=>V.G,imm:()=>Qt,Iqj:()=>z.I,pjt:()=>B.p,brS:()=>W.b,BHj:()=>Ie,hi7:()=>U.h,$r2:()=>Fe,cM7:()=>G.c,CmS:()=>j.C,HvI:()=>H.H,Fp7:()=>q.F,_sB:()=>X._,YQQ:()=>J.Y,gWQ:()=>Y.g,J69:()=>K.J,VV$:()=>Q.V,LTh:()=>Z.L,Gi7:()=>rt,dC7:()=>st.d,W76:()=>it.W,Quu:()=>ot.Q,lfX:()=>at.l,iUs:()=>ut.i,JpU:()=>ct.J,vku:()=>lt.v,AL3:()=>ht.A,nGf:()=>ft,LGj:()=>pt.L,UYe:()=>mt.U,XLQ:()=>M.X,GYS:()=>bt.G,iD$:()=>yt.i,U8D:()=>gt.U,U_I:()=>xt.U,XD2:()=>wt.X,tPi:()=>vt.t,jZU:()=>kt,SmN:()=>$t,CnO:()=>Nt,p0P:()=>Ct,XAC:()=>Et.X,Wvh:()=>St.W,Vl2:()=>At.V,_b3:()=>Rt._,L9e:()=>Tt.L,knu:()=>Ot.k,luU:()=>nt.l,Smz:()=>It.S,AEp:()=>Ft.A,XeE:()=>_t.X,RRF:()=>Mt.R,odF:()=>Lt,Gg6:()=>D.G,p4s:()=>jt.p,Xu6:()=>Pt.X,HHK:()=>Vt.H,VD$:()=>Bt,arb:()=>Wt.a,lls:()=>Ut.l,P84:()=>Gt.P});var r=n(6235),s=n(6407),i=n(781),o=n(2998),a=n(47),u=n(5176),c=n(1749),l=n(3740),h=n(569),d=n(7505),f=n(2668);const p=(0,f.op)({batchNorm2d_:function(t,e,n,r,s,i){const o=(0,l._1)(t,"x","batchNorm"),a=(0,l._1)(e,"mean","batchNorm"),u=(0,l._1)(n,"variance","batchNorm");let c,f;return null!=s&&(c=(0,l._1)(s,"scale","batchNorm")),null!=r&&(f=(0,l._1)(r,"offset","batchNorm")),h.hu(2===o.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`)),h.hu(2===a.rank||1===a.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`)),h.hu(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&h.hu(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`)),null!=f&&h.hu(2===f.rank||1===f.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${f.rank}.`)),(0,d.t)(o,a,u,f,c,i)}});const m=(0,f.op)({batchNorm3d_:function(t,e,n,r,s,i){const o=(0,l._1)(t,"x","batchNorm"),a=(0,l._1)(e,"mean","batchNorm"),u=(0,l._1)(n,"variance","batchNorm");let c,f;return null!=s&&(c=(0,l._1)(s,"scale","batchNorm")),null!=r&&(f=(0,l._1)(r,"offset","batchNorm")),h.hu(3===o.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`)),h.hu(3===a.rank||1===a.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`)),h.hu(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&h.hu(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`)),null!=f&&h.hu(3===f.rank||1===f.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${f.rank}.`)),(0,d.t)(o,a,u,f,c,i)}});const b=(0,f.op)({batchNorm4d_:function(t,e,n,r,s,i){const o=(0,l._1)(t,"x","batchNorm"),a=(0,l._1)(e,"mean","batchNorm"),u=(0,l._1)(n,"variance","batchNorm");let c,f;return null!=s&&(c=(0,l._1)(s,"scale","batchNorm")),null!=r&&(f=(0,l._1)(r,"offset","batchNorm")),h.hu(4===o.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`)),h.hu(4===a.rank||1===a.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`)),h.hu(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&h.hu(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`)),null!=f&&h.hu(4===f.rank||1===f.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${f.rank}.`)),(0,d.t)(o,a,u,f,c,i)}});var y=n(2657),g=n(2271),x=n(2279),w=n(8723),v=n(6884);const k=(0,f.op)({concat1d_:function(t){return(0,v.z)(t,0)}});const $=(0,f.op)({concat2d_:function(t,e){return(0,v.z)(t,e)}});const N=(0,f.op)({concat3d_:function(t,e){return(0,v.z)(t,e)}});const C=(0,f.op)({concat4d_:function(t,e){return(0,v.z)(t,e)}});var E=n(1355),S=n(4794),A=n(1405),R=n(473),T=n(4718),O=n(1274),I=n(3233),F=n(6477),_=n(1300),M=n(4968),D=n(7501);const L=(0,f.op)({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const s=(0,y.f)([t,e],r),i=t<=e?t:e;for(let t=0;t<i;++t)s.set(1,t,t);const o=(0,M.X)(s.toTensor(),[t,e]);if(null==n)return o;if(1===n.length)return(0,D.G)((0,_.d)(o,0),[n[0],1,1]);if(2===n.length)return(0,D.G)((0,_.d)((0,_.d)(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,D.G)((0,_.d)((0,_.d)((0,_.d)(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var P=n(4006),V=n(6943),z=n(4926),B=n(636),W=n(7630),U=n(9133),G=n(2597),j=n(1510),H=n(2856),q=n(3307),X=n(1174),J=n(5020),Y=n(632),K=n(5130),Q=n(5735),Z=n(4513),tt=n(3591),et=n(248),nt=n(827);const rt=(0,f.op)({moments_:function(t,e=null,n=!1){t=(0,l._1)(t,"x","moments");const r=(0,h.EC)(e,t.shape),s=(0,K.J)(t,r,n);let i=s.shape;n||(i=(0,tt.rv)(s.shape,r));const o=(0,et.h)((0,nt.l)((0,g.p)(t,"float32"),(0,M.X)(s,i)));return{mean:s,variance:(0,K.J)(o,r,n)}}});var st=n(4841),it=n(7370),ot=n(6500),at=n(6708),ut=n(4917),ct=n(7846),lt=n(9682),ht=n(8151),dt=n(6845);const ft=(0,f.op)({randomNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const i=new dt.Yi(e,n,r,!1,s),o=(0,y.f)(t,r);for(let t=0;t<o.values.length;t++)o.values[t]=i.nextValue();return o.toTensor()}});var pt=n(5002),mt=n(7409),bt=n(7486),yt=n(9494),gt=n(5503),xt=n(8678),wt=n(625),vt=n(2676);const kt=(0,f.op)({slice1d_:function(t,e,n){const r=(0,l._1)(t,"x","slice1d");return h.hu(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),(0,vt.t)(r,[e],[n])}});const $t=(0,f.op)({slice2d_:function(t,e,n){const r=(0,l._1)(t,"x","slice2d");return h.hu(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),(0,vt.t)(r,e,n)}});const Nt=(0,f.op)({slice3d_:function(t,e,n){const r=(0,l._1)(t,"x","slice3d");return h.hu(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),(0,vt.t)(r,e,n)}});const Ct=(0,f.op)({slice4d_:function(t,e,n){const r=(0,l._1)(t,"x","slice4d");return h.hu(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),(0,vt.t)(r,e,n)}});var Et=n(682),St=n(3694),At=n(8644),Rt=n(3261),Tt=n(9590),Ot=n(2991),It=n(5475),Ft=n(1869),_t=n(701),Mt=n(6092),Dt=n(7852);function Lt(t,e,n){if((0,h.Cq)(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,l.C)(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,Dt.H)(t,e,r,n)}var Pt=n(3596),Vt=n(4136),zt=n(7097);function Bt(t,e=!0,n,r){return zt.BV.makeVariable(t,e,n,r)}var Wt=n(5912),Ut=n(9640),Gt=n(6577),jt=n(9065),Ht=n(4077);const qt=(0,f.op)({dropout_:function(t,e,n,r){const i=(0,l._1)(t,"x","dropout");if(h.hu("float32"===i.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${i.dtype} tensor instead.`)),h.hu(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof Ht.es?i.clone():i;const o=function(t,e){if(null==e)return t.shape.slice();if(h.cO(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(i,n),a=1-e,u=(0,O.h)((0,V.G)((0,s.I)((0,pt.L)(o,0,1,"float32",r),a)),a);return(0,st.d)(i,u)}});var Xt=n(3710),Jt=n(7020),Yt=n(8447),Kt=n(4415),Qt=n(4624);function Zt(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let i=0;i<t;++i){const o=2*Math.PI*i/(t+r-1);s[i]=e-n*Math.cos(o)}return(0,Mt.R)(s,"float32")}(0,f.op)({hammingWindow_:function(t){return Zt(t,.54,.46)}});const te=(0,f.op)({hannWindow_:function(t){return Zt(t,.5,.5)}});const ee=(0,f.op)({frame_:function(t,e,n,r=!1,s=0){let i=0;const o=[];for(;i+e<=t.size;)o.push((0,vt.t)(t,i,e)),i+=n;if(r)for(;i<t.size;){const r=i+e-t.size,a=(0,v.z)([(0,vt.t)(t,i,e-r),(0,P.h)([r],s)]);o.push(a),i+=n}return 0===o.length?Lt([],[0,e]):(0,M.X)((0,v.z)(o),[o.length,e])}});(0,f.op)({stft_:function(t,e,n,r,s=te){var i;null==r&&(i=e,r=Math.floor(Math.pow(2,Math.ceil(Math.log(i)/Math.log(2)))));const o=ee(t,e,n),a=(0,st.d)(o,s(e)),u=[];for(let t=0;t<o.shape[0];t++)u.push((0,Xt.Q)((0,vt.t)(a,[t,0],[1,e]),r));return(0,v.z)(u)}});var ne=n(9121);const re=(0,f.op)({cropAndResize_:function(t,e,n,r,s="bilinear",i=0){const o=(0,l._1)(t,"image","cropAndResize"),a=(0,l._1)(e,"boxes","cropAndResize","float32"),u=(0,l._1)(n,"boxInd","cropAndResize","int32"),c=a.shape[0];h.hu(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),h.hu(2===a.rank&&4===a.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${a.shape}.`)),h.hu(1===u.rank&&u.shape[0]===c,(()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${a.shape}.`)),h.hu(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),h.hu(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),h.hu("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const d={image:o,boxes:a,boxInd:u},f={method:s,extrapolationValue:i,cropSize:r};return zt.BV.runKernel(ne.Vc,d,f)}});const se=(0,f.op)({flipLeftRight_:function(t){const e=(0,l._1)(t,"image","flipLeftRight","float32");h.hu(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return zt.BV.runKernel(ne.Uy,n,{})}});const ie=(0,f.op)({rotateWithOffset_:function(t,e,n=0,r=.5){const s=(0,l._1)(t,"image","rotateWithOffset","float32");h.hu(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const i={image:s},o={radians:e,fillValue:n,center:r};return zt.BV.runKernel(ne.b9,i,o)}});function oe(t,e,n,r,s,i){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);const o=t.shape[0];return n=Math.min(n,o),h.hu(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),h.hu(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),h.hu(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),h.hu(1===e.rank,(()=>"scores must be a 1D tensor")),h.hu(e.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${e.shape[0]}`)),h.hu(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}const ae=(0,f.op)({nonMaxSuppression_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=(0,l._1)(t,"boxes","nonMaxSuppression"),o=(0,l._1)(e,"scores","nonMaxSuppression"),a=oe(i,o,n,r,s),u={maxOutputSize:n=a.maxOutputSize,iouThreshold:r=a.iouThreshold,scoreThreshold:s=a.scoreThreshold};return zt.BV.runKernel(ne.uv,{boxes:i,scores:o},u)}});var ue=n(3337);const ce=async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=(0,l._1)(t,"boxes","nonMaxSuppressionAsync"),o=(0,l._1)(e,"scores","nonMaxSuppressionAsync"),a=oe(i,o,n,r,s);n=a.maxOutputSize,r=a.iouThreshold,s=a.scoreThreshold;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d}=(0,ue.GP)(c,h,n,r,s);return i!==t&&i.dispose(),o!==e&&o.dispose(),(0,Mt.R)(d,"int32")};const le=(0,f.op)({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const o=(0,l._1)(t,"boxes","nonMaxSuppression"),a=(0,l._1)(e,"scores","nonMaxSuppression"),u=oe(o,a,n,r,s,i),c={boxes:o,scores:a},h={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:i=u.softNmsSigma},d=zt.BV.runKernel(ne.W0,c,h);return{selectedIndices:d[0],selectedScores:d[1]}}});const he=async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const o=(0,l._1)(t,"boxes","nonMaxSuppressionAsync"),a=(0,l._1)(e,"scores","nonMaxSuppressionAsync"),u=oe(o,a,n,r,s,i);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,i=u.softNmsSigma;const c=await Promise.all([o.data(),a.data()]),h=c[0],d=c[1],{selectedIndices:f,selectedScores:p}=(0,ue.pA)(h,d,n,r,s,i);return o!==t&&o.dispose(),a!==e&&a.dispose(),{selectedIndices:(0,Mt.R)(f,"int32"),selectedScores:(0,Mt.R)(p)}};const de=(0,f.op)({nonMaxSuppressionPadded_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const o=(0,l._1)(t,"boxes","nonMaxSuppression"),a=(0,l._1)(e,"scores","nonMaxSuppression"),u=oe(o,a,n,r,s,null),c={boxes:o,scores:a},h={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:i},d=zt.BV.runKernel(ne.cy,c,h);return{selectedIndices:d[0],validOutputs:d[1]}}});const fe=async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const o=(0,l._1)(t,"boxes","nonMaxSuppressionAsync"),a=(0,l._1)(e,"scores","nonMaxSuppressionAsync"),u=oe(o,a,n,r,s,null),c=u.maxOutputSize,h=u.iouThreshold,d=u.scoreThreshold,[f,p]=await Promise.all([o.data(),a.data()]),{selectedIndices:m,validOutputs:b}=(0,ue.qP)(f,p,c,h,d,i);return o!==t&&o.dispose(),a!==e&&a.dispose(),{selectedIndices:(0,Mt.R)(m,"int32"),validOutputs:(0,yt.i)(b,"int32")}};var pe=n(3305),me=n(5098),be=n(624),ye=n(7245);const ge=(0,f.op)({bandPart_:function(t,e,n){(0,h.hu)(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),(0,h.hu)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=(0,l._1)(t,"a","bandPart");(0,h.hu)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[i,o]=r.shape.slice(-2);if(!(e<=i))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);e<0&&(e=i),n<0&&(n=o);const a=(0,M.X)((0,ye.w)(0,i,1,"int32"),[-1,1]),u=(0,ye.w)(0,o,1,"int32"),c=(0,nt.l)(a,u),d=(0,H.H)((0,be.z)(c,(0,yt.i)(+e,"int32")),(0,W.b)(c,(0,yt.i)(-n,"int32"))),f=(0,Ut.l)([i,o],r.dtype);return(0,M.X)((0,Ot.k)((0,Vt.H)((0,M.X)(r,[-1,i,o])).map((t=>(0,Wt.a)(d,t,f)))),s)}});var xe=n(3561);const we=(0,f.op)({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,(0,h.hu)(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)(0,h.hu)(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=(0,At.V)(t,t.shape[0],0).map((t=>(0,Tt.L)(t,[0])));(0,h.hu)(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],r=t;for(let e=0;e<t.length;++e)n.push(zt.BV.tidy((()=>{let t=r[e];if(e>0)for(let r=0;r<e;++r){const e=(0,st.d)((0,It.S)((0,st.d)(n[r],t)),n[r]);t=(0,nt.l)(t,e)}return(0,O.h)(t,(0,xe.K)(t,"euclidean"))})));return e?(0,Ot.k)(n,0):n}});var ve=n(4368),ke=n(8687);function $e(t,e=!1){return zt.BV.tidy((()=>{(0,h.hu)(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],r=t.shape[1];let s=L(n),i=(0,w.d)(t);const o=Lt([[1]],[1,1]);let a=(0,w.d)(o);const u=n>=r?r:n;for(let t=0;t<u;++t){const e=i,u=a,c=s;[a,i,s]=zt.BV.tidy((()=>{const e=(0,vt.t)(i,[t,t],[n-t,1]),u=(0,xe.K)(e),c=(0,vt.t)(i,[t,t],[1,1]),l=(0,Wt.a)((0,B.p)(c,0),Lt([[-1]]),Lt([[1]])),h=(0,nt.l)(c,(0,st.d)(l,u)),d=(0,O.h)(e,h);a=1===d.shape[0]?(0,w.d)(o):(0,v.z)([o,(0,vt.t)(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const f=(0,it.W)((0,O.h)((0,ke.O)(l,h),u)),p=(0,vt.t)(i,[t,0],[n-t,r]),m=(0,st.d)(f,a),b=(0,jt.p)(a);if(0===t)i=(0,nt.l)(p,(0,ke.O)(m,(0,ke.O)(b,p)));else{const e=(0,nt.l)(p,(0,ke.O)(m,(0,ke.O)(b,p)));i=(0,v.z)([(0,vt.t)(i,[0,0],[t,r]),e],0)}const y=(0,jt.p)(m),g=(0,vt.t)(s,[0,t],[n,s.shape[1]-t]);if(0===t)s=(0,nt.l)(g,(0,ke.O)((0,ke.O)(g,a),y));else{const e=(0,nt.l)(g,(0,ke.O)((0,ke.O)(g,a),y));s=(0,v.z)([(0,vt.t)(s,[0,0],[n,t]),e],1)}return[a,i,s]})),(0,ve.B9)([e,u,c])}return!e&&n>r&&(s=(0,vt.t)(s,[0,0],[n,r]),i=(0,vt.t)(i,[0,0],[r,r])),[s,i]}))}const Ne=(0,f.op)({qr_:function(t,e=!1){if((0,h.hu)(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return $e(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),r=(0,Vt.H)((0,M.X)(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],i=[];r.forEach((t=>{const[n,r]=$e(t,e);s.push(n),i.push(r)}));return[(0,M.X)((0,Ot.k)(s,0),t.shape),(0,M.X)((0,Ot.k)(i,0),t.shape)]}}});var Ce;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Ce||(Ce={}));const Ee=(0,f.op)({computeWeightedLoss_:function(t,e,n=Ce.SUM_BY_NONZERO_WEIGHTS){const r=(0,l._1)(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=(0,l._1)(e,"weights","computeWeightedLoss"));const i=null==s?r:(0,st.d)(r,s);if(n===Ce.NONE)return i;if(n===Ce.SUM)return(0,It.S)(i);if(n===Ce.MEAN){if(null==s)return(0,K.J)(i);{const t=r.size/s.size,e=(0,O.h)((0,It.S)(i),(0,It.S)(s));return t>1?(0,O.h)(e,(0,yt.i)(t)):e}}if(n===Ce.SUM_BY_NONZERO_WEIGHTS){if(null==s)return(0,O.h)((0,It.S)(i),(0,yt.i)(r.size));{const t=(0,st.d)(s,(0,ut.i)(r.shape)),e=(0,g.p)((0,It.S)((0,ot.Q)(t,(0,yt.i)(0))),"float32");return(0,O.h)((0,It.S)(i),e)}}throw Error(`Unknown reduction: ${n}`)}});(0,f.op)({absoluteDifference_:function(t,e,n,s=Ce.SUM_BY_NONZERO_WEIGHTS){const i=(0,l._1)(t,"labels","absoluteDifference"),o=(0,l._1)(e,"predictions","absoluteDifference");let a=null;null!=n&&(a=(0,l._1)(n,"weights","absoluteDifference")),(0,h.k5)(i.shape,o.shape,"Error in absoluteDifference: ");const u=(0,r.W)((0,nt.l)(i,o));return Ee(u,a,s)}});(0,f.op)({cosineDistance_:function(t,e,n,r,s=Ce.SUM_BY_NONZERO_WEIGHTS){const i=(0,l._1)(t,"labels","cosineDistance"),o=(0,l._1)(e,"predictions","cosineDistance");let a=null;null!=r&&(a=(0,l._1)(r,"weights","cosineDistance")),(0,h.k5)(i.shape,o.shape,"Error in cosineDistance: ");const u=(0,yt.i)(1),c=(0,nt.l)(u,(0,It.S)((0,st.d)(i,o),n,!0));return Ee(c,a,s)}});(0,f.op)({hingeLoss_:function(t,e,n,r=Ce.SUM_BY_NONZERO_WEIGHTS){let s=(0,l._1)(t,"labels","hingeLoss");const i=(0,l._1)(e,"predictions","hingeLoss");let o=null;null!=n&&(o=(0,l._1)(n,"weights","hingeLoss")),(0,h.k5)(s.shape,i.shape,"Error in hingeLoss: ");const a=(0,yt.i)(1);s=(0,nt.l)((0,st.d)((0,yt.i)(2),s),a);const u=(0,mt.U)((0,nt.l)(a,(0,st.d)(s,i)));return Ee(u,o,r)}});(0,f.op)({huberLoss_:function(t,e,n,i=1,o=Ce.SUM_BY_NONZERO_WEIGHTS){const a=(0,l._1)(t,"labels","huberLoss"),u=(0,l._1)(e,"predictions","huberLoss");let c=null;null!=n&&(c=(0,l._1)(n,"weights","huberLoss")),(0,h.k5)(a.shape,u.shape,"Error in huberLoss: ");const d=(0,yt.i)(i),f=(0,r.W)((0,nt.l)(u,a)),p=(0,Z.L)(f,d),m=(0,nt.l)(f,p),b=(0,s.I)((0,st.d)((0,yt.i)(.5),(0,et.h)(p)),(0,st.d)(d,m));return Ee(b,c,o)}});(0,f.op)({logLoss_:function(t,e,n,r=1e-7,i=Ce.SUM_BY_NONZERO_WEIGHTS){const o=(0,l._1)(t,"labels","logLoss"),a=(0,l._1)(e,"predictions","logLoss");let u=null;null!=n&&(u=(0,l._1)(n,"weights","logLoss")),(0,h.k5)(o.shape,a.shape,"Error in logLoss: ");const c=(0,yt.i)(1),d=(0,yt.i)(r),f=(0,it.W)((0,st.d)(o,(0,G.c)((0,s.I)(a,d)))),p=(0,st.d)((0,nt.l)(c,o),(0,G.c)((0,s.I)((0,nt.l)(c,a),d))),m=(0,nt.l)(f,p);return Ee(m,u,i)}});var Se=n(5265);(0,f.op)({meanSquaredError_:function(t,e,n,r=Ce.SUM_BY_NONZERO_WEIGHTS){const s=(0,l._1)(t,"labels","meanSquaredError"),i=(0,l._1)(e,"predictions","meanSquaredError");let o=null;null!=n&&(o=(0,l._1)(n,"weights","meanSquaredError")),(0,h.k5)(s.shape,i.shape,"Error in meanSquaredError: ");const a=(0,Se.$)(s,i);return Ee(a,o,r)}});var Ae=n(4842),Re=n(7474);(0,f.op)({sigmoidCrossEntropy_:function(t,e,n,i=0,o=Ce.SUM_BY_NONZERO_WEIGHTS){let a=(0,l._1)(t,"multiClassLabels","sigmoidCrossEntropy");const u=(0,l._1)(e,"logits","sigmoidCrossEntropy");let c=null;if(null!=n&&(c=(0,l._1)(n,"weights","sigmoidCrossEntropy")),(0,h.k5)(a.shape,u.shape,"Error in sigmoidCrossEntropy: "),i>0){const t=(0,yt.i)(i),e=(0,yt.i)(1),n=(0,yt.i)(.5);a=(0,s.I)((0,st.d)(a,(0,nt.l)(e,t)),(0,st.d)(n,t))}const d=function(t,e){const n=(0,l._1)(t,"labels","sigmoidCrossEntropyWithLogits"),i=(0,l._1)(e,"logits","sigmoidCrossEntropyWithLogits");(0,h.k5)(n.shape,i.shape,"Error in sigmoidCrossEntropyWithLogits: ");const o=(0,mt.U)(i),a=(0,st.d)(i,n),u=(0,Re.K)((0,Ae.Q)((0,it.W)((0,r.W)(i))));return(0,s.I)((0,nt.l)(o,a),u)}(a,u);return Ee(d,c,o)}});var Te=n(633),Oe=n(1391);(0,f.op)({softmaxCrossEntropy_:function(t,e,n,r=0,i=Ce.SUM_BY_NONZERO_WEIGHTS){let o=(0,l._1)(t,"onehotLabels","softmaxCrossEntropy");const a=(0,l._1)(e,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=(0,l._1)(n,"weights","softmaxCrossEntropy")),(0,h.k5)(o.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const t=(0,yt.i)(r),e=(0,yt.i)(1),n=(0,yt.i)(o.shape[1]);o=(0,s.I)((0,st.d)(o,(0,nt.l)(e,t)),(0,O.h)(t,n))}const c=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return(0,Te.cb)(((t,e,r)=>{const s=(0,Oe.l)(e,[n],!0),i=(0,nt.l)((0,g.p)(e,"float32"),s);r([t,i]);const o=(0,it.W)((0,st.d)(i,t));return{value:(0,It.S)(o,[n]),gradFunc:(t,e)=>{const[r,s]=e,i=(0,tt.rv)(t.shape,[n]);return[(0,st.d)((0,M.X)(t,i),(0,nt.l)((0,g.p)(r,"float32"),(0,Ae.Q)(s))),(0,st.d)((0,M.X)(t,i),(0,nt.l)((0,Ae.Q)(s),(0,g.p)(r,"float32")))]}}}))(t,e)}(o,a);return Ee(c,u,i)}}),Jt.k,Yt.S,Xt.Q,Kt.w;const Ie={flipLeftRight:se,resizeNearestNeighbor:me.j,resizeBilinear:pe.I,rotateWithOffset:ie,cropAndResize:re,nonMaxSuppression:ae,nonMaxSuppressionAsync:ce,nonMaxSuppressionWithScore:le,nonMaxSuppressionWithScoreAsync:he,nonMaxSuppressionPadded:de,nonMaxSuppressionPaddedAsync:fe},Fe={bandPart:ge,gramSchmidt:we,qr:Ne}},9682:(t,e,n)=>{"use strict";n.d(e,{v:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({pad_:function(t,e,n=0){const o=(0,i._1)(t,"x","pad");if(0===o.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:e,constantValue:n},u={x:o};return r.BV.runKernel(s.ly,u,a)}})},3453:(t,e,n)=>{"use strict";n.d(e,{s:()=>a});var r=n(7097),s=n(9121),i=n(747),o=n(3740);const a=(0,n(2668).op)({pow_:function(t,e){let n=(0,o._1)(t,"base","pow"),a=(0,o._1)(e,"exp","pow");[n,a]=(0,i.T_)(n,a);const u={a:n,b:a};return r.BV.runKernel(s.pe,u)}})},8151:(t,e,n)=>{"use strict";n.d(e,{A:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({prelu_:function(t,e){const n={x:(0,i._1)(t,"x","prelu"),alpha:(0,i._1)(e,"alpha","prelu")};return r.BV.runKernel(s.o0,n)}})},9451:(t,e,n)=>{"use strict";n.d(e,{W:()=>a});var r=n(7097),s=n(9121),i=n(3740),o=n(2271);const a=(0,n(2668).op)({prod_:function(t,e=null,n=!1){let a=(0,i._1)(t,"x","prod");"bool"===a.dtype&&(a=(0,o.p)(a,"int32"));const u={x:a},c={axis:e,keepDims:n};return r.BV.runKernel(s.Dl,u,c)}})},6845:(t,e,n)=>{"use strict";n.d(e,{Yi:()=>s,wv:()=>i});var r=n(6377);class s{constructor(t,e,n,s,i){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const o=i||Math.random();this.random=r.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,s,i;do{r=2*this.random()-1,s=2*this.random()-1,i=r*r+s*s}while(i>=1||0===i);const o=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*r*o,e=this.mean+this.stdDev*s*o,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class i{constructor(t=0,e=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=r.alea(s)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},5002:(t,e,n)=>{"use strict";n.d(e,{L:()=>o});var r=n(2657),s=n(2668),i=n(6845);const o=(0,s.op)({randomUniform_:function(t,e=0,n=1,s="float32",o){const a=(0,r.f)(t,s),u=new i.wv(e,n,null,o);for(let t=0;t<a.values.length;t++)a.values[t]=u.nextValue();return a.toTensor()}})},7245:(t,e,n)=>{"use strict";n.d(e,{w:()=>i});var r=n(7097),s=n(9121);function i(t,e,n=1,i="float32"){if(0===n)throw new Error("Cannot have a step of zero");const o={start:t,stop:e,step:n,dtype:i};return r.BV.runKernel(s.e6,{},o)}},766:(t,e,n)=>{"use strict";n.d(e,{k:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({real_:function(t){const e={input:(0,i._1)(t,"input","real")};return r.BV.runKernel(s.xJ,e)}})},9036:(t,e,n)=>{"use strict";n.d(e,{M:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({reciprocal_:function(t){const e={x:(0,i._1)(t,"x","reciprocal")};return r.BV.runKernel(s.$H,e)}})},7409:(t,e,n)=>{"use strict";n.d(e,{U:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({relu_:function(t){const e={x:(0,i._1)(t,"x","relu")};return r.BV.runKernel(s.qk,e)}})},3582:(t,e,n)=>{"use strict";n.d(e,{b:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({relu6_:function(t){const e={x:(0,i._1)(t,"x","relu6")};return r.BV.runKernel(s.Sb,e)}})},4968:(t,e,n)=>{"use strict";n.d(e,{X:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({reshape_:function(t,e){const n={x:(0,i._1)(t,"x","reshape","string_or_numeric")},o={shape:e};return r.BV.runKernel(s.HZ,n,o)}})},7486:(t,e,n)=>{"use strict";n.d(e,{G:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({reverse_:function(t,e){const n={x:(0,i._1)(t,"x","reverse")},o={dims:e};return r.BV.runKernel(s.mK,n,o)}})},7809:(t,e,n)=>{"use strict";n.d(e,{N:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({round_:function(t){const e={x:(0,i._1)(t,"x","round")};return r.BV.runKernel(s.e0,e)}})},2634:(t,e,n)=>{"use strict";n.d(e,{b:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({rsqrt_:function(t){const e={x:(0,i._1)(t,"x","rsqrt")};return r.BV.runKernel(s.bV,e)}})},9494:(t,e,n)=>{"use strict";n.d(e,{i:()=>i});var r=n(569),s=n(7852);function i(t,e){if(((0,r.fU)(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&(0,r.fU)(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,s.H)(t,[],[],e)}},3028:(t,e,n)=>{"use strict";n.d(e,{l5:()=>s,b0:()=>i,SU:()=>o});var r=n(569);function s(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(i+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(i+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+t.length-r)throw new Error(i+" update.rank != "+(s+t.length-r));for(let t=0;t<s;++t)if(n.shape[t]!==e.shape[t])throw new Error(i+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-s;++e)if(n.shape[e+s]!==t[e+r])throw new Error(i+` updates.shape[${e+s}] (${n.shape[e+s]}) != shape[${e+s}] (${t[e+s]})`)}function i(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}s(n,e,t)}function o(t,e,n){const s=e.shape.length,i=s>1?e.shape[s-1]:1,o=n.length;let a=1;for(let t=i;t<o;++t)a*=n[t];const u=i<1?1:i;return{sliceRank:i,numUpdates:(0,r.NA)(e.shape)/u,sliceSize:a,strides:[...(0,r.e3)(n.slice(0,i)),1],outputSize:(0,r.NA)(n)}}},5503:(t,e,n)=>{"use strict";n.d(e,{U:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({selu_:function(t){const e={x:(0,i._1)(t,"x","selu")};return r.BV.runKernel(s.oF,e)}})},8678:(t,e,n)=>{"use strict";n.d(e,{U:()=>c});var r=n(3740),s=n(569),i=n(4794),o=n(4718),a=n(2668),u=n(4968);const c=(0,a.op)({separableConv2d_:function(t,e,n,a,c,l=[1,1],h="NHWC"){const d=(0,r._1)(t,"x","separableConv2d"),f=(0,r._1)(e,"depthwiseFilter","separableConv2d"),p=(0,r._1)(n,"pointwiseFilter","separableConv2d");let m=d,b=!1;if(3===d.rank&&(b=!0,m=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),"NCHW"===h)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");s.hu(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),s.hu(4===f.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${f.rank}.`)),s.hu(4===p.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${f.rank}.`)),s.hu(1===p.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${p.shape[0]}.`)),s.hu(1===p.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${p.shape[1]}.`));const y=f.shape[2],g=f.shape[3];s.hu(p.shape[2]===y*g,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${y*g}, but got ${p.shape[2]}.`));const x=(0,o.B)(m,f,a,c,h,l),w=(0,i.T)(x,p,1,"valid",h);return b?(0,u.X)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},625:(t,e,n)=>{"use strict";n.d(e,{X:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({sigmoid_:function(t){const e={x:(0,i._1)(t,"x","sigmoid")};return r.BV.runKernel(s.a5,e)}})},4434:(t,e,n)=>{"use strict";n.d(e,{X:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({sign_:function(t){const e={x:(0,i._1)(t,"x","sign")};return r.BV.runKernel(s.i5,e)}})},9331:(t,e,n)=>{"use strict";n.d(e,{O:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({sin_:function(t){const e={x:(0,i._1)(t,"x","sin")};return r.BV.runKernel(s.RQ,e)}})},3254:(t,e,n)=>{"use strict";n.d(e,{R:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({sinh_:function(t){const e={x:(0,i._1)(t,"x","sinh")};return r.BV.runKernel(s.w3,e)}})},2676:(t,e,n)=>{"use strict";n.d(e,{t:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({slice_:function(t,e,n){const o=(0,i._1)(t,"x","slice","string_or_numeric");if(0===o.rank)throw new Error("Slicing scalar is not possible");const a={x:o},u={begin:e,size:n};return r.BV.runKernel(s.p2,a,u)}})},682:(t,e,n)=>{"use strict";n.d(e,{X:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({softmax_:function(t,e=-1){const n=(0,i._1)(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const o={logits:n},a={dim:e};return r.BV.runKernel(s.Gc,o,a)}})},3694:(t,e,n)=>{"use strict";n.d(e,{W:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({softplus_:function(t){const e={x:(0,i._1)(t,"x","softplus")};return r.BV.runKernel(s.MR,e)}})},7918:(t,e,n)=>{"use strict";n.d(e,{f:()=>a});var r=n(7097),s=n(9121),i=n(3740),o=n(569);const a=(0,n(2668).op)({spaceToBatchND_:function(t,e,n){const a=(0,i._1)(t,"x","spaceToBatchND");o.hu(a.rank>=1+e.length,(()=>`input rank ${a.rank} should be > than [blockShape] ${e.length}`)),o.hu(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),o.hu(a.shape.reduce(((t,r,s)=>s>0&&s<=e.length?t&&(r+n[s-1][0]+n[s-1][1])%e[s-1]==0:t),!0),(()=>`input spatial dimensions ${a.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const u={x:a},c={blockShape:e,paddings:n};return r.BV.runKernel(s.TQ,u,c)}})},7020:(t,e,n)=>{"use strict";n.d(e,{k:()=>o});var r=n(7097),s=n(9121),i=n(569);const o=(0,n(2668).op)({fft_:function(t){(0,i.hu)("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return r.BV.runKernel(s.vw,e)}})},8447:(t,e,n)=>{"use strict";n.d(e,{S:()=>o});var r=n(7097),s=n(9121),i=n(569);const o=(0,n(2668).op)({ifft_:function(t){(0,i.hu)("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return r.BV.runKernel(s.Qg,e)}})},4415:(t,e,n)=>{"use strict";n.d(e,{w:()=>p});var r=n(1661),s=n(6884),i=n(4386),o=n(4841),a=n(2668),u=n(766),c=n(4968),l=n(7486),h=n(9494),d=n(2676),f=n(8447);const p=(0,a.op)({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let a;if(e<=2){const r=(0,c.X)(t,[n,e]);a=(0,f.S)(r)}else{const p=[n,2*(e-1)],m=(0,c.X)((0,u.k)(t),[n,e]),b=(0,c.X)((0,i.a)(t),[n,e]),y=(0,l.G)((0,d.t)(m,[0,1],[n,e-2]),1),g=(0,o.d)((0,l.G)((0,d.t)(b,[0,1],[n,e-2]),1),(0,h.i)(-1)),x=(0,s.z)([m,y],1),w=(0,s.z)([b,g],1),v=(0,c.X)((0,r.P)(x,w),[p[0],p[1]]);a=(0,f.S)(v)}if(a=(0,u.k)(a),3===t.rank&&0!==t.shape[0]){const e=a,n=t.shape[0];a=(0,c.X)(a,[n,a.shape[0]/n,a.shape[1]]),e.dispose()}return a}})},3710:(t,e,n)=>{"use strict";n.d(e,{Q:()=>m});var r=n(569),s=n(1661),i=n(6884),o=n(4386),a=n(2668),u=n(766),c=n(4968),l=n(2676),h=n(8644),d=n(9640),f=n(6577),p=n(7020);const m=(0,a.op)({rfft_:function(t,e){(0,r.hu)("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const a=t.size/n;let m;if(null!=e&&e<n){const r=t.shape.map((t=>0)),s=t.shape.map((t=>t));s[t.shape.length-1]=e,m=(0,l.t)(t,r,s),n=e}else if(null!=e&&e>n){const r=t.shape.map((t=>t));r[t.shape.length-1]=e-n,m=(0,i.z)([t,(0,d.l)(r)],t.shape.length-1),n=e}else m=t;const b=(0,f.P)(m),y=(0,c.X)((0,s.P)(m,b),[a,n]),g=(0,p.k)(y),x=Math.floor(n/2)+1,w=(0,u.k)(g),v=(0,o.a)(g),k=(0,h.V)(w,[x,n-x],w.shape.length-1),$=(0,h.V)(v,[x,n-x],v.shape.length-1),N=m.shape.slice();return N[m.shape.length-1]=x,(0,c.X)((0,s.P)(k[0],$[0]),N)}})},8644:(t,e,n)=>{"use strict";n.d(e,{V:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({split_:function(t,e,n=0){const o={x:(0,i._1)(t,"x","split")},a={numOrSizeSplits:e,axis:n};return r.BV.runKernel(s.L8,o,a)}})},3261:(t,e,n)=>{"use strict";n.d(e,{_:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({sqrt_:function(t){const e={x:(0,i._1)(t,"x","sqrt")};return r.BV.runKernel(s.FK,e)}})},248:(t,e,n)=>{"use strict";n.d(e,{h:()=>i});var r=n(7097),s=n(3740);const i=(0,n(2668).op)({square_:function(t){const e=(0,s._1)(t,"x","square");return r.BV.runKernel("Square",{x:e},{})}})},5265:(t,e,n)=>{"use strict";n.d(e,{$:()=>u});var r=n(7097),s=n(9121),i=n(747),o=n(3740),a=n(2200);const u=(0,n(2668).op)({squaredDifference_:function(t,e){let n=(0,o._1)(t,"a","squaredDifference"),u=(0,o._1)(e,"b","squaredDifference");[n,u]=(0,i.T_)(n,u),(0,a.$N)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernel(s._t,c,{})}})},9590:(t,e,n)=>{"use strict";n.d(e,{L:()=>a});var r=n(3740),s=n(569),i=n(2668),o=n(4968);const a=(0,i.op)({squeeze_:function(t,e){const n=(0,r._1)(t,"x","squeeze");return(0,o.X)(n,(0,s.bp)(n.shape,e).newShape)}})},2991:(t,e,n)=>{"use strict";n.d(e,{k:()=>a});var r=n(7097),s=n(9121),i=n(3740),o=n(569);const a=(0,n(2668).op)({stack_:function(t,e=0){const n=(0,i.sI)(t,"tensors","stack","string_or_numeric");o.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&o.hu(e<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const a=n,u={axis:e};return r.BV.runKernel(s.Qi,a,u)}})},1901:(t,e,n)=>{"use strict";n.d(e,{N:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({step_:function(t,e=0){const n={x:(0,i._1)(t,"x","step")},o={alpha:e};return r.BV.runKernel(s.h8,n,o)}})},5158:(t,e,n)=>{"use strict";n.d(e,{N:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({stridedSlice_:function(t,e,n,o,a=0,u=0,c=0,l=0,h=0){const d={x:(0,i._1)(t,"x","stridedSlice")},f={begin:e,end:n,strides:o,beginMask:a,endMask:u,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:h};return r.BV.runKernel(s.m2,d,f)}})},827:(t,e,n)=>{"use strict";n.d(e,{l:()=>a});var r=n(7097),s=n(9121),i=n(747),o=n(3740);const a=(0,n(2668).op)({sub_:function(t,e){let n=(0,o._1)(t,"a","sub"),a=(0,o._1)(e,"b","sub");[n,a]=(0,i.T_)(n,a);const u={a:n,b:a};return r.BV.runKernel(s.Tr,u)}})},5475:(t,e,n)=>{"use strict";n.d(e,{S:()=>a});var r=n(7097),s=n(9121),i=n(3740),o=n(2271);const a=(0,n(2668).op)({sum_:function(t,e=null,n=!1){let a=(0,i._1)(t,"x","sum");"bool"===a.dtype&&(a=(0,o.p)(a,"int32"));const u={x:a},c={axis:e,keepDims:n};return r.BV.runKernel(s.GB,u,c)}})},1173:(t,e,n)=>{"use strict";n.d(e,{O:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({tan_:function(t){const e={x:(0,i._1)(t,"x","tan")};return r.BV.runKernel(s.sE,e)}})},1869:(t,e,n)=>{"use strict";n.d(e,{A:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({tanh_:function(t){const e={x:(0,i._1)(t,"x","tanh")};return r.BV.runKernel(s.MI,e)}})},701:(t,e,n)=>{"use strict";n.d(e,{X:()=>i});var r=n(3740),s=n(7852);function i(t,e,n){const i=(0,r.C)(t,n);return(0,s.H)(t,e,i,n)}},6092:(t,e,n)=>{"use strict";n.d(e,{R:()=>o});var r=n(3740),s=n(569),i=n(7852);function o(t,e){(0,s.Cq)(t);const n=(0,r.C)(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,i.H)(t,null,n,e)}},7852:(t,e,n)=>{"use strict";n.d(e,{H:()=>o});var r=n(7097),s=n(569),i=n(9155);function o(t,e,n,o){if(null==o&&(o=(0,s.D2)(t)),"complex64"===o)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!(0,s.fU)(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){(0,s.Mu)(e);const t=(0,s.NA)(e),r=(0,s.NA)(n);(0,s.hu)(t===r,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`));for(let t=0;t<n.length;++t){const r=n[t],i=t!==n.length-1||r!==(0,s.NA)(e.slice(t));(0,s.hu)(n[t]===e[t]||!i,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return(0,s.fU)(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==o?(0,i.Os)(t,o):(0,s.xH)(t,[],!0),r.BV.makeTensor(t,e,o)}},7501:(t,e,n)=>{"use strict";n.d(e,{G:()=>a});var r=n(7097),s=n(9121),i=n(3740),o=n(569);const a=(0,n(2668).op)({tile_:function(t,e){const n=(0,i._1)(t,"x","tile","string_or_numeric");o.hu(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const a={x:n},u={reps:e};return r.BV.runKernel(s.n9,a,u)}})},3243:(t,e,n)=>{"use strict";n.d(e,{h:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({topk_:function(t,e=1,n=!0){const o=(0,i._1)(t,"x","topk");if(0===o.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=o.shape[o.shape.length-1];if(e>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${e}`);const u={x:o},c={k:e,sorted:n},[l,h]=r.BV.runKernel(s.cW,u,c);return{values:l,indices:h}}})},9065:(t,e,n)=>{"use strict";n.d(e,{p:()=>a});var r=n(7097),s=n(9121),i=n(3740),o=n(569);const a=(0,n(2668).op)({transpose_:function(t,e){const n=(0,i._1)(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),o.hu(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`)),e.forEach((t=>{o.hu(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${e}`))})),n.rank<=1)return n.clone();const a={x:n},u={perm:e};return r.BV.runKernel(s.G3,a,u)}})},3596:(t,e,n)=>{"use strict";n.d(e,{X:()=>o});var r=n(2657),s=n(2668),i=n(6845);const o=(0,s.op)({truncatedNormal_:function(t,e=0,n=1,s,o){if(null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const a=new i.Yi(e,n,s,!0,o),u=(0,r.f)(t,s);for(let t=0;t<u.values.length;t++)u.values[t]=a.nextValue();return u.toTensor()}})},9608:(t,e,n)=>{"use strict";n.d(e,{T:()=>a});var r=n(7097),s=n(9121),i=n(3740),o=n(569);const a=(0,n(2668).op)({unique_:function(t,e=0){const n=(0,i._1)(t,"x","unique","string_or_numeric");(0,o.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const a={x:n},u={axis:e},[c,l]=r.BV.runKernel(s.kp,a,u);return{values:c,indices:l}}})},4136:(t,e,n)=>{"use strict";n.d(e,{H:()=>a});var r=n(7097),s=n(9121),i=n(3740),o=n(569);const a=(0,n(2668).op)({unstack_:function(t,e=0){const n=(0,i._1)(t,"x","unstack","string_or_numeric");o.hu(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`));const a={value:n},u={axis:e};return r.BV.runKernel(s.To,a,u)}})},5912:(t,e,n)=>{"use strict";n.d(e,{a:()=>c});var r=n(7097),s=n(9121),i=n(3740),o=n(569),a=n(8247),u=n(2200);const c=(0,n(2668).op)({where_:function(t,e,n){const c=(0,i._1)(e,"a","where"),l=(0,i._1)(n,"b","where"),h=(0,i._1)(t,"condition","where","bool"),d=(0,u.$N)(c.shape,l.shape),f=(0,a.U)(c,d),p=(0,a.U)(l,d);1===h.rank&&(0,o.hu)(h.shape[0]===c.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==h.rank&&(0,o.k5)(h.shape,p.shape,"Error in where: ");const m={condition:h,t:f,e:p};return r.BV.runKernel(s.Ph,m)}})},9640:(t,e,n)=>{"use strict";n.d(e,{l:()=>o});var r=n(7097),s=n(569),i=n(1661);function o(t,e="float32"){if("complex64"===e){const e=o(t,"float32"),n=o(t,"float32");return(0,i.P)(e,n)}const n=(0,s.wT)((0,s.NA)(t),e);return r.BV.makeTensor(n,t,e)}},6577:(t,e,n)=>{"use strict";n.d(e,{P:()=>o});var r=n(7097),s=n(9121),i=n(3740);const o=(0,n(2668).op)({zerosLike_:function(t){const e={x:(0,i._1)(t,"x","zerosLike")};return r.BV.runKernel(s.Ru,e)}})},4077:(t,e,n)=>{"use strict";n.d(e,{es:()=>y,YD:()=>l,_w:()=>g,FZ:()=>b,Vp:()=>m,Vi:()=>p});var r=n(569);function s(t,e,n,s){const o=(0,r.e3)(e),c=function(t,e,n,s){const o=(0,r.NA)(e),a=s[s.length-1],c=new Array(a).fill(0),l=e.length,h="complex64"===n?u(t):t;if(l>1)for(let t=0;t<o/a;t++){const e=t*a;for(let t=0;t<a;t++)c[t]=Math.max(c[t],i(h[e+t],0,n).length)}return c}(t,e,n,o),l=e.length,h=a(t,e,n,o,c),d=["Tensor"];return s&&(d.push(`  dtype: ${n}`),d.push(`  rank: ${l}`),d.push(`  shape: [${e}]`),d.push("  values:")),d.push(h.map((t=>"    "+t)).join("\n")),d.join("\n")}function i(t,e,n){let s;return s=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:(0,r.HD)(t)?`'${t}'`:"bool"===n?o(t):parseFloat(t.toFixed(7)).toString(),(0,r.oj)(s,e)}function o(t){return 0===t?"false":"true"}function a(t,e,n,r,s,c=!0){const l="complex64"===n?2:1,h=e[0],d=e.length;if(0===d){if("complex64"===n){return[i(u(t)[0],0,n)]}return"bool"===n?[o(t[0])]:[t[0].toString()]}if(1===d){if(h>20){const e=3*l;let r=Array.from(t.slice(0,e)),o=Array.from(t.slice((h-3)*l,h*l));return"complex64"===n&&(r=u(r),o=u(o)),["["+r.map(((t,e)=>i(t,s[e],n))).join(", ")+", ..., "+o.map(((t,e)=>i(t,s[h-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?u(t):Array.from(t)).map(((t,e)=>i(t,s[e],n))).join(", ")+"]"]}const f=e.slice(1),p=r.slice(1),m=r[0]*l,b=[];if(h>20){for(let e=0;e<3;e++){const r=e*m,i=r+m;b.push(...a(t.slice(r,i),f,n,p,s,!1))}b.push("...");for(let e=h-3;e<h;e++){const r=e*m,i=r+m;b.push(...a(t.slice(r,i),f,n,p,s,e===h-1))}}else for(let e=0;e<h;e++){const r=e*m,i=r+m;b.push(...a(t.slice(r,i),f,n,p,s,e===h-1))}const y=2===d?",":"";b[0]="["+b[0]+y;for(let t=1;t<b.length-1;t++)b[t]=" "+b[t]+y;let g=",\n";for(let t=2;t<d;t++)g+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(c?"":g),b}function u(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}var c=n(9155);class l{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=r.NA(t),null!=n){const t=n.length;r.hu(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r.rQ(e,this.size),this.strides=(0,r.e3)(t)}set(t,...e){0===e.length&&(e=[0]),r.hu(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return h().makeTensor(this.values,this.shape,this.dtype)}}let h=null,d=null,f=null;function p(t){h=t}function m(t){d=t}function b(t){f=t}class y{constructor(t,e,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=r.NA(t),this.strides=(0,r.e3)(t),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return d.buffer(this.shape,this.dtype,t)}bufferSync(){return d.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return(0,r.GX)(this.shape,t)}arraySync(){return(0,r.GX)(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=h().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>c.v5(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=h().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>c.v5(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await h().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(h().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return d.print(this,t)}clone(){return this.throwIfDisposed(),d.clone(this)}toString(t=!1){return s(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),d.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),h().makeVariable(this,t,e,n)}}Object.defineProperty(y,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed});class g extends y{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!r.cO(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);h().disposeTensor(this),this.dataId=t.dataId,h().incRef(this,null)}dispose(){h().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(g,Symbol.hasInstance,{value:t=>t instanceof y&&null!=t.assign&&t.assign instanceof Function})},747:(t,e,n)=>{"use strict";n.d(e,{T_:()=>i,BC:()=>o,Vu:()=>a});var r=n(4077),s=n(1221);function i(t,e){if(t.dtype===e.dtype)return[t,e];const n=(0,s.x8)(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function o(t,e){return e.some((e=>e.id===t.id))}function a(t){const e=[];return u(t,e,new Set),e}function u(t,e,n){if(null==t)return;if(t instanceof r.es)return void e.push(t);if(s=t,!Array.isArray(s)&&"object"!=typeof s)return;var s;const i=t;for(const t in i){const r=i[t];n.has(r)||(n.add(r),u(r,e,n))}}},3740:(t,e,n)=>{"use strict";n.d(e,{C:()=>u,_1:()=>h,sI:()=>d});var r=n(7097),s=n(2885),i=n(4077),o=n(569),a=n(9155);function u(t,e){let n=t;if((0,o.fU)(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||(0,o.fU)(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&(0,s.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c(t,r,[]),r}function c(t,e,n){if(n=n||[],!Array.isArray(t)&&!(0,o.fU)(t))return void(0,o.hu)(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));(0,o.hu)(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),(0,o.hu)(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const r=e.slice(1);for(let e=0;e<t.length;++e)c(t[e],r,n.concat(e))}function l(t,e,n,r){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}}function h(t,e,n,s="numeric"){if(t instanceof i.es)return l(s,t.dtype,e,n),t;let c=(0,o.D2)(t);if("string"!==c&&["bool","int32","float32"].indexOf(s)>=0&&(c=s),l(s,c,e,n),null==t||!(0,o.fU)(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const h=u(t,c);(0,o.fU)(t)||Array.isArray(t)||(t=[t]);const d="string"!==c?(0,a.Os)(t,c):(0,o.xH)(t,[],!0);return r.BV.makeTensor(d,h,c)}function d(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,s)=>h(t,`${e}[${s}]`,n,r)))}},1221:(t,e,n)=>{"use strict";var r,s,i,o,a;n.d(e,{x8:()=>c,z4:()=>l}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(r||(r={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(s||(s={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(i||(i={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(o||(o={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(a||(a={}));const u={float32:o,int32:s,bool:i,complex64:a};function c(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return u[t][e]}function l(t){return c(t,"int32")}},9155:(t,e,n)=>{"use strict";n.d(e,{cO:()=>s.cO,hu:()=>s.hu,k5:()=>s.k5,bT:()=>s.bT,e3:()=>s.e3,xH:()=>s.xH,rQ:()=>s.rQ,WP:()=>s.WP,QB:()=>s.QB,NE:()=>s.NE,D2:()=>s.D2,JZ:()=>s.JZ,GN:()=>s.GN,hj:()=>s.hj,tI:()=>s.tI,HD:()=>s.HD,fU:()=>s.fU,qy:()=>s.qy,l6:()=>s.l6,wT:()=>s.wT,nY:()=>s.nY,EC:()=>s.EC,WD:()=>s.WD,oj:()=>s.oj,TV:()=>s.TV,NA:()=>s.NA,YP:()=>s.YP,bp:()=>s.bp,Sm:()=>s.Sm,GX:()=>s.GX,hr:()=>i,Os:()=>o,zO:()=>a,he:()=>u,YW:()=>c,v5:()=>l});var r=n(2885),s=n(569);function i(t,e){return"string"===e?c(t):o([t],e)}function o(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=s.xH(t)),(0,r.OB)().getBool("DEBUG")&&s.D5(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function a(){return(0,r.OB)().platform.now()}function u(t,e){return(0,r.OB)().platform.fetch(t,e)}function c(t,e="utf-8"){return e=e||"utf-8",(0,r.OB)().platform.encode(t,e)}function l(t,e="utf-8"){return e=e||"utf-8",(0,r.OB)().platform.decode(t,e)}},569:(t,e,n)=>{"use strict";function r(t){let e=t.length,n=0,r=0;for(;e>0;)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function s(t,e,n){return Math.max(t,Math.min(e,n))}function i(t){return t%2==0?t:t+1}function o(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function a(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function u(t,e,n=""){a(d(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function c(t){a(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function l(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||C(t)&&!n)for(let r=0;r<t.length;++r)l(t[r],e,n);else e.push(t);return e}function h(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function d(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function f(t){return t%1==0}function p(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function m(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function b(t,e=(t=>0),n){return new Promise(((r,s)=>{let i=0;const o=()=>{if(t())return void r();i++;const a=e(i);null!=n&&i>=n?s():setTimeout(o,a)};o()}))}function y(t,e){let n=1,r=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${e}`);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}function g(t,e){const n=e.length;return a((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),a(t.every((t=>f(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function x(t,e){const n=[],r=[],s=null!=e&&Array.isArray(e)&&0===e.length,i=null==e||s?null:g(e,t).sort();let o=0;for(let e=0;e<t.length;++e){if(null!=i){if(i[o]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==i[o]||i[o]>e)&&1===t[e]&&(n.push(t[e]),r.push(e)),i[o]<=e&&o++}1!==t[e]&&(n.push(t[e]),r.push(e))}return{newShape:n,keptDims:r}}function w(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function v(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function k(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function $(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function N(t,e){return"complex64"!==e&&(("float32"!==e||"complex64"===t)&&(("int32"!==e||"float32"===t||"complex64"===t)&&("bool"!==e||"bool"!==t)))}function C(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function E(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function S(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}function A(t){return"string"==typeof t||t instanceof String}function R(t){return"number"==typeof t}function T(t){return Array.isArray(t)?T(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":R(t)?"float32":A(t)?"string":"boolean"==typeof t?"bool":"float32"}function O(t){return!!(t&&t.constructor&&t.call&&t.apply)}function I(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function F(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function _(t,e,n){const r=new Array;if(1===e.length){const s=e[0];for(let e=0;e<s;e++)r[e]=n[t+e]}else{const s=e[0],i=e.slice(1),o=i.reduce(((t,e)=>t*e));for(let e=0;e<s;e++)r[e]=_(t+e*o,i,n)}return r}function M(t,e){if(0===t.length)return e[0];const n=t.reduce(((t,e)=>t*e));if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return _(0,t,e)}function D(t,e){const n=L(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function L(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function P(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return M(t,new Float32Array(n));if("int32"===e)return M(t,new Int32Array(n));if("bool"===e)return M(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function V(t){t.forEach((e=>{a(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function z(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=n[e]*t[e];return r}function B(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/n[e]),t-=r[e]*n[e];return r[r.length-1]=t,r}function W(t){return t&&t.then&&"function"==typeof t.then}n.d(e,{TV:()=>r,uZ:()=>s,nY:()=>i,Sm:()=>o,hu:()=>a,k5:()=>u,Cq:()=>c,xH:()=>l,NA:()=>h,cO:()=>d,GN:()=>f,YP:()=>p,oj:()=>m,WD:()=>b,JZ:()=>y,EC:()=>g,bp:()=>x,WP:()=>w,rQ:()=>v,D5:()=>k,LP:()=>$,QB:()=>N,fU:()=>C,bT:()=>E,Ub:()=>S,HD:()=>A,hj:()=>R,D2:()=>T,mf:()=>O,jP:()=>I,e3:()=>F,GX:()=>M,p8:()=>D,wT:()=>L,l6:()=>P,Mu:()=>V,qy:()=>z,NE:()=>B,tI:()=>W})},6377:(t,e,n)=>{var r=n(4832),s=n(8652),i=n(801),o=n(2030),a=n(3618),u=n(9049),c=n(1971);c.alea=r,c.xor128=s,c.xorwow=i,c.xorshift7=o,c.xor4096=a,c.tychei=u,t.exports=c},4832:function(t,e,n){var r;!function(t,s,i){function o(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function a(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function u(t,e){var n=new o(t),r=e&&e.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.alea=u}(0,t=n.nmd(t),n.amdD)},9049:function(t,e,n){var r;!function(t,s,i){function o(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function a(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function u(t,e){var n=new o(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.tychei=u}(0,t=n.nmd(t),n.amdD)},8652:function(t,e,n){var r;!function(t,s,i){function o(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function a(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function u(t,e){var n=new o(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.xor128=u}(0,t=n.nmd(t),n.amdD)},3618:function(t,e,n){var r;!function(t,s,i){function o(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,i=e.i;return e.w=r=r+1640531527|0,n=s[i+34&127],t=s[i=i+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[i]=n^t,e.i=i,n+(r^r>>>16)|0},function(t,e){var n,r,s,i,o,a=[],u=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,u=Math.max(u,e.length)),s=0,i=-32;i<u;++i)e&&(r^=e.charCodeAt((i+32)%e.length)),0===i&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(o=o+1640531527|0,s=0==(n=a[127&i]^=r+o)?s+1:0);for(s>=128&&(a[127&(e&&e.length||0)]=-1),s=127,i=512;i>0;--i)r=a[s+34&127],n=a[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,a[s]=r^n;t.w=o,t.X=a,t.i=s}(e,t)}function a(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function u(t,e){null==t&&(t=+new Date);var n=new o(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.X&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.xor4096=u}(0,t=n.nmd(t),n.amdD)},2030:function(t,e,n){var r;!function(t,s,i){function o(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function a(t,e){return e.x=t.x.slice(),e.i=t.i,e}function u(t,e){null==t&&(t=+new Date);var n=new o(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.x&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.xorshift7=u}(0,t=n.nmd(t),n.amdD)},801:function(t,e,n){var r;!function(t,s,i){function o(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function a(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function u(t,e){var n=new o(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.xorwow=u}(0,t=n.nmd(t),n.amdD)},1971:(t,e,n)=>{var r;!function(s,i){var o,a=this,u=256,c=i.pow(u,6),l=i.pow(2,52),h=2*l,d=255;function f(t,e,n){var r=[],d=y(b((e=1==e?{entropy:!0}:e||{}).entropy?[t,g(s)]:null==t?function(){try{var t;return o&&(t=o.randomBytes)?t=t(u):(t=new Uint8Array(u),(a.crypto||a.msCrypto).getRandomValues(t)),g(t)}catch(t){var e=a.navigator,n=e&&e.plugins;return[+new Date,a,n,a.screen,g(s)]}}():t,3),r),f=new p(r),x=function(){for(var t=f.g(6),e=c,n=0;t<l;)t=(t+n)*u,e*=u,n=f.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|f.g(4)},x.quick=function(){return f.g(4)/4294967296},x.double=x,y(g(f.S),s),(e.pass||n||function(t,e,n,r){return r&&(r.S&&m(r,f),t.state=function(){return m(f,{})}),n?(i.random=t,e):t})(x,d,"global"in e?e.global:this==i,e.state)}function p(t){var e,n=t.length,r=this,s=0,i=r.i=r.j=0,o=r.S=[];for(n||(t=[n++]);s<u;)o[s]=s++;for(s=0;s<u;s++)o[s]=o[i=d&i+t[s%n]+(e=o[s])],o[i]=e;(r.g=function(t){for(var e,n=0,s=r.i,i=r.j,o=r.S;t--;)e=o[s=d&s+1],n=n*u+o[d&(o[s]=o[i=d&i+e])+(o[i]=e)];return r.i=s,r.j=i,n})(u)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function b(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(b(t[n],e-1))}catch(t){}return r.length?r:"string"==s?t:t+"\0"}function y(t,e){for(var n,r=t+"",s=0;s<r.length;)e[d&s]=d&(n^=19*e[d&s])+r.charCodeAt(s++);return g(e)}function g(t){return String.fromCharCode.apply(0,t)}if(i.seedrandom=f,y(i.random(),s),t.exports){t.exports=f;try{o=n(3906)}catch(t){}}else void 0===(r=function(){return f}.call(e,n,e,t))||(t.exports=r)}([],Math)},3906:()=>{},2993:()=>{},8352:()=>{},1386:()=>{},9513:()=>{},4589:()=>{},1758:()=>{},6614:()=>{}},e={};function n(r){if(e[r])return e[r].exports;var s=e[r]={id:r,loaded:!1,exports:{}};return t[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),(()=>{"use strict";var t={};n.r(t),n.d(t,{addImpl:()=>we,bincountImpl:()=>Ne,bincountReduceImpl:()=>Ce,ceilImpl:()=>Re,concatImpl:()=>Ie,expImpl:()=>Fe,expm1Impl:()=>De,floorImpl:()=>Ve,gatherV2Impl:()=>We,greaterImpl:()=>Ue,lessImpl:()=>He,linSpaceImpl:()=>Je,logImpl:()=>Ye,maxImpl:()=>Ze,maximumImpl:()=>tn,minimumImpl:()=>rn,multiplyImpl:()=>an,negImpl:()=>hn,notEqualImpl:()=>fn,prodImpl:()=>xn,rangeImpl:()=>vn,rsqrtImpl:()=>kn,simpleAbsImpl:()=>oe,sliceImpl:()=>Cn,squaredDifferenceImpl:()=>An,stridedSliceImpl:()=>On,subImpl:()=>In,tileImpl:()=>Dn,topKImpl:()=>Ln,transposeImpl:()=>bn,uniqueImpl:()=>Pn});const e=(t,n)=>{for(let r of Object.keys(n))n[r]instanceof Object&&Object.assign(n[r],e(t[r]||{},n[r]));return Object.assign(t||{},n),t};var r=n(3976),s=n(5965),i=function(){return(i=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var s in e=arguments[n])Object.prototype.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t}).apply(this,arguments)};function o(t,e,n,r){return new(n||(n=Promise))((function(s,i){function o(t){try{u(r.next(t))}catch(t){i(t)}}function a(t){try{u(r.throw(t))}catch(t){i(t)}}function u(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,a)}u((r=r.apply(t,e||[])).next())}))}function a(t,e){var n,r,s,i,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(s=2&i[0]?r.return:i[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,i[1])).done)return s;switch(r=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,r=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!((s=(s=o.trys).length>0&&s[s.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){o.label=i[1];break}if(6===i[0]&&o.label<s[1]){o.label=s[1],s=i;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(i);break}s[2]&&o.ops.pop(),o.trys.pop();continue}i=e.call(t,o)}catch(t){i=[6,t],r=0}finally{n=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}}const u=t=>({startEndTensor:t,startPoint:(0,r.tPi)(t,[0,0],[-1,2]),endPoint:(0,r.tPi)(t,[0,2],[-1,2])}),c={strides:[8,16],anchors:[2,6]};function l(t,e){let n,s,i;if(t.topLeft instanceof r.esB&&t.bottomRight instanceof r.esB){const[o,a]=(0,r.lub)((()=>[(0,r.zoF)([(0,r.luU)(e-1,t.topLeft.slice(0,1)),t.topLeft.slice(1,1)]),(0,r.zoF)([(0,r.luU)(e-1,t.bottomRight.slice(0,1)),t.bottomRight.slice(1,1)])]));n=o,s=a,null!=t.landmarks&&(i=(0,r.lub)((()=>{const n=(0,r.luU)((0,r.RRF)([e-1,0]),t.landmarks),s=(0,r.RRF)([1,-1]);return(0,r.dC7)(n,s)})))}else{const[r,o]=t.topLeft,[a,u]=t.bottomRight;n=[e-1-r,o],s=[e-1-a,u],null!=t.landmarks&&(i=t.landmarks.map((t=>[e-1-t[0],t[1]])))}const o={topLeft:n,bottomRight:s};return null!=i&&(o.landmarks=i),null!=t.probability&&(o.probability=t.probability instanceof r.esB?t.probability.clone():t.probability),o}function h(t,e){return(0,r.lub)((()=>{let n;return n=t.hasOwnProperty("box")?t.box:t,((t,e)=>{const n=(0,r.dC7)(t.startPoint,e),s=(0,r.dC7)(t.endPoint,e),i=(0,r.Izb)([n,s],1);return u(i)})(n,e).startEndTensor.squeeze()}))}class d{constructor(t,e,n,s,i,o){this.blazeFaceModel=t,this.width=e,this.height=n,this.maxFaces=s,this.anchorsData=function(t,e,n){const r=[];for(let s=0;s<n.strides.length;s++){const i=n.strides[s],o=Math.floor((e+i-1)/i),a=Math.floor((t+i-1)/i),u=n.anchors[s];for(let t=0;t<o;t++){const e=i*(t+.5);for(let t=0;t<a;t++){const n=i*(t+.5);for(let t=0;t<u;t++)r.push([n,e])}}}return r}(e,n,c),this.anchors=(0,r.odF)(this.anchorsData),this.inputSizeData=[e,n],this.inputSize=(0,r.RRF)([e,n]),this.iouThreshold=i,this.scoreThreshold=o}async getBoundingBoxes(t,e,n=!0){const[s,i,o]=(0,r.lub)((()=>{const e=t.resizeBilinear([this.width,this.height]),n=(0,r.dC7)((0,r.luU)(e.div(255),.5),2),s=this.blazeFaceModel.predict(n).squeeze(),i=function(t,e,n){const s=(0,r.tPi)(t,[0,1],[-1,2]),i=(0,r.IHx)(s,e),o=(0,r.tPi)(t,[0,3],[-1,2]),a=(0,r.hiC)(o,n),u=(0,r.hiC)(i,n),c=(0,r.hiC)(a,2),l=(0,r.luU)(u,c),h=(0,r.IHx)(u,c),d=(0,r.dC7)(l,n),f=(0,r.dC7)(h,n);return(0,r.Izb)([d,f],1)}(s,this.anchors,this.inputSize),o=(0,r.tPi)(s,[0,0],[-1,1]);return[s,i,(0,r.XD2)(o).squeeze()]})),a=console.warn;console.warn=()=>{};const c=r.BHj.nonMaxSuppression(i,o,this.maxFaces,this.iouThreshold,this.scoreThreshold);console.warn=a;const l=await c.array();c.dispose();let h=l.map((t=>(0,r.tPi)(i,[t,0],[1,-1])));e||(h=await Promise.all(h.map((async t=>{const e=await t.array();return t.dispose(),e}))));const d=t.shape[1],f=t.shape[2];let p;p=e?(0,r.hiC)([f,d],this.inputSize):[f/this.inputSizeData[0],d/this.inputSizeData[1]];const m=[];for(let t=0;t<h.length;t++){const i=h[t],a=(0,r.lub)((()=>{const a=u(i instanceof r.esB?i:(0,r.odF)(i));if(!n)return a;const c=l[t];let h;return h=e?this.anchors.slice([c,0],[1,2]):this.anchorsData[c],{box:a,landmarks:(0,r.tPi)(s,[c,5],[1,-1]).squeeze().reshape([6,-1]),probability:(0,r.tPi)(o,[c],[1]),anchor:h}}));m.push(a)}return i.dispose(),o.dispose(),s.dispose(),{boxes:m,scaleFactor:p}}async estimateFaces(t,e=!1,n=!1,s=!0){const[,i]=function(t){return t instanceof r.esB?[t.shape[0],t.shape[1]]:[t.height,t.width]}(t),o=(0,r.lub)((()=>(t instanceof r.esB||(t=r.Xhn.n(t)),t.toFloat().expandDims(0)))),{boxes:a,scaleFactor:u}=await this.getBoundingBoxes(o,e,s);return o.dispose(),e?a.map((t=>{const e=h(t,u);let r={topLeft:e.slice([0],[2]),bottomRight:e.slice([2],[2])};if(s){const{landmarks:e,probability:n,anchor:s}=t,i=e.add(s).mul(u);r.landmarks=i,r.probability=n}return n&&(r=l(r,i)),r})):Promise.all(a.map((async t=>{const e=h(t,u);let r;if(s){const[n,s,i]=await Promise.all([t.landmarks,e,t.probability].map((async t=>t.array()))),o=t.anchor,[a,c]=u,l=n.map((t=>[(t[0]+o[0])*a,(t[1]+o[1])*c]));r={topLeft:s.slice(0,2),bottomRight:s.slice(2),landmarks:l,probability:i},(t=>{t.startEndTensor.dispose(),t.startPoint.dispose(),t.endPoint.dispose()})(t.box),t.landmarks.dispose(),t.probability.dispose()}else{const t=await e.array();r={topLeft:t.slice(0,2),bottomRight:t.slice(2)}}return e.dispose(),n&&(r=l(r,i)),r})))}}async function f({maxFaces:t=10,inputWidth:e=128,inputHeight:n=128,iouThreshold:r=.3,scoreThreshold:i=.75}={}){const o=await(0,s.YL)("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0});return new d(o,e,n,t,r,i)}var p={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]};function m(t){return[Math.abs(t.endPoint[0]-t.startPoint[0]),Math.abs(t.endPoint[1]-t.startPoint[1])]}function b(t){return[t.startPoint[0]+(t.endPoint[0]-t.startPoint[0])/2,t.startPoint[1]+(t.endPoint[1]-t.startPoint[1])/2]}function y(t,e){void 0===e&&(e=1.5);var n=b(t),r=m(t),s=[e*r[0]/2,e*r[1]/2];return{startPoint:[n[0]-s[0],n[1]-s[1]],endPoint:[n[0]+s[0],n[1]+s[1]],landmarks:t.landmarks}}var g=[[1,0,0],[0,1,0],[0,0,1]];function x(t,e){return[[1,0,t],[0,1,e],[0,0,1]]}function w(t,e){for(var n=0,r=0;r<t.length;r++)n+=t[r]*e[r];return n}function v(t,e){for(var n=[],r=0;r<t.length;r++)n.push(t[r][e]);return n}function k(t,e){for(var n=[],r=t.length,s=0;s<r;s++){n.push([]);for(var i=0;i<r;i++)n[s].push(w(t[s],v(e,i)))}return n}function $(t,e){var n=Math.cos(t),r=Math.sin(t),s=[[n,-r,0],[r,n,0],[0,0,1]],i=k(x(e[0],e[1]),s);return k(i,x(-e[0],-e[1]))}var N=[13,p.midwayBetweenEyes[0]],C=[3,2],E=p.leftEyeLower0,S=[E[0],E[E.length-1]],A=p.rightEyeLower0,R=[A[0],A[A.length-1]],T=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}];function O(t,e,n,r){for(var s=0;s<T.length;s++){var i=T[s],o=i.key,a=i.indices,u=p[""+n+o];if(null==r||r.includes(o))for(var c=0;c<a.length;c++){var l=a[c];t[u[c]]=[e[l][0],e[l][1],(e[l][2]+t[u[c]][2])/2]}}}var I=function(){function t(t,e,n,r,s,i,o){this.regionsOfInterest=[],this.runsWithoutFaceDetector=0,this.boundingBoxDetector=t,this.meshDetector=e,this.irisModel=o,this.meshWidth=n,this.meshHeight=r,this.maxContinuousChecks=s,this.maxFaces=i}return t.prototype.transformRawCoords=function(t,e,n,r){var s,i,o,a,u=this,c=m({startPoint:e.startPoint,endPoint:e.endPoint}),l=[c[0]/this.meshWidth,c[1]/this.meshHeight],h=t.map((function(t){return[l[0]*(t[0]-u.meshWidth/2),l[1]*(t[1]-u.meshHeight/2),t[2]]})),d=$(n,[0,0]),f=h.map((function(t){return function(t,e){return[w(t,e[0]),w(t,e[1])]}(t,d).concat([t[2]])})),p=(i=[[(s=r)[0][0],s[1][0]],[s[0][1],s[1][1]]],o=[s[0][2],s[1][2]],a=[-w(i[0],o),-w(i[1],o)],[i[0].concat(a[0]),i[1].concat(a[1]),[0,0,1]]),y=b({startPoint:e.startPoint,endPoint:e.endPoint}).concat([1]),g=[w(y,p[0]),w(y,p[1])];return f.map((function(t){return[t[0]+g[0],t[1]+g[1],t[2]]}))},t.prototype.getLeftToRightEyeDepthDifference=function(t){return t[S[0]][2]-t[R[0]][2]},t.prototype.getEyeBox=function(t,e,n,s,i){void 0===i&&(i=!1);var o=function(t){var e=b(t),n=m(t),r=Math.max.apply(Math,n)/2;return{startPoint:[e[0]-r,e[1]-r],endPoint:[e[0]+r,e[1]+r],landmarks:t.landmarks}}(y(this.calculateLandmarksBoundingBox([t[n],t[s]]),2.3)),a=m(o),u=r.BHj.cropAndResize(e,[[o.startPoint[1]/this.meshHeight,o.startPoint[0]/this.meshWidth,o.endPoint[1]/this.meshHeight,o.endPoint[0]/this.meshWidth]],[0],[64,64]);return i&&(u=r.BHj.flipLeftRight(u)),{box:o,boxSize:a,crop:u}},t.prototype.getEyeCoords=function(t,e,n,r){void 0===r&&(r=!1);for(var s=[],i=0;i<76;i++){var o=t[3*i],a=t[3*i+1],u=t[3*i+2];s.push([(r?1-o/64:o/64)*n[0]+e.startPoint[0],a/64*n[1]+e.startPoint[1],u])}return{rawCoords:s,iris:s.slice(71)}},t.prototype.getAdjustedIrisCoords=function(t,e,n){var r=t[p[n+"EyeUpper0"][3]][2],s=t[p[n+"EyeLower0"][4]][2],i=(r+s)/2;return e.map((function(t,e){var n=i;return 2===e?n=r:4===e&&(n=s),[t[0],t[1],n]}))},t.prototype.predict=function(t,e){return o(this,void 0,void 0,(function(){var n,s,o,u,c=this;return a(this,(function(a){switch(a.label){case 0:return this.shouldUpdateRegionsOfInterest()?[4,this.boundingBoxDetector.getBoundingBoxes(t,!1,!0)]:[3,2];case 1:return n=a.sent(),s=n.boxes,o=n.scaleFactor,0===s.length?(this.regionsOfInterest=[],[2,null]):(u=s.map((function(t){var e,n,r={startPoint:t.box.startPoint.squeeze().arraySync(),endPoint:t.box.endPoint.squeeze().arraySync()},s=y((n=o,{startPoint:[(e=r).startPoint[0]*n[0],e.startPoint[1]*n[1]],endPoint:[e.endPoint[0]*n[0],e.endPoint[1]*n[1]]}));return i({},s,{landmarks:t.landmarks.arraySync()})})),s.forEach((function(t){null!=t&&null!=t.startPoint&&(t.startEndTensor.dispose(),t.startPoint.dispose(),t.endPoint.dispose())})),this.updateRegionsOfInterest(u),this.runsWithoutFaceDetector=0,[3,3]);case 2:this.runsWithoutFaceDetector++,a.label=3;case 3:return[2,(0,r.lub)((function(){return c.regionsOfInterest.map((function(n,s){var o,a=n.landmarks.length>=468,u=N[0],l=N[1];!1===a&&(u=C[0],l=C[1]),o=function(t,e){var n;return(n=Math.PI/2-Math.atan2(-(e[1]-t[1]),e[0]-t[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}(n.landmarks[u],n.landmarks[l]);var h=b({startPoint:n.startPoint,endPoint:n.endPoint}),d=[h[0]/t.shape[2],h[1]/t.shape[1]],f=t,p=g;0!==o&&(f=r.BHj.rotateWithOffset(t,o,0,d),p=$(-o,h));var m=function(t,e,n){var s=e.shape[1],i=e.shape[2],o=[[t.startPoint[1]/s,t.startPoint[0]/i,t.endPoint[1]/s,t.endPoint[0]/i]];return r.BHj.cropAndResize(e,o,[0],n)}({startPoint:n.startPoint,endPoint:n.endPoint},f,[c.meshHeight,c.meshWidth]).div(255),x=c.meshDetector.predict(m),w=x[1],v=x[2],k=(0,r.XLQ)(v,[-1,3]).arraySync();if(e){var E=c.getEyeBox(k,m,S[0],S[1],!0),A=E.box,T=E.boxSize,I=E.crop,F=c.getEyeBox(k,m,R[0],R[1]),_=F.box,M=F.boxSize,D=F.crop,L=c.irisModel.predict((0,r.zoF)([I,D])).dataSync(),P=L.slice(0,228),V=c.getEyeCoords(P,A,T,!0),z=V.rawCoords,B=V.iris,W=L.slice(228),U=c.getEyeCoords(W,_,M),G=U.rawCoords,j=U.iris,H=c.getLeftToRightEyeDepthDifference(k);Math.abs(H)<30?(O(k,z,"left"),O(k,G,"right")):H<1?O(k,z,"left",["EyeUpper0","EyeLower0"]):O(k,G,"right",["EyeUpper0","EyeLower0"]);var q=c.getAdjustedIrisCoords(k,B,"left"),X=c.getAdjustedIrisCoords(k,j,"right");k=k.concat(q).concat(X)}var J=c.transformRawCoords(k,n,o,p),Y=(0,r.odF)(J),K=y(c.calculateLandmarksBoundingBox(J));return c.regionsOfInterest[s]=i({},K,{landmarks:Y.arraySync()}),{coords:(0,r.odF)(k,[k.length,3]),scaledCoords:Y,box:K,flag:w.squeeze()}}))}))]}}))}))},t.prototype.updateRegionsOfInterest=function(t){for(var e=0;e<t.length;e++){var n=t[e],r=this.regionsOfInterest[e],s=0;if(r&&r.startPoint){var i=n.startPoint,o=i[0],a=i[1],u=n.endPoint,c=u[0],l=u[1],h=r.startPoint,d=h[0],f=h[1],p=r.endPoint,m=p[0],b=p[1],y=Math.max(o,d),g=Math.max(a,f),x=(Math.min(c,m)-y)*(Math.min(l,b)-g);s=x/((c-o)*(l-a)+(m-d)*(b-a)-x)}s<.25&&(this.regionsOfInterest[e]=n)}this.regionsOfInterest=this.regionsOfInterest.slice(0,t.length)},t.prototype.clearRegionOfInterest=function(t){null!=this.regionsOfInterest[t]&&(this.regionsOfInterest=this.regionsOfInterest.slice(0,t).concat(this.regionsOfInterest.slice(t+1)))},t.prototype.shouldUpdateRegionsOfInterest=function(){var t=this.regionsOfInterest.length,e=0===t;return 1===this.maxFaces||e?e:t!==this.maxFaces&&this.runsWithoutFaceDetector>=this.maxContinuousChecks},t.prototype.calculateLandmarksBoundingBox=function(t){var e=t.map((function(t){return t[0]})),n=t.map((function(t){return t[1]}));return{startPoint:[Math.min.apply(Math,e),Math.min.apply(Math,n)],endPoint:[Math.max.apply(Math,e),Math.max.apply(Math,n)]}},t}(),F=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]];function _(t){return o(this,void 0,void 0,(function(){var e,n,r,s,i,o,u,c,l,h,d,f,p,m,b;return a(this,(function(a){switch(a.label){case 0:return e=t.maxContinuousChecks,n=void 0===e?5:e,r=t.detectionConfidence,s=void 0===r?.9:r,i=t.maxFaces,o=void 0===i?10:i,u=t.iouThreshold,c=void 0===u?.3:u,l=t.scoreThreshold,h=void 0===l?.75:l,d=t.shouldLoadIrisModel,f=void 0===d||d,p=t.modelUrl,m=t.irisModelUrl,f?[4,Promise.all([M(o,c,h),D(p),L(m)])]:[3,2];case 1:return b=a.sent(),[3,4];case 2:return[4,Promise.all([M(o,c,h),D(p)])];case 3:b=a.sent(),a.label=4;case 4:return[2,new z(b[0],b[1],n,s,o,f?b[2]:null)]}}))}))}function M(t,e,n){return o(this,void 0,void 0,(function(){return a(this,(function(r){return[2,f({maxFaces:t,iouThreshold:e,scoreThreshold:n})]}))}))}function D(t){return o(this,void 0,void 0,(function(){return a(this,(function(e){return null!=t?[2,(0,s.YL)(t)]:[2,(0,s.YL)("https://tfhub.dev/mediapipe/tfjs-model/facemesh/1/default/1",{fromTFHub:!0})]}))}))}function L(t){return o(this,void 0,void 0,(function(){return a(this,(function(e){return null!=t?[2,(0,s.YL)(t)]:[2,(0,s.YL)("https://tfhub.dev/mediapipe/tfjs-model/iris/1/default/2",{fromTFHub:!0})]}))}))}function P(t,e){if(t.mesh instanceof r.esB){var n=(0,r.lub)((function(){var n=(0,r.RRF)([e-1,0,0]),s=(0,r.RRF)([1,-1,1]);return(0,r.lub)((function(){return[(0,r.zoF)([(0,r.luU)(e-1,t.boundingBox.topLeft.slice(0,1)),t.boundingBox.topLeft.slice(1,1)]),(0,r.zoF)([(0,r.luU)(e-1,t.boundingBox.bottomRight.slice(0,1)),t.boundingBox.bottomRight.slice(1,1)]),(0,r.luU)(n,t.mesh).mul(s),(0,r.luU)(n,t.scaledMesh).mul(s)]}))})),s=n[0],i=n[1],o=n[2],a=n[3];return Object.assign({},t,{boundingBox:{topLeft:s,bottomRight:i},mesh:o,scaledMesh:a})}return Object.assign({},t,{boundingBox:{topLeft:[e-1-t.boundingBox.topLeft[0],t.boundingBox.topLeft[1]],bottomRight:[e-1-t.boundingBox.bottomRight[0],t.boundingBox.bottomRight[1]]},mesh:t.mesh.map((function(t){var n=t.slice(0);return n[0]=e-1-t[0],n})),scaledMesh:t.scaledMesh.map((function(t){var n=t.slice(0);return n[0]=e-1-t[0],n}))})}var V,z=function(){function t(t,e,n,r,s,i){this.kind="MediaPipeFaceMesh",this.pipeline=new I(t,e,192,192,n,s,i),this.detectionConfidence=r}return t.getAnnotations=function(){return p},t.getUVCoords=function(){return F},t.prototype.estimateFaces=function(t){return o(this,void 0,void 0,(function(){var e,n,s,i,u,c,l,h,d,f,m,b,y=this;return a(this,(function(g){switch(g.label){case 0:if(e=t.returnTensors,n=void 0!==e&&e,s=t.flipHorizontal,i=void 0!==s&&s,u=t.predictIrises,c=void 0===u||u,l=t.input,c&&null==this.pipeline.irisModel)throw new Error("The iris model was not loaded as part of facemesh. Please initialize the model with facemesh.load({shouldLoadIrisModel: true}).");return h=function(t){return t instanceof r.esB?[t.shape[0],t.shape[1]]:[t.height,t.width]}(l),d=h[1],f=(0,r.lub)((function(){return l instanceof r.esB||(l=r.Xhn.n(l)),l.toFloat().expandDims(0)})),"webgl"!==(0,r.N_N)()?[3,2]:(b=(0,r.OBj)().get("WEBGL_PACK_DEPTHWISECONV"),(0,r.OBj)().set("WEBGL_PACK_DEPTHWISECONV",!0),[4,this.pipeline.predict(f,c)]);case 1:return m=g.sent(),(0,r.OBj)().set("WEBGL_PACK_DEPTHWISECONV",b),[3,4];case 2:return[4,this.pipeline.predict(f,c)];case 3:m=g.sent(),g.label=4;case 4:return f.dispose(),null!=m&&m.length>0?[2,Promise.all(m.map((function(t,e){return o(y,void 0,void 0,(function(){var s,u,l,h,f,m,b,y,g,x,w,v,k,$,N=this;return a(this,(function(C){switch(C.label){case 0:return s=t.coords,u=t.scaledCoords,l=t.box,h=t.flag,f=[h],n||(f=f.concat([s,u])),[4,Promise.all(f.map((function(t){return o(N,void 0,void 0,(function(){return a(this,(function(e){return[2,t.array()]}))}))})))];case 1:if(m=C.sent(),b=m[0],h.dispose(),b<this.detectionConfidence&&this.pipeline.clearRegionOfInterest(e),n)return y={kind:"MediaPipePredictionTensors",faceInViewConfidence:b,mesh:s,scaledMesh:u,boundingBox:{topLeft:(0,r.RRF)(l.startPoint),bottomRight:(0,r.RRF)(l.endPoint)}},i?[2,P(y,d)]:[2,y];for($ in g=m.slice(1),x=g[0],w=g[1],u.dispose(),s.dispose(),v={kind:"MediaPipePredictionValues",faceInViewConfidence:b,boundingBox:{topLeft:l.startPoint,bottomRight:l.endPoint},mesh:x,scaledMesh:w},i&&(v=P(v,d)),k={},p)(c||!1===$.includes("Iris"))&&(k[$]=p[$].map((function(t){return v.scaledMesh[t]})));return v.annotations=k,[2,v]}}))}))})))]:[2,[]]}}))}))},t}();(V||(V={})).mediapipeFacemesh="mediapipe-facemesh";const B={},W={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function U(t){if(!(t in B)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);if(e.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete B[t]}),!1),1===t)return e.getContext("webgl",W)||e.getContext("experimental-webgl",W);return e.getContext("webgl2",W)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;B[t]=e}const e=B[t];return e.isContextLost()?(delete B[t],U(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),B[t])}var G,j,H;function q(t,e){return[e,t]}function X(t){const e=r.D5U.NA(t),n=Math.ceil(e/4);return r.D5U.YP(n)}function J(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function Y(t,e){const n=t;let s,i,o,a,u,c,l,h,d,f;return 2===(0,r.OBj)().getNumber("WEBGL_VERSION")?(s=n.R32F,i=n.R16F,o=n.RGBA16F,a=n.RGBA32F,u=n.RED,l=4,h=1,d=n.HALF_FLOAT,f=n.FLOAT):(s=t.RGBA,i=t.RGBA,o=t.RGBA,a=n.RGBA,u=t.RGBA,l=4,h=4,d=null!=e?e.HALF_FLOAT_OES:null,f=t.FLOAT),c=t.RGBA,{internalFormatFloat:s,internalFormatHalfFloat:i,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:u,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:h,textureTypeHalfFloat:d,textureTypeFloat:f}}function K(t,e){const n=e();return(0,r.OBj)().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(G||(G={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(j||(j={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(H||(H={}));function Q(t){return!!((0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function Z(t,e){return ut(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}function tt(t,e){const n=ut(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(K(t,(()=>t.shaderSource(n,e))),K(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=et.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const s=+n[1],i=t.split("\n"),o=i.length.toString().length+2,a=i.map(((t,e)=>r.D5U.oj((e+1).toString(),o)+t));let u=0;for(let t=0;t<a.length;t++)u=Math.max(a[t].length,u);const c=a.slice(0,s-1),l=a.slice(s-1,s),h=a.slice(s);console.log(c.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${r.D5U.oj(l[0],u)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const et=/ERROR: [0-9]+:([0-9]+):/g;function nt(t,e){if(K(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function rt(t,e,n,r,s,i,o){const a=t.getAttribLocation(e,n);return-1!==a&&(K(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,r))),K(t,(()=>t.vertexAttribPointer(a,s,t.FLOAT,!1,i,o))),K(t,(()=>t.enableVertexAttribArray(a))),!0)}function st(t,e,n,r){K(t,(()=>function(t,e,n){ct(t,n),K(t,(()=>t.activeTexture(t.TEXTURE0+n))),K(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,r))),K(t,(()=>t.uniform1i(n,r)))}function it(t,e,n){K(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),K(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function ot(t,e){K(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),K(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function at(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function ut(t,e,n){const r=K(t,(()=>e()));if(null==r)throw new Error(n);return r}function ct(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function lt(t,e=2){return r.D5U.NA(t.slice(0,t.length-e))}function ht(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function dt(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[lt(t),...ht(t)]),e}function ft(t){return t%2==0}function pt(t,e){if(t=t.slice(-2),e=e.slice(-2),r.D5U.cO(t,e))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(ft(n)&&ft(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&ft(t[0])&&ft(e[0])}let mt,bt;function yt(t,e){return null!=t.getExtension(e)}function gt(t){try{if(null!=U(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function xt(t){if(0===t)return!1;const e=U(t);if(1!==t){if(yt(e,"EXT_color_buffer_float"))return wt(e);const t="EXT_color_buffer_half_float";if(yt(e,t)){const n=e.getExtension(t);return function(t,e){const n=Y(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r);const s=1,i=1;t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,s,i,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,o),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(o),a}(e,n)}return!1}if(!yt(e,"OES_texture_float"))return!1;if(!yt(e,"WEBGL_color_buffer_float"))return!1;return wt(e)}function wt(t){const e=Y(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),s}function vt(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&r.D5U.hu("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the WebGL backend.`))}))}const kt=(0,r.OBj)();function $t(){let t,e,n,s,i,o,a,u,c,l;return 2===(0,r.OBj)().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",s="in",i="texture",o="outputColor",a="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",s="varying",i="texture2D",o="gl_FragColor",a="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:s,texture2D:i,output:o,defineOutput:a,defineSpecialNaN:u,defineSpecialInf:c,defineRound:l}}function Nt(t,e,n="index"){const s=r.D5U.e3(e);return s.map(((e,r)=>`${`int ${t[r]} = ${n} / ${e}`}; ${r===s.length-1?`int ${t[r+1]} = ${n} - ${t[r]} * ${e}`:`index -= ${t[r]} * ${e}`};`)).join("")}function Ct(t){const e=r.D5U.e3(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}kt.registerFlag("HAS_WEBGL",(()=>kt.getNumber("WEBGL_VERSION")>0)),kt.registerFlag("WEBGL_VERSION",(()=>gt(2)?2:gt(1)?1:0)),kt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),kt.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===kt.get("WEBGL_VERSION"))),kt.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),kt.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),kt.registerFlag("WEBGL_PACK",(()=>kt.getBool("HAS_WEBGL"))),kt.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>kt.getBool("WEBGL_PACK"))),kt.registerFlag("WEBGL_PACK_CLIP",(()=>kt.getBool("WEBGL_PACK"))),kt.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),kt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>kt.getBool("WEBGL_PACK"))),kt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>kt.getBool("WEBGL_PACK"))),kt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>kt.getBool("WEBGL_PACK"))),kt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>kt.getBool("WEBGL_PACK"))),kt.registerFlag("WEBGL_PACK_REDUCE",(()=>kt.getBool("WEBGL_PACK"))),kt.registerFlag("WEBGL_LAZILY_UNPACK",(()=>kt.getBool("WEBGL_PACK"))),kt.registerFlag("WEBGL_CONV_IM2COL",(()=>kt.getBool("WEBGL_PACK"))),kt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==mt){const e=U(t);mt=e.getParameter(e.MAX_TEXTURE_SIZE)}return mt}(kt.getNumber("WEBGL_VERSION")))),kt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==bt){const e=U(t);bt=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,bt)}(kt.getNumber("WEBGL_VERSION")))),kt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=kt.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=U(t);return e=yt(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:yt(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),kt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>kt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!r.C2$.t())),kt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=U(t);if(1===t){if(!yt(e,"OES_texture_float"))return!1}else if(!yt(e,"EXT_color_buffer_float"))return!1;return wt(e)}(kt.getNumber("WEBGL_VERSION")))),kt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!kt.getBool("WEBGL_FORCE_F16_TEXTURES")&&kt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),kt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>xt(kt.getNumber("WEBGL_VERSION")))),kt.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=kt.getNumber("WEBGL_VERSION"))&&null!=U(t).fenceSync;var t})),kt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>kt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),kt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)}));const Et="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class St{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=G.DENSE;const e=X(t),n=$t();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Nt(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class At{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=G.DENSE;const e=X(t),n=$t();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Nt(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class Rt{constructor(t){this.variableNames=["A"],this.outTexUsage=j.DOWNLOAD;const e=$t();this.outputShape=t,this.userCode=`\n      ${Et}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class Tt{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=j.DOWNLOAD;const e=$t();this.outputShape=t,this.userCode=`\n      ${Et}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class Ot{constructor(t,e,n=!1){this.variableNames=["A"];const r=$t(),[s,i]=e;this.outputShape=t;let o="result";n&&(o="floor(result * 255. + 0.5)"),this.userCode=`\n      ${Ct(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${i};\n        int c = imod(flatIndex, ${i});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${o}, 0., 0., 0.);\n      }\n    `}}class It{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=$t(),[s,i]=e;this.outputShape=t;let o="",a="result";n&&(a="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){const a=2*e+n;o+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${t[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${e} < ${t[1]}) {\n              localCoords[1] += ${e};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${i};\n              c = imod(flatIndex, ${i});\n              uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${a}] = values[0];\n              } else if(offset == 1) {\n                result[${a}] = values[1];\n              } else if(offset == 2) {\n                result[${a}] = values[2];\n              } else {\n                result[${a}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${Ct(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${o}\n\n        ${r.output} = ${a};\n      }\n    `}}function Ft(t){const e=$t();return function(t,e){const n=ut(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(K(t,(()=>t.shaderSource(n,e))),K(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function _t(t){return function(t,e){const n=ut(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return K(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),K(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Mt(t){return function(t,e){const n=ut(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return K(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),K(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}function Dt(t,e,n,s,i,o){!function(t,e){const n=(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const a=function(t){return ut(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),u=t.TEXTURE_2D;return K(t,(()=>t.bindTexture(u,a))),K(t,(()=>t.texParameteri(u,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),K(t,(()=>t.texParameteri(u,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),K(t,(()=>t.texParameteri(u,t.TEXTURE_MIN_FILTER,t.NEAREST))),K(t,(()=>t.texParameteri(u,t.TEXTURE_MAG_FILTER,t.NEAREST))),K(t,(()=>t.texImage2D(u,0,s,e,n,0,i,o,null))),K(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),a}function Lt(t){return t.internalFormatFloat}function Pt(t){return t.internalFormatHalfFloat}function Vt(t){return t.downloadTextureFormat}function zt(t){return t.internalFormatPackedFloat}function Bt(t){return t.internalFormatPackedHalfFloat}function Wt(t,e,n,r,s,i,o,a){const u=t,c=new Float32Array(function(t,e){const[n,r]=J(t,e);return n*r*4}(i,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}class Ut{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=(0,r.OBj)().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){B[t]=e}(e,t)):this.gl=U(e);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(1===(0,r.OBj)().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=Z(this.gl,t),yt(this.gl,e))this.textureHalfFloatExtension=Z(this.gl,e);else if((0,r.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),yt(this.gl,s))this.colorBufferHalfFloatExtension=Z(this.gl,s);else if((0,r.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",yt(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!yt(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=_t(this.gl),this.indexBuffer=Mt(this.gl),this.framebuffer=function(t){return ut(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=Y(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,r.OBj)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;K(t,(()=>t.finish())),K(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),K(t,(()=>t.deleteFramebuffer(this.framebuffer))),K(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),K(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),K(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=q(e,n);return Dt(t,s,i,Lt(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=q(e,n);return Dt(t,s,i,Pt(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=q(e,n);return Dt(t,s,i,Vt(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){K(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?K(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):K(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),K(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,s,i){let o,a,u;K(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),s instanceof Uint8Array?(o=new Uint8Array(n*r*4),a=t.UNSIGNED_BYTE,u=t.RGBA):(o=new Float32Array(n*r*4),a=t.FLOAT,u=i.internalFormatPackedFloat),o.set(s),K(t,(()=>t.texImage2D(t.TEXTURE_2D,0,u,n,r,0,t.RGBA,a,o))),K(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=J(e,n);return Dt(t,s,i,Bt(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=J(e,n);return Dt(t,s,i,zt(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(ot(this.gl,this.framebuffer),this.outputTexture=null),K(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,r){const[s,i]=q(e,n),o=new Uint8Array(e*n*4);return K(t,(()=>t.readPixels(0,0,s,i,r.downloadTextureFormat,t.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,r,s,i){return Wt(this.gl,t,0,0,0,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const s=t.createBuffer();K(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,s)));const i=16*e*n;return K(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,i,t.STREAM_READ))),K(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),K(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),s}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if((0,r.OBj)().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(s,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=s}else(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const r=new Float32Array(e*n*4);return K(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r))),r}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=tt(e,t),r=Ft(e),s=function(t){return ut(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return K(e,(()=>e.attachShader(s,r))),K(e,(()=>e.attachShader(s,n))),function(t,e){if(K(t,(()=>t.linkProgram(e))),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,s),this.debug&&nt(e,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function(t,e,n){return K(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),rt(t,e,"clipSpacePos",n,3,20,0)&&rt(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),s}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&K(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&nt(this.gl,this.program),K(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return ut(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),K(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),st(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,s]=J(e,n);this.setOutputMatrixTextureDriver(t,r,s)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&nt(this.gl,this.program),at(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),K(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),K(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Z(this.gl,2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await r.D5U.WD((()=>this.disposed||this.isQueryAvailable(t,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length;++e){if(!t[e]())break}return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||r.D5U.WD((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),it(this.gl,t,this.framebuffer),this.debug&&at(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(it(this.gl,this.outputTexture,this.framebuffer),this.debug&&at(this.gl)):ot(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;it(r,t,this.framebuffer),this.debug&&at(r),this.outputTexture=t,K(r,(()=>r.viewport(0,0,e,n))),K(r,(()=>r.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),K(this.gl,(()=>this.gl.scissor(t,e,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:Gt}=r.Wap;function jt(t,e,n,s){const i=[];t.forEach((t=>{const e=r.D5U.NA(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?i.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(i.push(`uniform sampler2D ${t.name};`),i.push(`uniform int offset${t.name};`))}));const o=i.join("\n"),a=t.map((t=>function(t,e,n=!1){let s="";s+=n?qt(t):Ht(t);const i=t.shapeInfo.logicalShape,o=e.logicalShape;i.length<=o.length&&(s+=n?function(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),i="get"+s+"AtOutCoords",o=t.shapeInfo.logicalShape.length,a=e.logicalShape.length,u=Gt(t.shapeInfo.logicalShape,e.logicalShape),c=ee(a),l=a-o;let h;const d=["x","y","z","w","u","v"];h=0===o?"":a<2&&u.length>=1?"coords = 0;":u.map((t=>`coords.${d[t+l]} = 0;`)).join("\n");let f="";f=a<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${d[e+l]}`)).join(", ");let p="return outputValue;";const m=1===r.D5U.NA(t.shapeInfo.logicalShape),b=1===r.D5U.NA(e.logicalShape);if(1!==o||m||b){if(m&&!b)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const t=o-2,e=o-1;u.indexOf(t)>-1&&u.indexOf(e)>-1?p="return vec4(outputValue.x);":u.indexOf(t)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(e)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${i}() {\n      ${c} coords = getOutputCoords();\n      ${h}\n      vec4 outputValue = get${s}(${f});\n      ${p}\n    }\n  `}(t,e):function(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),i="get"+s+"AtOutCoords",o=e.texShape,a=t.shapeInfo.texShape,u=t.shapeInfo.logicalShape.length,c=e.logicalShape.length;if(!t.shapeInfo.isUniform&&u===c&&null==t.shapeInfo.flatOffset&&r.D5U.cO(a,o))return`\n      float ${i}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=ee(c),h=Gt(t.shapeInfo.logicalShape,e.logicalShape),d=c-u;let f;const p=["x","y","z","w","u","v"];f=0===u?"":c<2&&h.length>=1?"coords = 0;":h.map((t=>`coords.${p[t+d]} = 0;`)).join("\n");let m="";m=c<2&&u>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${p[e+d]}`)).join(", ");return`\n    float ${i}() {\n      ${l} coords = getOutputCoords();\n      ${f}\n      return get${s}(${m});\n    }\n  `}(t,e));return s}(t,e,s))).join("\n"),u=e.texShape,c=$t(),l=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(c);let h,d,f=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Xt}\n    ${Jt}\n    ${Yt}\n  `}(c);e.isPacked?(h=function(t,e){switch(t.length){case 0:return Qt();case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(1===n[0])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `;if(1===n[1])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(r.D5U.cO(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const s=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),s=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),s=r*Math.ceil(t[t.length-2]/2);let i=s,o="",a="b, r, c";for(let e=2;e<t.length-1;e++)i*=t[t.length-e-1],o=`\n      int b${e} = index / ${i};\n      index -= b${e} * ${i};\n    `+o,a=`b${e}, `+a;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${a});\n    }\n  `}(t,e)}}(e.logicalShape,u),d=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(c)):(h=function(t,e){switch(t.length){case 0:return Qt();case 1:return function(t,e){if(1===e[0])return`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `;if(1===e[1])return`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}(0,e);case 2:return function(t,e){if(r.D5U.cO(t,e))return`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `;if(1===t[1])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===t[0])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=Nt(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=Nt(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=Nt(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=Nt(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}(e.logicalShape,u),d=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(c)),s&&(f+=Kt);return[f,l,d,o,h,a,n].join("\n")}function Ht(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,s]=t.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[i,o]=t.shapeInfo.texShape,a=Zt(e);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${i}, ${o}, ${a});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${te(t)}\n      }\n    `;const r=t.shapeInfo.texShape,s=r[0],i=r[1];if(1===i&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const o=Zt(e);if(1===i)return`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(1===s)return`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),i=t.shapeInfo.texShape;if(null!=i&&r.D5U.cO(e,i)){const t=i[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:o,keptDims:a}=r.D5U.bp(e),u=o;if(u.length<e.length){const e=["row","col"];return`\n      ${Ht(ne(t,u))}\n      float ${s}(int row, int col) {\n        return ${s}(${re(e,a)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${te(t)}\n      }\n    `;const c=i[0],l=i[1],h=Zt(n);if(1===l)return`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;if(1===c)return`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${c}, ${l}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),i=e[1]*e[2],o=e[2],{newShape:a,keptDims:u}=r.D5U.bp(e),c=a;if(c.length<e.length){const e=["row","col","depth"];return`\n        ${Ht(ne(t,c))}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${re(e,u)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${o}, 1)));\n        ${te(t)}\n      }\n    `;const l=t.shapeInfo.texShape,h=l[0],d=l[1],f=t.shapeInfo.flatOffset;if(d===i&&null==f)return`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(d===o&&null==f)return`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const p=Zt(n);return`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${o} + depth + ${p};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),i=e[3],o=e[2]*i,a=e[1]*o,{newShape:u,keptDims:c}=r.D5U.bp(e);if(u.length<e.length){const e=["row","col","depth","depth2"];return`\n      ${Ht(ne(t,u))}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${re(e,c)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${a}, ${o}, ${i}, 1)));\n        ${te(t)}\n      }\n    `;const l=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],f=h[1];if(f===a&&null==l)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==l)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const p=Zt(n);return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${a} + col * ${o} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${f}, index + ${p});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),i=e[4],o=e[3]*i,a=e[2]*o,u=e[1]*a,{newShape:c,keptDims:l}=r.D5U.bp(e);if(c.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${Ht(ne(t,c))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${re(e,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${a}, ${o}, ${i})) +\n          depth3;\n        ${te(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,f=d[0],p=d[1];if(p===u&&null==h)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${o}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===i&&null==h)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=Zt(n);return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${a} + depth * ${o} +\n          depth2 * ${i} + depth3 + ${m};\n      vec2 uv = uvFromFlat(${f}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:i,keptDims:o}=r.D5U.bp(e);if(i.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Ht(ne(t,i))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${re(e,o)});\n      }\n    `}const a=e[5],u=e[4]*a,c=e[3]*u,l=e[2]*c,h=e[1]*l;if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${l}, ${c}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${te(t)}\n      }\n    `;const d=t.shapeInfo.flatOffset,f=t.shapeInfo.texShape,p=f[0],m=f[1];if(m===h&&null==d)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${c}, ${u}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===a&&null==d)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const b=Zt(n);return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${l} + depth * ${c} +\n          depth2 * ${u} + depth3 * ${a} + depth4 + ${b};\n      vec2 uv = uvFromFlat(${p}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function qt(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=$t();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],i=$t();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${i.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),i=t.shapeInfo.texShape,o=i[0],a=i[1],u=$t();if(null!=i&&r.D5U.cO(e,i))return`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${o}.0);\n\n        return ${u.texture2D}(${n}, uv);\n      }\n    `;const c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=Math.ceil(e[1]/2);return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${l}, ${c[0]}, ${c[1]}, row, col);\n      return ${u.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===e[0]){const n=[1,2],s=["b","row","col"];return`\n        ${qt(ne(t,e.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${re(s,n)});\n        }\n      `}const o=i[0],a=i[1],u=Math.ceil(e[2]/2),c=u*Math.ceil(e[1]/2),l=$t();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${o}, ${a}, ${c}, ${u}, b, row, col);\n      return ${l.texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t.shapeInfo.texShape,o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],a=o[0],u=o[1],c=Math.ceil(e[n-1]/2);let l=c*Math.ceil(e[n-2]/2),h="int b, int row, int col",d=`b * ${l} + (row / 2) * ${c} + (col / 2)`;for(let t=2;t<n-1;t++)h=`int b${t}, `+h,l*=e[n-t-1],d=`b${t} * ${l} + `+d;const f=$t();return`\n    vec4 ${s}(${h}) {\n      int index = ${d};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${a});\n      return ${f.texture2D}(${r}, uv);\n    }\n  `}(t)}}const Xt="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Jt="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Yt="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Kt="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Qt(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function Zt(t){return`offset${t}`}function te(t){const e=t.name,n=r.D5U.NA(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function ee(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function ne(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function re(t,e){return e.map((e=>t[e])).join(", ")}function se(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const s=t.logicalShape,i=e[n],o=i.shape;if(!r.D5U.cO(s,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${o} must match`);if(t.isUniform&&i.isUniform)return;const a=t.texShape,u=i.isUniform?null:i.texData.texShape;if(!r.D5U.cO(a,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${u} must match`)}))}function ie(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&r.D5U.hu("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the CPU backend.`))}))}function oe(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const ae={kernelName:r.SYM,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;ie(e,"abs");let s=new Float32Array(r.D5U.NA(e.shape));return s=oe(n.data.get(e.dataId).values),n.makeOutput(s,e.shape,"float32")}};function ue(t){return(e,n,s,i,o)=>{const a=r.Wap.assertAndGetBroadcastShape(e,n),u=a.length,c=r.D5U.e3(a),l=r.D5U.NA(a),h=r.D5U.WP(o,l),d=e.length,f=n.length,p=r.D5U.e3(e),m=r.D5U.e3(n),b=r.Wap.getBroadcastDims(e,a),y=r.Wap.getBroadcastDims(n,a);if(b.length+y.length===0)for(let e=0;e<h.length;++e)h[e]=t(s[e%s.length],i[e%i.length]);else for(let e=0;e<h.length;++e){const n=r.D5U.NE(e,u,c),o=n.slice(-d);b.forEach((t=>o[t]=0));const a=r.D5U.qy(o,d,p),l=n.slice(-f);y.forEach((t=>l[t]=0));const g=r.D5U.qy(l,f,m);h[e]=t(s[a],i[g])}return[h,a]}}function ce(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,a=n.makeTensorInfo(r.shape,"complex64");return n.data.get(a.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",i),imag:n.makeTensorInfo(s.shape,"float32",o)},a}const le={kernelName:r.Zz9,backendName:"cpu",kernelFunc:ce};function he(t,e,n="float32"){if("complex64"===n){return ce({inputs:{real:he(t,e,"float32"),imag:he(t,e,"float32")},backend:t})}const s=r.D5U.wT(r.D5U.NA(e),n);return t.makeTensorInfo(e,n,s)}function de(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const fe={kernelName:r.iJz,backendName:"cpu",kernelFunc:de};function pe(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.real,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const me={kernelName:r.xJR,backendName:"cpu",kernelFunc:pe};function be(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{dtype:o}=s;if("complex64"===o){if("complex64"===i.dtype)return de({inputs:{x:i},backend:n});const t=he(n,i.shape,i.dtype),e=be({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),r=ce({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),r}if("complex64"===i.dtype){const t=pe({inputs:{input:i},backend:n}),e=be({inputs:{x:t},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(t),e}if(!r.D5U.QB(i.dtype,o)){const t=de({inputs:{x:i},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:o}}if("int32"===o){const t=n.data.get(i.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(i.shape,"int32",e)}if("bool"===o){const t=n.data.get(i.dataId).values,e=r.D5U.Os([0],i.dtype),[s,o]=ue(((t,e)=>t!==e?1:0))(i.shape,[],t,e,"bool");return n.makeTensorInfo(o,"bool",s)}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}const ye={kernelName:r.RFZ,backendName:"cpu",kernelFunc:be};function ge(t,e,n,r){return null==n?({inputs:n,backend:s})=>{const{a:i,b:o}=n,a=s;ie([i,o],t);const u=a.data.get(i.dataId).values,c=a.data.get(o.dataId).values,l=r||i.dtype,[h,d]=e(i.shape,o.shape,u,c,l);return a.makeTensorInfo(d,l,h)}:({inputs:t,backend:s})=>{const{a:i,b:o}=t,a=s;if("complex64"===i.dtype||"complex64"===o.dtype){const t=be({inputs:{x:i},backend:a,attrs:{dtype:"complex64"}}),e=a.data.get(t.dataId),r=e.complexTensorInfos.real,s=e.complexTensorInfos.imag,u=a.data.get(r.dataId).values,c=a.data.get(s.dataId).values,l=be({inputs:{x:o},backend:a,attrs:{dtype:"complex64"}}),h=a.data.get(l.dataId),d=h.complexTensorInfos.real,f=h.complexTensorInfos.imag,p=a.data.get(d.dataId).values,m=a.data.get(f.dataId).values,[b,y,g]=n(i.shape,o.shape,u,c,p,m),x=a.makeTensorInfo(g,"float32",b),w=a.makeTensorInfo(g,"float32",y),v=ce({inputs:{real:x,imag:w},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(l),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(w),v}{const t=a.data.get(i.dataId).values,n=a.data.get(o.dataId).values,s=r||i.dtype,[u,c]=e(i.shape,o.shape,t,n,s);return a.makeTensorInfo(c,s,u)}}}function xe(t){return(e,n,s,i,o,a)=>{const u=r.Wap.assertAndGetBroadcastShape(e,n),c=r.D5U.NA(u),l=u.length,h=r.D5U.e3(u),d=r.D5U.WP("float32",c),f=r.D5U.WP("float32",c),p=r.Wap.getBroadcastDims(e,u),m=r.Wap.getBroadcastDims(n,u),b=r.Wap.mergeRealAndImagArrays(s,i),y=r.Wap.mergeRealAndImagArrays(o,a),g=e.length,x=r.D5U.e3(e),w=n.length,v=r.D5U.e3(n);if(p.length+m.length===0)for(let e=0;e<d.length;e++){const n=e%b.length,r=e%y.length,s=t(b[2*n],b[2*n+1],y[2*r],y[2*r+1]);d[e]=s.real,f[e]=s.imag}else for(let e=0;e<d.length;e++){const n=r.D5U.NE(e,l,h),s=n.slice(-g);p.forEach((t=>s[t]=0));const i=r.D5U.qy(s,g,x),o=n.slice(-w);m.forEach((t=>o[t]=0));const a=r.D5U.qy(o,w,v),u=t(b[2*i],b[2*i+1],y[2*a],y[2*a+1]);d[e]=u.real,f[e]=u.imag}return[d,f,u]}}const we=ue(((t,e)=>t+e)),ve=xe(((t,e,n,r)=>({real:t+n,imag:e+r}))),ke=ge(r.mm_,we,ve),$e={kernelName:r.mm_,backendName:"cpu",kernelFunc:ke};function Ne(t,e,n,s,i){const o=r.D5U.NA(s),a=r.D5U.wT(i,n);for(let n=0;n<t.length;n++){const r=t[n];if(r<0)throw new Error("Input x must be non-negative!");r>=i||(a[r]+=o>0?e[n]:1)}return a}function Ce(t,e,n,s=!1){const i=t.shape[0],o=t.shape[1],a=(0,r.f3b)([i,n],e.dtype);for(let r=0;r<i;r++)for(let i=0;i<o;i++){const o=t.get(r,i);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(s?a.set(1,r,o):e.size>0?a.set(a.get(r,o)+e.get(r,i),r,o):a.set(a.get(r,o)+1,r,o))}return a}function Ee(t){return(e,n,s)=>{const i=r.D5U.WP(n,e.length);for(let n=0;n<e.length;++n)i[n]=t(e[n],s);return i}}function Se(t,e,n){return({inputs:s,attrs:i,backend:o})=>{const{x:a}=s;if(ie(a,t),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=o,c=u.data.get(a.dataId).values,l=r.D5U.NA(a.shape),h=n||a.dtype,d=r.D5U.rQ(h,l);for(let t=0;t<l;++t)d[t]=e(c[t],i);return u.makeTensorInfo(a.shape,h,d)}}function Ae(t,e,n){return({inputs:r,attrs:s,backend:i})=>{const{x:o}=r;if(ie(o,t),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const a=i,u=a.data.get(o.dataId).values,c=n||o.dtype,l=e(u,c,s);return a.makeTensorInfo(o.shape,c,l)}}const Re=Ee((t=>Math.ceil(t))),Te=Ae(r.gJX,Re),Oe={kernelName:r.gJX,backendName:"cpu",kernelFunc:Te};function Ie(t,e,n,s){const i=r.D5U.rQ(n,r.D5U.NA(e));if(s&&"string"!==n){let e=0;t.forEach((t=>{const n=r.D5U.NA(t.shape);i.set(t.vals,e),e+=n}))}else{let s=0;t.forEach((t=>{const o="string"===n?r.Wap.fromUint8ToStringArray(t.vals):t.vals;let a=0;for(let n=0;n<t.shape[0];++n){const r=n*e[1]+s;for(let e=0;e<t.shape[1];++e)i[r+e]=o[a++]}s+=t.shape[1]}))}return i}const Fe=Ee((t=>Math.exp(t))),_e=Ae(r.NEP,Fe),Me={kernelName:r.NEP,backendName:"cpu",kernelFunc:_e},De=Ee((t=>Math.expm1(t))),Le=Ae(r.Y0y,De),Pe={kernelName:r.Y0y,backendName:"cpu",kernelFunc:Le},Ve=Ee((t=>Math.floor(t))),ze=Ae(r.OR,Ve),Be={kernelName:r.OR,backendName:"cpu",kernelFunc:ze};function We(t,e,n){const s=(0,r.f3b)(n,t.dtype);for(let n=0;n<s.size;++n){const r=s.indexToLoc(n).slice(),i=r[0],o=r[2],a=e.locToIndex([i,o]);r[2]=e.values[a];const u=t.locToIndex(r);s.values[n]=t.values[u]}return s}const Ue=ue(((t,e)=>t>e?1:0)),Ge=ge(r.iZT,Ue,null,"bool"),je={kernelName:r.iZT,backendName:"cpu",kernelFunc:Ge},He=ue(((t,e)=>t<e?1:0)),qe=ge(r.vtC,He,null,"bool"),Xe={kernelName:r.vtC,backendName:"cpu",kernelFunc:qe};function Je(t,e,n){const s=(e-t)/(n-1),i=r.D5U.wT(n,"float32");i[0]=t;for(let t=1;t<i.length;t++)i[t]=i[t-1]+s;return i}const Ye=Ee((t=>Math.log(t))),Ke=Ae(r.ZbH,Ye),Qe={kernelName:r.ZbH,backendName:"cpu",kernelFunc:Ke};function Ze(t,e,n,s){const i=r.D5U.WP(s,r.D5U.NA(n));for(let n=0;n<i.length;++n){const r=n*e;let s=t[r];for(let n=0;n<e;++n){const e=t[r+n];e>s&&(s=e)}i[n]=s}return i}const tn=ue(((t,e)=>Math.max(t,e))),en=ge(r.BMI,tn),nn={kernelName:r.BMI,backendName:"cpu",kernelFunc:en},rn=ue(((t,e)=>Math.min(t,e))),sn=ge(r.q8u,rn),on={kernelName:r.q8u,backendName:"cpu",kernelFunc:sn},an=ue(((t,e)=>t*e)),un=xe(((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n}))),cn=ge(r.wYn,an,un),ln={kernelName:r.wYn,backendName:"cpu",kernelFunc:cn};function hn(t,e,n){const s=r.D5U.hr(-1,n);return an([],e,s,t,n)}const dn={kernelName:r.kuV,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;ie(r,"neg");const s=n.data.get(r.dataId).values,[i,o]=hn(s,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,i)}},fn=ue(((t,e)=>t!==e?1:0)),pn=ge(r.yQU,fn,null,"bool"),mn={kernelName:r.yQU,backendName:"cpu",kernelFunc:pn};function bn(t,e,n,s,i){const o=e.length,a=r.D5U.NA(e),u=r.D5U.e3(e),c=r.D5U.e3(i),l=r.D5U.WP(n,r.D5U.NA(i));for(let e=0;e<a;++e){const n=r.D5U.NE(e,o,u),i=new Array(n.length);for(let t=0;t<i.length;t++)i[t]=n[s[t]];l[r.D5U.qy(i,o,c)]=t[e]}return l}function yn(t){const{inputs:e,attrs:n,backend:r}=t,{x:s}=e,{perm:i}=n;ie(s,"transpose");const o=s.shape.length,a=new Array(o);for(let t=0;t<a.length;t++)a[t]=s.shape[i[t]];const u=bn(r.data.get(s.dataId).values,s.shape,s.dtype,i,a);return{dataId:r.write(u,a,s.dtype),shape:a,dtype:s.dtype}}const gn={kernelName:r.G3Y,backendName:"cpu",kernelFunc:yn};function xn(t,e,n,s){const[i,o]=r.Wap.computeOutAndReduceShapes(t,s),a=(0,r.x8V)(e,"int32"),u=r.D5U.wT(r.D5U.NA(i),a),c=r.D5U.NA(o);for(let t=0;t<u.length;++t){const e=t*c;let r=1;for(let t=0;t<c;++t)r*=n[e+t];u[t]=r}return{outVals:u,outShape:i,outDtype:a}}const wn={kernelName:r.DlI,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{axis:o,keepDims:a}=s;ie(i,"prod");const u=i.shape.length,c=r.D5U.EC(o,i.shape),l=r.Wap.getAxesPermutation(c,u);let h=c,d=i;const f=[];null!=l&&(d=yn({inputs:{x:i},backend:n,attrs:{perm:l}}),f.push(d),h=r.Wap.getInnerMostAxes(h.length,u));const p=n.data.get(d.dataId).values,{outVals:m,outShape:b,outDtype:y}=xn(d.shape,d.dtype,p,h);let g=b;return a&&(g=r.Wap.expandShapeToKeepDim(b,c)),f.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(g,y,m)}};function vn(t,e,n,s){if(t===e||t<e&&n<0||e<t&&n>1)return r.D5U.wT(0,s);const i=Math.abs(Math.ceil((e-t)/n)),o=r.D5U.wT(i,s);e<t&&1===n&&(n=-1),o[0]=t;for(let t=1;t<o.length;t++)o[t]=o[t-1]+n;return o}const kn=Ee((t=>1/Math.sqrt(t))),$n=Ae(r.bV0,kn),Nn={kernelName:r.bV0,backendName:"cpu",kernelFunc:$n};function Cn(t,e,n,s,i){const o=r.kuN.isSliceContinous(s,e,n),a=r.D5U.NA(n),u=r.D5U.e3(s);if(o){const n=r.kuN.computeFlatOffset(e,u);return"string"===i?t.slice(n,n+a):t.subarray(n,n+a)}const c="string"===i?r.Wap.fromUint8ToStringArray(t):t,l=(0,r.f3b)(s,i,c),h=(0,r.f3b)(n,i);for(let t=0;t<h.size;++t){const n=h.indexToLoc(t),r=n.map(((t,n)=>t+e[n]));h.set(l.get(...r),...n)}return"string"===i?r.Wap.fromStringArrayToUint8(h.values):h.values}function En(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{begin:o,size:a}=s;ie(i,"slice");const[u,c]=r.kuN.parseSliceParams(i,o,a);r.kuN.assertParamsValid(i,u,c);const l=Cn(n.data.get(i.dataId).values,u,c,i.shape,i.dtype);return n.makeTensorInfo(c,i.dtype,l)}const Sn={kernelName:r.p2w,backendName:"cpu",kernelFunc:En},An=ue(((t,e)=>{const n=t-e;return n*n})),Rn=ge(r._tC,An),Tn={kernelName:r._tC,backendName:"cpu",kernelFunc:Rn};function On(t,e,n,s){const i=(0,r.f3b)(t,e.dtype);for(let t=0;t<i.size;t++){const r=i.indexToLoc(t),o=new Array(r.length);for(let t=0;t<o.length;t++)o[t]=r[t]*n[t]+s[t];i.set(e.get(...o),...r)}return i}const In=ue(((t,e)=>t-e)),Fn=xe(((t,e,n,r)=>({real:t-n,imag:e-r}))),_n=ge(r.Tr8,In,Fn),Mn={kernelName:r.Tr8,backendName:"cpu",kernelFunc:_n};function Dn(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const s=(0,r.f3b)(n,t.dtype);for(let e=0;e<s.values.length;++e){const n=s.indexToLoc(e),r=new Array(t.rank);for(let e=0;e<r.length;e++)r[e]=n[e]%t.shape[e];const i=t.locToIndex(r);s.values[e]=t.values[i]}return s}function Ln(t,e,n,s,i){const o=e[e.length-1],[a,u]=[t.length/o,o],c=r.D5U.WP(n,a*s),l=r.D5U.WP("int32",a*s);for(let e=0;e<a;e++){const n=e*u,r=t.subarray(n,n+u),i=[];for(let t=0;t<r.length;t++)i.push({value:r[t],index:t});i.sort(((t,e)=>e.value-t.value));const o=e*s,a=c.subarray(o,o+s),h=l.subarray(o,o+s);for(let t=0;t<s;t++)a[t]=i[t].value,h[t]=i[t].index}const h=e.slice();return h[h.length-1]=s,[(0,r.f3b)(h,n,c),(0,r.f3b)(h,"int32",l)]}function Pn(t,e,n,s){const i=r.D5U.EC(e,n)[0],o=[1,n[0],1];for(let t=0;t<i;t++)o[0]*=n[t];o[1]=n[i];for(let t=i+1;t<n.length;t++)o[2]*=n[t];const a={},u=new Int32Array(n[i]),c=new r.YDk(o,s,t),l=[],h=1===o[0]&&1===o[2];for(let e=0;e<n[i];e++){let n;if(h)n=t[e].toString();else{const t=[];for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)t.push(c.get(n,e,r));n=t.join(",")}if(void 0!==a[n])u[e]=a[n];else{const t=Object.keys(a).length;a[n]=t,u[e]=t,l.push(e)}}const d=o.slice();d[1]=Object.keys(a).length;const f=new r.YDk(d,s);l.forEach(((t,e)=>{for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)f.set(c.get(n,t,r),n,e,r)}));const p=n.slice();return p[i]=d[1],{outputValues:f.values,outputShape:p,indices:u}}const{addImpl:Vn,bincountImpl:zn,bincountReduceImpl:Bn,ceilImpl:Wn,concatImpl:Un,expImpl:Gn,expm1Impl:jn,floorImpl:Hn,gatherV2Impl:qn,greaterImpl:Xn,lessImpl:Jn,linSpaceImpl:Yn,logImpl:Kn,maxImpl:Qn,maximumImpl:Zn,minimumImpl:tr,multiplyImpl:er,negImpl:nr,prodImpl:rr,rangeImpl:sr,rsqrtImpl:ir,simpleAbsImpl:or,sliceImpl:ar,stridedSliceImpl:ur,subImpl:cr,tileImpl:lr,topKImpl:hr,transposeImpl:dr,uniqueImpl:fr}=t;function pr(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function mr(t,e){return 1===e?[t]:pr(t,e)}class br{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=mr("rc",e),r=ee(e),s=function(t,e,n){if(1===t)return`rc > ${e[0]}`;let r="";for(let s=t-2;s<t;s++)r+=`${n[s]} >= ${e[s]}`,s<t-1&&(r+="||");return r}(e,t,n),i=function(t,e,n,r){if(1===t)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),o=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let i=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<t;n++)i=`${e[e.length-1-n]},`+i;n.push(i)}return n}(n,e);if(1===n)return`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`;return`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${i}\n\n            setOutput(vec4(${o}));\n          }\n        }\n      `}}}class yr{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${Nt(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${Ct(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class gr{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=wr(e,n),s=vr(t,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const i=xr(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const t=this.freeTextures[s].shift();return this.usedTextures[s].push(t),t}let o;return r===H.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===H.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===H.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===H.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===H.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(o),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),o}releaseTexture(t,e,n,s){if(null==this.freeTextures)return;const i=wr(n,s),o=vr(e,i,s);o in this.freeTextures||(this.freeTextures[o]=[]);const a=xr(e,i,this.gpgpu.gl,this.gpgpu.textureConfig,s),u=(0,r.OBj)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=a):(this.freeTextures[o].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const c=this.usedTextures[o],l=c.indexOf(t);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function xr(t,e,n,r,s){const i=function(t,e){switch(t){case H.PACKED_2X2_FLOAT32:return zt(e);case H.PACKED_2X2_FLOAT16:return Bt(e);case H.UNPACKED_FLOAT32:return Lt(e);case H.UNPACKED_FLOAT16:return Pt(e);case H.PACKED_4X1_UNSIGNED_BYTE:return Vt(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,r);let o;if(s){const[e,n]=J(t[0],t[1]);o=e*n}else{const[e,n]=q(t[0],t[1]);o=e*n}return o*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}(n,i)}function wr(t,e){if(t===j.UPLOAD)return H.PACKED_2X2_FLOAT32;if(t===j.RENDER||null==t)return function(t){return(0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?H.PACKED_2X2_FLOAT32:H.UNPACKED_FLOAT32:t?H.PACKED_2X2_FLOAT16:H.UNPACKED_FLOAT16}(e);if(t===j.DOWNLOAD||t===j.PIXELS)return H.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function vr(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class kr{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const $r="return abs(x);";const Nr="return x;";class Cr{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Er{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=mr("rc",e),r=ee(e),s=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),i=n.slice(-2),o=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}const Sr=r.GDt.ZA,Ar={};class Rr extends r.Zuw{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!(0,r.OBj)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=U((0,r.OBj)().getNumber("WEBGL_VERSION"));this.binaryCache=((e=(0,r.OBj)().getNumber("WEBGL_VERSION"))in Ar||(Ar[e]={}),Ar[e]),this.gpgpu=new Ut(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new gr(this.gpgpu),this.numMBBeforeWarning=null==(0,r.OBj)().global.screen?1024:(0,r.OBj)().global.screen.height*(0,r.OBj)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new r.JLz(this,(0,r.SRH)())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if(((0,r.OBj)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,r.OBj)().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={};return this.texData.set(s,{shape:e,dtype:n,values:t,usage:j.UPLOAD,refCount:1,complexParentRefCount:0}),s}incRef(t){this.texData.get(t).refCount++}decRef(t){if(this.texData.has(t)){this.texData.get(t).refCount--}}move(t,e,n,s){if((0,r.OBj)().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:s,values:e,usage:j.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}readSync(t){const e=this.texData.get(t),{values:n,dtype:s,complexTensorInfos:i,slice:o,shape:a,isPacked:u}=e;if(null!=o){let e;e=u?new Cr(a,Nr):new kr(a,Nr);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===s)return n;const c=null!=this.activeTimers;let l,h;if(c&&(l=r.D5U.zO()),"complex64"===s){const t=this.readSync(i.real.dataId),e=this.readSync(i.imag.dataId);h=r.Wap.mergeRealAndImagArrays(t,e)}else h=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=r.D5U.zO()-l),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:s,slice:i,dtype:o,complexTensorInfos:a,isPacked:u}=e;if(null!=i){let e;e=u?new Cr(s,Nr):new kr(s,Nr);const n=this.runWebGLProgram(e,[{dataId:t,shape:s,dtype:o}],o),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if(!(0,r.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,r.OBj)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,h=null;if("complex64"!==o&&(0,r.OBj)().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(t);const e=this.texData.get(c.dataId);h=this.gpgpu.createBufferFromTexture(e.texture,...X(s))}if(this.pendingRead.set(t,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){const t=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),e=t[0],n=t[1];l=r.Wap.mergeRealAndImagArrays(e,n)}else if(null==h)l=this.getValuesFromTexture(t);else{const t=r.D5U.NA(s);l=this.gpgpu.downloadFloat32MatrixFromBuffer(h,t)}null!=c&&this.disposeIntermediateTensorInfo(c);const d=this.convertAndCacheOnCPU(t,l),f=this.pendingRead.get(t);return this.pendingRead.delete(t),f.forEach((t=>t(d))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),d}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>r.D5U.v5(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,r.f3b)(t.shape,t.dtype,n)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!Q(n)){if((0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:s}=this.texData.get(t),i=r.D5U.NA(e);if((0,r.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...X(e)).subarray(0,i);return this.disposeIntermediateTensorInfo(n),s}const o=(0,r.OBj)().getBool("WEBGL_PACK")&&!0===s,a=o?dt(e):e,u=o?new Tt(a):new Rt(a),c=this.runWebGLProgram(u,[{shape:a,dtype:n,dataId:t}],"float32"),l=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(c),h}async time(t){const e=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,t();const i=r.D5U.xH(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),o=r.D5U.xH(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,s&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if((0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(i);a.kernelMs=r.D5U.Sm(t),a.getExtraProfileInfo=()=>t.map(((t,e)=>({name:o[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:r.D5U.zO(),endMs:null}}endTimer(t){return(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=r.D5U.zO(),t)}async getQueryTime(t){if((0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;if(this.texData.get(t).complexParentRefCount>0)return void this.texData.get(t).refCount--;this.releaseGPUData(t);const{complexTensorInfos:e}=this.texData.get(t);null!=e&&(this.texData.get(e.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.real),this.texData.get(e.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.imag)),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:s,isPacked:i,slice:o}=this.texData.get(t),a=o&&o.origDataId||t,u=this.dataRefCount.get(a);u>1?this.dataRefCount.set(a,u-1):(this.dataRefCount.delete(a),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,s,i)));const c=this.texData.get(t);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return(0,r.OBj)().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=(0,r.SRH)().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return(0,r.OBj)().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every((t=>null==this.texData.get(t.dataId).texture&&r.D5U.NA(t.shape)<e))}getGPGPUContext(){return this.gpgpu}where(t){r.Wap.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return Sr(t.shape,e)}packedUnaryOp(t,e,n){const r=new Cr(t.shape,e);return this.compileAndRun(r,[t],n)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=or(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if((0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,$r,t.dtype);const e=new kr(t.shape,$r);return this.compileAndRun(e,[t])}makeTensorInfo(t,e,n){let s;if("string"===e&&null!=n&&n.length>0&&r.D5U.HD(n[0])){const i=n.map((t=>r.D5U.YW(t)));s=this.write(i,t,e)}else s=this.write(n,t,e);return this.texData.get(s).usage=null,{dataId:s,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:s}=this.makeTensorInfo(t,e,n);return(0,r.SRH)().makeTensorFromDataId(s,t,e,this)}unpackTensor(t){const e=new Er(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new br(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[lt(t.shape),...ht(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},s=[lt(e),...ht(e)],i=new yr(s,n),o=this.runWebGLProgram(i,[r],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:s}=e,i=dt(r);let o;o=n?new At(i):new St(i);return{dtype:s,shape:r,dataId:this.runWebGLProgram(o,[{shape:i,dtype:s,dataId:t}],s,null,!0).dataId}}runWebGLProgram(t,e,n,s,i=!1){const o=this.makeTensorInfo(t.outputShape,n),a=this.texData.get(o.dataId);if(t.packedOutput&&(a.isPacked=!0),t.outPackingScheme===G.DENSE){const e=X(t.outputShape);a.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(a.usage=t.outTexUsage),0===r.D5U.NA(o.shape))return a.values=r.D5U.WP(o.dtype,0),o;const u=[],c=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&r.D5U.NA(e.shape)<=(0,r.OBj)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),u.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!pt(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),u.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const l={shape:o.shape,texData:a,isUniform:!1},h=function(t,e,n){let r="";e.concat(n).forEach((t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${n}_${e}`}));const s=t.userCode;let i=t.constructor.name;return i+="_"+r+"_"+s,i}(t,c,l),d=this.getAndSaveBinary(h,(()=>function(t,e,n,s){const i=e.userCode,o=n.map(((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}})),a=o.map((t=>t.shapeInfo)),u={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},c=jt(o,u,i,e.packedInputs),l=t.createProgram(c);let h=null;const d=t.getUniformLocation(l,"NAN",!1);1===(0,r.OBj)().getNumber("WEBGL_VERSION")&&(h=t.getUniformLocation(l,"INFINITY",!1));const f={};for(let n=0;n<e.variableNames.length;n++){const r=e.variableNames[n],s=!1;f[r]=t.getUniformLocation(l,r,s),f[`offset${r}`]=t.getUniformLocation(l,`offset${r}`,s)}return{program:e,source:c,webGLProgram:l,uniformLocations:f,inShapeInfos:a,outShapeInfo:u,infLoc:h,nanLoc:d}}(this.gpgpu,t,c,l))),f=null!=this.activeTimers;let p;if(f&&(p=this.startTimer()),function(t,e,n,s,i){se(e.inShapeInfos,n),se([e.outShapeInfo],[s]);const o=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?t.setOutputPackedMatrixTexture(o,a[0],a[1]):t.setOutputMatrixTexture(o,a[0],a[1]),t.setProgram(e.webGLProgram),1===(0,r.OBj)().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,s)=>{const i=e.program.variableNames[s],o=e.uniformLocations[i],a=e.uniformLocations[`offset${i}`];if(null!=o)if(n.isUniform)if(r.D5U.NA(n.shape)<2)t.gl.uniform1f(o,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(o,e)}else null!=n.texData.slice&&null!=a&&t.gl.uniform1i(a,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,o,s)})),null!=i&&i(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,d,c,l,s),u.forEach((t=>this.disposeIntermediateTensorInfo(t))),f&&(p=this.endTimer(p),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(p)})),!(0,r.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&a.isPacked&&!1===i){const t=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),t}return o}compileAndRun(t,e,n,s,i=!1){n=n||e[0].dtype;const o=this.runWebGLProgram(t,e,n,s,i);return(0,r.SRH)().makeTensorFromDataId(o.dataId,o.shape,o.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!(0,r.OBj)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,r.lub)((()=>{if(!(0,r.OBj)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=(0,r.OBj)().getBool("DEBUG");(0,r.OBj)().set("DEBUG",!1);const e=this.abs((0,r.iD$)(1e-8)).dataSync()[0];if((0,r.OBj)().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:s,values:i,texture:o,usage:a,isPacked:u}=e;if(null!=o)return;const c=null!=this.activeTimers;let l;c&&(l=r.D5U.zO());let h=e.texShape;if(null==h&&(h=function(t,e=!1){let n=(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?r.D5U.nY(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=r.D5U.bp(t);t=e.newShape}let s=r.D5U.NA(t);if(t.length<=1&&s<=n)return[1,s];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=lt(t);let n=2,i=2;return t.length&&([n,i]=ht(t)),s=e*(n/2)*(i/2),r.D5U.YP(s).map((t=>2*t))}return r.D5U.YP(s)}(n,u),e.texShape=h),null!=i){const t=dt(n);let o,a=h[1],d=h[0];const f=i instanceof Uint8Array;u?([a,d]=J(h[0],h[1]),o=new It(t,[d,a],f)):o=new Ot(t,[d,a],f);const p=this.makeTensorInfo([d,a],s);this.texData.get(p.dataId).usage=f?j.PIXELS:j.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),a,d,i);const m=!0,b=this.runWebGLProgram(o,[p],s,null,m),y=this.texData.get(b.dataId);e.texture=y.texture,e.texShape=y.texShape,e.isPacked=y.isPacked,e.usage=y.usage,this.disposeIntermediateTensorInfo(p),this.texData.delete(b.dataId),e.values=null,c&&(this.uploadWaitMs+=r.D5U.zO()-l)}else{const t=this.acquireTexture(h,a,s,u);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*r.D5U.bT(e)}}r.C2$.j()&&(0,r.jqO)("webgl",(()=>new Rr),2);class Tr{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=r.Wap.assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class Or{constructor(t,e,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r.Wap.assertAndGetBroadcastShape(e,n);const i=this.outputShape.length;let o="";if(s)if(0===i||1===r.D5U.NA(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(o=`\n          ${ee(i)} coords = getOutputCoords();\n        `,1===i)o+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=mr("coords",i);o+=`\n            bool nextRowOutOfBounds =\n              (${t[i-2]} + 1) >= ${this.outputShape[i-2]};\n            bool nextColOutOfBounds =\n              (${t[i-1]} + 1) >= ${this.outputShape[i-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${o}\n\n        setOutput(result);\n      }\n    `}}function Ir(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Fr={kernelName:r.iJz,backendName:"webgl",kernelFunc:Ir};function _r(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,i=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(i.dataId),a=Ir({inputs:{x:r},backend:n});n.texData.get(a.dataId).complexParentRefCount++;const u=Ir({inputs:{x:s},backend:n});return n.texData.get(u.dataId).complexParentRefCount++,o.complexTensorInfos={real:a,imag:u},i}const Mr={kernelName:r.Zz9,backendName:"webgl",kernelFunc:_r},Dr="return (a < 0.) ? b * a : a;",Lr="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Pr={kernelName:r.J$2,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{alpha:o}=s,a=n.makeTensorInfo([],"float32",r.D5U.hr(o,"float32")),u=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Or(Lr,i.shape,a.shape):new Tr(Dr,i.shape,a.shape),c=n.runWebGLProgram(u,[i,a],i.dtype);return n.disposeIntermediateTensorInfo(a),c}},Vr="return (a < 0.) ? b * a : a;",zr="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Br={kernelName:r.o0g,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s,alpha:i}=e,o=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Or(zr,s.shape,i.shape):new Tr(Vr,s.shape,i.shape);return n.runWebGLProgram(o,[s,i],s.dtype)}};function Wr({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:s}){return({inputs:i,backend:o})=>{const{x:a}=i,u=o,c=s||a.dtype;if(u.shouldExecuteOnCPU([a])&&null!=n){const t=u.texData.get(a.dataId),e=n(t.values,c);return u.makeTensorInfo(a.shape,c,e)}let l;return l=(0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=e?new Cr(a.shape,e):new kr(a.shape,t),u.runWebGLProgram(l,[a],c)}}function Ur({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:i,dtype:o}){return({inputs:a,backend:u})=>{const{a:c,b:l}=a,h=u;if(s&&"complex64"===c.dtype){const e=h.texData.get(c.dataId),n=h.texData.get(l.dataId),[s,i]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,s]=e,i={dataId:n.dataId,dtype:n.dtype,shape:c.shape},o={dataId:s.dataId,dtype:s.dtype,shape:l.shape},a=new Tr(t,c.shape,l.shape);return h.runWebGLProgram(a,[i,o],(0,r.x8V)(n.dtype,s.dtype))})),o=_r({inputs:{real:s,imag:i},backend:h});return h.disposeIntermediateTensorInfo(s),h.disposeIntermediateTensorInfo(i),o}const d=o||(0,r.x8V)(c.dtype,l.dtype);if(h.shouldExecuteOnCPU([c,l])&&null!=i){const t=h.texData.get(c.dataId),e=h.texData.get(l.dataId),[n,r]=i(c.shape,l.shape,t.values,e.values,d),s=h.makeTensorInfo(r,d);return h.texData.get(s.dataId).values=n,s}let f;return f=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new Or(e,c.shape,l.shape,n):new Tr(t,c.shape,l.shape),h.runWebGLProgram(f,[c,l],d)}}function Gr(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===t)return e?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===t)return e?zr:Vr;if("leakyrelu"===t)return e?Lr:Dr;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class jr{constructor(t,e,n,r=!1,s=!1,i=!1,o=null,a=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const c=r?t[1]:t[2],l=Math.ceil(c/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",b="";o&&(m=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,b="result = activation(result);");const y=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let g="rc.x",x="rc.x";t[0]<e[0]?g=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(x=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${g};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${f[0]} * ${p[0]});\n          result += (${f[1]} * ${p[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${b}\n\n        setOutput(result);\n      }\n    `}}const Hr="return areal * breal - aimag * bimag;",qr="return areal * bimag + aimag * breal;";class Xr{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=r.Wap.assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const Jr="return a * b;";function Yr(t){const{inputs:e,backend:n}=t,{a:s,b:i}=e,o=r.Wap.upcastType(s.dtype,i.dtype);if("complex64"===s.dtype){const t=n.texData.get(s.dataId),e=n.texData.get(i.dataId),r=new Xr(Hr,s.shape,i.shape),o=new Xr(qr,s.shape,i.shape),a=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:i.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:i.shape}],u=n.runWebGLProgram(r,a,"float32"),c=n.runWebGLProgram(o,a,"float32"),l=_r({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([s,i])){const t=n.texData.get(s.dataId),e=n.texData.get(i.dataId),[r,a]=er(s.shape,i.shape,t.values,e.values,o),u=n.makeTensorInfo(a,o);return n.texData.get(u.dataId).values=r,u}let a;return a=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Or(Jr,s.shape,i.shape):new Tr(Jr,s.shape,i.shape),n.runWebGLProgram(a,[s,i],o)}const Kr={kernelName:r.wYn,backendName:"webgl",kernelFunc:Yr};function Qr(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{shape:o}=s,a=n,u=r.D5U.NA(i.shape),c=r.D5U.JZ(o,u),l=r.D5U.NA(c);r.D5U.hu(u===l,(()=>`The new shape (${c}) has ${l} elements and the old shape (${i.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`));const h=a.texData.get(i.dataId);return!h.isPacked||pt(i.shape,c)||null!==h.texture&&pt(h.shape,c)?(a.incRef(i.dataId),{dataId:i.dataId,shape:c,dtype:i.dtype}):function(t,e,n){const r=[lt(t.shape),...ht(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},i=[lt(e),...ht(e)],o=new yr(i,r),a=n.runWebGLProgram(o,[s],t.dtype,null,!0);return{dataId:a.dataId,shape:e,dtype:a.dtype}}(i,c,a)}const Zr={kernelName:r.HZH,backendName:"webgl",kernelFunc:Qr};class ts{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:i,outSize:o}=t;this.outputShape=[s,o];const a=4*Math.floor(n/4),u=n%4;let c="sumValue += dot(values, ones);";if(null!=e){const t=1/e;c=`sumValue += dot(values * ${r.D5U.GN(t)?t.toPrecision(2):t}, ones);`}let l="";i%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}class es{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=t;this.outputShape=[r,i];let o="0.0",a="";"prod"===e?o="1.0":"min"===e?(o="1.0 / 1e-20",a="min"):"max"===e&&(o="-1.0 / 1e-20",a="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${a}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===e?(o="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(o="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let f="";s%n>0&&(f=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${f}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===l}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===l}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}function ns(t,e,n,s){const i=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],s=r.Wap.computeOptimalWindowSize(n);e.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return e}(t.shape);let o=t;for(let r=0;r<i.length;r++){const{inSize:a,windowSize:u,outSize:c}=i[r];let l,h;l="mean"===n?0===r?new ts({windowSize:u,inSize:a,batchSize:t.shape[0],outSize:c},a):new ts({windowSize:u,inSize:a,batchSize:t.shape[0],outSize:c}):new es({windowSize:u,inSize:a,batchSize:t.shape[0],outSize:c},n),h=o,o=s.runWebGLProgram(l,[o],e),h.dataId!==t.dataId&&s.disposeIntermediateTensorInfo(h)}return o}class rs{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;const r=ee(this.rank),s=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let e=0;e<t.length;e++)r[t[e]]=n[e];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class ss{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=ee(this.rank),s=pr("rc",this.rank),i=new Array(this.rank);for(let t=0;t<e.length;t++)i[e[t]]=s[t];const o=`vec2(${i.slice(-2).join()})`,a=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${a}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${a}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function is(t,e,n){const s=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ss(t.shape,e):new rs(t.shape,e);return n.runWebGLProgram(s,[t],t.dtype)}function os(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{axis:o,keepDims:a}=s;return function(t,e,n,s){const i=e,o=t.shape.length,a=r.D5U.EC(i,t.shape);let u=a;const c=r.Wap.getAxesPermutation(u,o),l=null!=c;let h=t;l&&(h=is(t,c,s),u=r.Wap.getInnerMostAxes(u.length,o)),r.Wap.assertAxesAreInnerMostDims("sum",u,o);const[d,f]=r.Wap.computeOutAndReduceShapes(h.shape,u);let p=d;n&&(p=r.Wap.expandShapeToKeepDim(d,a));const m=r.D5U.NA(f),b=Qr({inputs:{x:h},attrs:{shape:[r.D5U.NA(t.shape)/m,m]},backend:s}),y=ns(b,(0,r.z4k)(t.dtype),"sum",s),g=Qr({inputs:{x:y},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(y),l&&s.disposeIntermediateTensorInfo(h),g}(i,o,a,n)}const as={kernelName:r.GBy,backendName:"webgl",kernelFunc:os};function us(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{perm:i}=r,o=n,a=s.shape.length,u=new Array(a);for(let t=0;t<u.length;t++)u[t]=s.shape[i[t]];let c;if(o.shouldExecuteOnCPU([s])){const t=o.texData.get(s.dataId).values,e=dr(t,s.shape,s.dtype,i,u);c=o.makeTensorInfo(u,s.dtype);o.texData.get(c.dataId).values=e}else c=is(s,i,o);return c}const cs={kernelName:r.G3Y,backendName:"webgl",kernelFunc:us};function ls({a:t,b:e,transposeA:n,transposeB:s,backend:i,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:u=0,activation:c=null}){const l=t.shape.length,h=e.shape.length,d=n?t.shape[l-2]:t.shape[l-1],f=s?e.shape[h-1]:e.shape[h-2],p=n?t.shape[l-1]:t.shape[l-2],m=s?e.shape[h-2]:e.shape[h-1],b=t.shape.slice(0,-2),y=e.shape.slice(0,-2),g=r.D5U.NA(b),x=r.D5U.NA(y),w=g===x||1===g||1===x;r.D5U.hu(l>=2&&h>=2&&w,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${b}) and (${y}).`));const v=(g>x?t.shape.slice(0,-2):e.shape.slice(0,-2)).concat([p,m]);r.D5U.hu(d===f,(()=>`Error in matMul: inner shapes (${d}) and (${f}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${s} must match.`));const k=n?[g,d,p]:[g,p,d],$=s?[x,m,f]:[x,f,m],N=Qr({inputs:{x:t},backend:i,attrs:{shape:k}}),C=Qr({inputs:{x:e},backend:i,attrs:{shape:$}}),E=[N,C],S=Math.max(g,x),A=n?N.shape[1]:N.shape[2],R=null!=o,T=null!=a,O="leakyrelu"===c,I=null!=c?Gr(c,!0):null;let F;if((1===p||1===m)&&A>1e3&&!1===(R||T||O||null!=I)){let t=N,e=C;n&&(t=us({inputs:{x:N},backend:i,attrs:{perm:[0,2,1]}}),E.push(t)),s&&(e=us({inputs:{x:C},backend:i,attrs:{perm:[0,2,1]}}),E.push(e));const r=1===m;let o=t;1!==m&&(o=Qr({inputs:{x:t},backend:i,attrs:{shape:[S,A,1]}}),E.push(o));const a=1===m?2:1;let u=e;r&&(u=Qr({inputs:{x:e},backend:i,attrs:{shape:[S,1,A]}}),E.push(u));const c=Yr({inputs:{a:o,b:u},backend:i});F=os({inputs:{x:c},backend:i,attrs:{axis:a,keepDims:!0}}),E.push(c)}else{const c=(0,r.x8V)(t.dtype,e.dtype),l=new jr(k,$,[S,p,m],n,s,R,I,T,O),h=[N,C];if(null!=o&&h.push(o),T&&h.push(a),O){const t=i.makeTensorInfo([],"float32",r.D5U.hr(u,"float32"));h.push(t),E.push(t)}F=i.runWebGLProgram(l,h,c)}const _=Qr({inputs:{x:F},backend:i,attrs:{shape:v}});E.push(F);for(const t of E)i.disposeIntermediateTensorInfo(t);return _}const hs={kernelName:r.usg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i,bias:o,preluActivationWeights:a}=e,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:h}=r;return ls({a:s,b:i,transposeA:u,transposeB:c,backend:n,bias:o,preluActivationWeights:a,leakyreluAlpha:h,activation:l})}},ds="return abs(x);";const fs={kernelName:r.SYM,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const t=n.texData.get(s.dataId),e=or(t.values);return n.makeTensorInfo(s.shape,s.dtype,e)}let i;return i=(0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Cr(s.shape,ds):new kr(s.shape,ds),n.runWebGLProgram(i,[s],s.dtype)}},ps=Wr({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),ms={kernelName:r.VGw,backendName:"webgl",kernelFunc:ps},bs=Wr({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),ys={kernelName:r.SpW,backendName:"webgl",kernelFunc:bs},gs="return a + b;",xs=Ur({opSnippet:gs,packedOpSnippet:gs,supportsComplex:!0,cpuKernelImpl:Vn}),ws={kernelName:r.mm_,backendName:"webgl",kernelFunc:xs};class vs{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class ks{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const $s={kernelName:r.Xze,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:s}=e,i=n;if(1===i.length)return Ir({inputs:{x:i[0]},backend:s});if(i.length>(0,r.OBj)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(i.length/2),n=t({inputs:i.slice(0,e),backend:s}),r=t({inputs:i.slice(e),backend:s});return t({inputs:[n,r],backend:s})}const o=i.map((t=>t.dtype)).reduce(((t,e)=>(0,r.x8V)(t,e))),a=i.map((t=>t.shape)),u=(0,r.OBj)().getBool("WEBGL_PACK")?new ks(i[0].shape,a):new vs(i[0].shape,a);return s.runWebGLProgram(u,i,o)}};const Ns={kernelName:r.oT6,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{axis:o,keepDims:a}=s,u=i.shape.length,c=r.D5U.EC(o,i.shape);let l=c;const h=r.Wap.getAxesPermutation(l,u);let d=i;null!=h&&(d=us({inputs:{x:i},backend:n,attrs:{perm:h}}),l=r.Wap.getInnerMostAxes(l.length,u)),r.Wap.assertAxesAreInnerMostDims("all",l,u);const[f,p]=r.Wap.computeOutAndReduceShapes(d.shape,l),m=Qr({inputs:{x:d},backend:n,attrs:{shape:[-1,r.D5U.NA(p)]}}),b=ns(m,m.dtype,"all",n);let y;if(a){y=Qr({inputs:{x:b},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(f,c)}})}else y=Qr({inputs:{x:b},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=h&&n.disposeIntermediateTensorInfo(d),y}};const Cs={kernelName:r.IKK,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{axis:o,keepDims:a}=s,u=i.shape.length,c=r.D5U.EC(o,i.shape);let l=c;const h=r.Wap.getAxesPermutation(l,u);let d=i;null!=h&&(d=us({inputs:{x:i},backend:n,attrs:{perm:h}}),l=r.Wap.getInnerMostAxes(l.length,u)),r.Wap.assertAxesAreInnerMostDims("any",l,u);const[f,p]=r.Wap.computeOutAndReduceShapes(d.shape,l),m=Qr({inputs:{x:d},backend:n,attrs:{shape:[-1,r.D5U.NA(p)]}}),b=ns(m,m.dtype,"any",n);let y;if(a){y=Qr({inputs:{x:b},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(f,c)}})}else y=Qr({inputs:{x:b},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=h&&n.disposeIntermediateTensorInfo(d),y}};class Es{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:i}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];const o="max"===e?">":"<",a=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${a};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Ss{constructor(t,e,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r.D5U.hu(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const i=t[t.length-1],o=Math.ceil(i/e);this.outputShape=t.slice(0,-1),o>1&&this.outputShape.push(o),s||this.variableNames.push("bestIndicesA");const a=this.outputShape,u=a.length,c=ee(u),l=mr("coords",u);let h,d;if(1===o){d=u+1;const t=ee(d);h=`\n        ${t} sourceLocR = ${t}(${l.join()}, 0);\n        ++${l[u-1]};\n        ${t} sourceLocG = ${t}(${l.join()}, 0);\n        ++${l[u-2]};\n        ${t} sourceLocA = ${t}(${l.join()}, 0);\n        --${l[u-1]};\n        ${t} sourceLocB = ${t}(${l.join()}, 0);\n        --${l[u-2]};`}else d=u,h=`\n        ${c} sourceLocR = coords;\n        ++${l[u-1]};\n        ${c} sourceLocG = coords;\n        ++${l[u-2]};\n        ${c} sourceLocA = coords;\n        --${l[u-1]};\n        ${c} sourceLocB = coords;\n        --${l[u-2]};`;const f=["x","y","z","w","u","v"].slice(0,d),p="."+f[d-1],m=f.map((t=>"int "+t)),b=mr("sourceLocR",d-1).concat("inIdx.r"),y=mr("sourceLocG",d-1).concat("inIdx.g"),g=mr("sourceLocB",d-1).concat("inIdx.b"),x=mr("sourceLocA",d-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",v=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${b.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${g.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,$=s?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${f.join()}),\n                                          vec2(${f.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${f.join()}),\n                               vec2(${f.slice(-2).join()}));\n      }\n      ${$}\n      void main() {\n        ${c} coords = getOutputCoords();\n        bool hasNextCol = ${l[u-1]} < ${a[u-1]-1};\n        bool hasNextRow = ${l[u-2]} < ${a[u-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function As(t,e,n,s=null){let i=e.shape[0],o=e.shape[1];null!=s&&(i=s.shape[0],o=s.shape[1]);const a=r.Wap.computeOptimalWindowSize(o),u={windowSize:a,inSize:o,batchSize:i,outSize:Math.ceil(o/a)},c=new Es(u,n,null==s),l=[e];null!=s&&l.push(s);const h=t.runWebGLProgram(c,l,"int32");if(1===h.shape[1])return h;const d=As(t,e,n,h);return t.disposeIntermediateTensorInfo(h),d}function Rs(t,e,n,s=null){const i=null!=s?s.shape:e.shape,o=i[i.length-1],a=r.Wap.computeOptimalWindowSize(o),u=new Ss(i,a,n,null==s),c=null==s?[e]:[e,s],l=t.runWebGLProgram(u,c,"int32");if(l.shape.length===e.shape.length){const r=Rs(t,e,n,l);return t.disposeIntermediateTensorInfo(l),r}return l}function Ts(t,e,n,s){const i=[n];if(r.Wap.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),i,e.shape.length),!(0,r.OBj)().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],[o,a]=r.Wap.computeOutAndReduceShapes(e.shape,i),u=r.D5U.NA(a),c=Qr({inputs:{x:e},backend:t,attrs:{shape:[-1,u]}});n.push(c);const l=As(t,c,s);n.push(l);const h=Qr({inputs:{x:l},backend:t,attrs:{shape:o}});return n.forEach((e=>t.disposeIntermediateTensorInfo(e))),h}return Rs(t,e,s)}const Os={kernelName:r.sJF,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{axis:o}=s;let a=r.D5U.EC(o,i.shape);const u=r.Wap.getAxesPermutation(a,i.shape.length);let c=i;const l=[];null!=u&&(c=us({inputs:{x:i},backend:n,attrs:{perm:u}}),l.push(c),a=r.Wap.getInnerMostAxes(a.length,c.shape.length)),r.Wap.assertAxesAreInnerMostDims("argMax",[a[0]],c.shape.length);const h=Ts(n,c,a[0],"max");return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}};const Is={kernelName:r.aJk,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{axis:o}=s;let a=r.D5U.EC(o,i.shape);const u=r.Wap.getAxesPermutation(a,i.shape.length);let c=i;const l=[];null!=u&&(c=us({inputs:{x:i},backend:n,attrs:{perm:u}}),l.push(c),a=r.Wap.getInnerMostAxes(a.length,c.shape.length)),r.Wap.assertAxesAreInnerMostDims("argMin",[a[0]],c.shape.length);const h=Ts(n,c,a[0],"min");return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}},Fs=Wr({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),_s={kernelName:r.M2y,backendName:"webgl",kernelFunc:Fs},Ms=Wr({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Ds={kernelName:r.qw7,backendName:"webgl",kernelFunc:Ms},Ls=Wr({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Ps={kernelName:r.jMg,backendName:"webgl",kernelFunc:Ls},Vs=Ur({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),zs={kernelName:r.QCc,backendName:"webgl",kernelFunc:Vs},Bs=Wr({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Ws={kernelName:r.Oyi,backendName:"webgl",kernelFunc:Bs};class Us{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,o=t.strideHeight,a=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;const p="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,b=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y="0.0";if(p||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${a});\n        const ivec2 pads = ivec2(${d}, ${f});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:b:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let g=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(g="avgValue / count");const x=4*Math.floor(i/4),w=i%4,v=`\n      if (${p}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${a});\n      const ivec2 pads = ivec2(${d}, ${f});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${g});\n      }\n    `}}class Gs{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,o=t.strideDepth,a=t.strideHeight,u=t.strideWidth,c=t.dilationDepth,l=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,f=t.effectiveFilterHeight,p=t.effectiveFilterWidth,m=t.padInfo.front,b=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const g="avg"===e;let x="0.0";if(g||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${a}, ${u});\n        const ivec3 pads = ivec3(${m}, ${b}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${f};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${p};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${p} +\n                      wR * ${p} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / count");const v=4*Math.floor(i/4),k=i%4,$=`\n      if (${g}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${a}, ${u});\n      const ivec3 pads = ivec3(${m}, ${b}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${f};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${$}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${$}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${$}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${$}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const js={kernelName:r.JhU,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e;vt(i,"avgPool");const{filterSize:o,strides:a,pad:u,dimRoundingMode:c}=s;r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const l=r.Wap.computePool2DInfo(i.shape,o,a,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&r.D5U.cO(l.inShape,l.outShape))return Ir({inputs:{x:i},backend:n});const h=new Us(l,"avg",!1);return n.runWebGLProgram(h,[i],"float32")}};const Hs={kernelName:r._k9,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{filterSize:o,strides:a,pad:u,dimRoundingMode:c,dataFormat:l}=s,h=r.Wap.computePool3DInfo(i.shape,o,a,[1,1,1],u,c,l),d=new Gs(h,"avg",!1);return n.runWebGLProgram(d,[i],"float32")}};class qs{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i=t.dilationHeight,o=t.dilationWidth,a=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=a-1-t.padInfo.top,l=u-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${l});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Xs{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,i=t.strideHeight,o=t.strideWidth,a=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,f=l-1-t.padInfo.front,p=h-1-t.padInfo.top,m=d-1-t.padInfo.left,b=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${f}, ${p}, ${m});\n      const float avgMultiplier = float(${b});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n            wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Js={kernelName:r.IMb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:i,input:o}=e,a=o,{filterSize:u,strides:c,pad:l,dimRoundingMode:h}=s,d=r.Wap.computePool3DInfo(a.shape,u,c,[1,1,1],l,h),f=new Xs(d);return n.runWebGLProgram(f,[i],a.dtype)}};const Ys={kernelName:r.ROF,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:i,input:o}=e,a=o;vt([i,o],"avgPoolGrad");const{filterSize:u,strides:c,pad:l}=s,h=r.Wap.computePool2DInfo(a.shape,u,c,1,l),d=new qs(h);return n.runWebGLProgram(d,[i],a.dtype)}};const Ks={kernelName:r.XLW,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i}=e,{transposeA:o,transposeB:a}=r;return ls({a:s,b:i,transposeA:o,transposeB:a,backend:n})}};class Qs{constructor(t,e,n,s,i,o){this.outputShape=[],this.variableNames=["x","mean","variance"],r.Wap.assertAndGetBroadcastShape(t,e),r.Wap.assertAndGetBroadcastShape(t,n);let a="0.0";null!=s&&(r.Wap.assertAndGetBroadcastShape(t,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="1.0";null!=i&&(r.Wap.assertAndGetBroadcastShape(t,i),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${o}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Zs{constructor(t,e,n,s,i,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],r.Wap.assertAndGetBroadcastShape(t,e),r.Wap.assertAndGetBroadcastShape(t,n);let a="vec4(0.0)";null!=s&&(r.Wap.assertAndGetBroadcastShape(t,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=i&&(r.Wap.assertAndGetBroadcastShape(t,i),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${o}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const ti={kernelName:r.sHE,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,mean:i,variance:o,offset:a,scale:u}=t;r.D5U.hu(i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),r.D5U.hu(null==a||i.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),r.D5U.hu(null==u||i.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:c}=n;null==c&&(c=.001);const l=[s,i,o];let h=null;null!=a&&(h=a.shape,l.push(a));let d=null;null!=u&&(d=u.shape,l.push(u));const f=(0,r.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Zs(s.shape,i.shape,o.shape,h,d,c):new Qs(s.shape,i.shape,o.shape,h,d,c);return e.runWebGLProgram(f,l,l[0].dtype)}};class ei{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=ee(this.rank),n=`uniform int start[${this.rank}];`,r=function(t){if(1===t)return"sourceLoc";if(t<=6)return ni.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let s;s=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${ni[e]} = start[${e}] + coords.${ni[e]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const ni=["x","y","z","w","u","v"];class ri{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=ee(this.rank),n=mr("coords",this.rank),r=mr("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${s})`,o=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,a=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${o}\n        ${a}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}function si(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{begin:o,size:a}=s,[u,c]=r.kuN.parseSliceParams(i,o,a);if(r.kuN.assertParamsValid(i,u,c),0===r.D5U.NA(c))return n.makeTensorInfo(c,i.dtype,[]);if(n.shouldExecuteOnCPU([i])||"string"===i.dtype){const t=n.texData.get(i.dataId),e=ar(t.values,u,c,i.shape,i.dtype);return n.makeTensorInfo(c,i.dtype,e)}const{isPacked:l}=n.texData.get(i.dataId),h=r.kuN.isSliceContinous(i.shape,u,c);if(l||!h){const t=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ri(c):new ei(c),e=t.getCustomSetupFunc(u);return n.runWebGLProgram(t,[i],i.dtype,e)}return n.uploadToGPU(i.dataId),function(t,e,n,s){const i=s.texData.get(t.dataId),o=s.makeTensorInfo(n,t.dtype),a=s.texData.get(o.dataId);Object.assign(a,i),a.shape=n,a.dtype=t.dtype;let u=r.kuN.computeFlatOffset(e,r.D5U.e3(t.shape));i.slice&&(u+=i.slice.flatOffset),a.slice={flatOffset:u,origDataId:i.slice&&i.slice.origDataId||t.dataId};const c=s.dataRefCount.get(a.slice.origDataId)||1;return s.dataRefCount.set(a.slice.origDataId,c+1),o}(i,u,c,n)}const ii={kernelName:r.p2w,backendName:"webgl",kernelFunc:si},oi={kernelName:r.zws,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{blockShape:o,crops:a}=s;r.D5U.hu(i.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const u=o.reduce(((t,e)=>t*e)),c=r.Wap.getReshaped(i.shape,o,u),l=r.Wap.getPermuted(c.length,o.length),h=r.Wap.getReshapedPermuted(i.shape,o,u),d=r.Wap.getSliceBeginCoords(a,o.length),f=r.Wap.getSliceSize(h,a,o.length),p=[],m=Qr({inputs:{x:i},backend:n,attrs:{shape:c}}),b=us({inputs:{x:m},backend:n,attrs:{perm:l}}),y=Qr({inputs:{x:b},backend:n,attrs:{shape:h}}),g=si({inputs:{x:y},backend:n,attrs:{begin:d,size:f}});return p.push(m),p.push(b),p.push(y),p.forEach((t=>n.disposeIntermediateTensorInfo(t))),g}};const ai={kernelName:r.zvY,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:o}=r,a=n.readSync(s.dataId),u=n.readSync(i.dataId),c=zn(a,u,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,c)}},ui=Ur({opSnippet:"return float(a != b);",dtype:"bool"}),ci={kernelName:r.yQU,backendName:"webgl",kernelFunc:ui};function li(t){const{inputs:e,backend:n}=t,{input:r}=e;return Ir({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const hi={kernelName:r.xJR,backendName:"webgl",kernelFunc:li};const di={kernelName:r.RFZ,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:s,attrs:i}=e,{x:o}=n,{dtype:a}=i;if("complex64"===a){if("complex64"===o.dtype)return Ir({inputs:{x:o},backend:s});const e=r.lls(o.shape),n=t({inputs:{x:o},backend:s,attrs:{dtype:"float32"}}),i=_r({inputs:{real:n,imag:e},backend:s});return e.dispose(),s.disposeIntermediateTensorInfo(n),i}if("complex64"===o.dtype){const e=li({inputs:{input:o},backend:s}),n=t({inputs:{x:e},backend:s,attrs:{dtype:a}});return s.disposeIntermediateTensorInfo(e),n}if(!r.D5U.QB(o.dtype,a)){const t=Ir({inputs:{x:o},backend:s});return{dataId:t.dataId,shape:t.shape,dtype:a}}if("int32"===a)return function(t,e){const n=new kr(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(o,s);if("bool"===a){const t=s.makeTensorInfo([],"bool",r.D5U.WP("bool",1)),e=ui({inputs:{a:o,b:t},backend:s});return s.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${a}`)}},fi="return ceil(x);",pi=Wr({opSnippet:fi,packedOpSnippet:fi,cpuKernelImpl:Wn}),mi={kernelName:r.gJX,backendName:"webgl",kernelFunc:pi};class bi{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class yi{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}const gi={kernelName:r.xnO,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{clipValueMin:o,clipValueMax:a}=s;let u;u=(0,r.OBj)().getBool("WEBGL_PACK_CLIP")?new yi(i.shape):new bi(i.shape);const c=u.getCustomSetupFunc(o,a);return n.runWebGLProgram(u,[i],i.dtype,c)}};class xi{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function wi(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const vi={kernelName:r.yj2,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,s=n.texData.get(r.dataId),i=new xi(r.shape),o=[wi(r,s.complexTensorInfos.real),wi(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(i,o,o[0].dtype)}};class ki{constructor(t){this.outputShape=[],this.outputShape=r.Wap.computeOutShape(t,1),this.variableNames=t.map(((t,e)=>`T${e}`));const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const r=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${r}));`)}const s=e.length,i=e[e.length-1];n.push(`else setOutput(getT${s}(yR, yC-${i}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class $i{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=r.Wap.computeOutShape(t,e);const n=this.outputShape,s=n.length,i=ee(s),o=mr("coords",s),a=["x","y","z","w","u","v"].slice(0,s);this.variableNames=t.map(((t,e)=>`T${e}`));const u=new Array(t.length-1);u[0]=t[0][e];for(let n=1;n<u.length;n++)u[n]=u[n-1]+t[n][e];const c=a[e],l=a.slice(-2),h=a.join();let d=`if (${c} < ${u[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${l.join()}));\n        }`;for(let t=1;t<u.length;t++){const e=u[t-1];d+=`\n        if (${c} < ${u[t]}  && ${c} >= ${u[t-1]}) {\n          return getChannel(\n            getT${t}(${Ni(a,c,e)}),\n            vec2(${Ni(l,c,e)}));\n        }`}const f=u.length,p=u[u.length-1];d+=`\n        return getChannel(\n          getT${f}(${Ni(a,c,p)}),\n          vec2(${Ni(l,c,p)}));`,this.userCode=`\n      float getValue(${a.map((t=>"int "+t))}) {\n        ${d}\n      }\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${o}), 0., 0., 0.);\n\n        ${o[s-1]} = ${o[s-1]} + 1;\n        if (${o[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${o});\n        }\n\n        ${o[s-2]} = ${o[s-2]} + 1;\n        if (${o[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${o});\n        }\n\n        ${o[s-1]} = ${o[s-1]} - 1;\n        if (${o[s-2]} < ${n[s-2]} &&\n            ${o[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${o});\n        }\n        setOutput(result);\n      }\n    `}}function Ni(t,e,n){const r=t.indexOf(e);return t.map(((t,e)=>e===r?`${t} - ${n}`:t)).join()}function Ci(t){const{inputs:e,backend:n}=t,{input:r}=e;return Ir({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const Ei={kernelName:r.J_u,backendName:"webgl",kernelFunc:Ci};function Si(t,e,n){const s=t[0].dtype;if("complex64"===s){const r=t.map((t=>li({inputs:{input:t},backend:n}))),s=t.map((t=>Ci({inputs:{input:t},backend:n}))),i=Si(r,e,n),o=Si(s,e,n),a=_r({inputs:{real:i,imag:o},backend:n});return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),s.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),a}if("string"===s){const{tensors2D:i,outShape:o}=Ai(t,e,n),a=i.map((t=>({vals:n.readSync(t.dataId),shape:t.shape}))),u=1===i[0].shape[0],c=Un(a,o,s,u),l=r.Wap.computeOutShape(t.map((t=>t.shape)),e),h=n.makeTensorInfo(l,s,c);return i.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}if(t.length>(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(t.length/2),s=Si(t.slice(0,r),e,n),i=Si(t.slice(r),e,n),o=Si([s,i],e,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}if((0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const r=new $i(t.map((t=>t.shape)),e);return n.runWebGLProgram(r,t,s)}const{tensors2D:i,outShape:o}=Ai(t,e,n),a=new ki(i.map((t=>t.shape))),u=n.runWebGLProgram(a,i,s);i.forEach((t=>n.disposeIntermediateTensorInfo(t)));const c=Qr({inputs:{x:u},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(u),c}function Ai(t,e,n){const s=r.Wap.computeOutShape(t.map((t=>t.shape)),e);return{tensors2D:t.map((t=>Qr({inputs:{x:t},attrs:{shape:[-1,r.D5U.NA(t.shape.slice(e))]},backend:n}))),outShape:s}}function Ri(t){const{inputs:e,backend:n,attrs:s}=t,{axis:i}=s,o=r.D5U.EC(i,e[0].shape)[0],a=r.Wap.computeOutShape(e.map((t=>t.shape)),o);if(0===r.D5U.NA(a))return n.makeTensorInfo(a,e[0].dtype,[]);const u=e.filter((t=>r.D5U.NA(t.shape)>0));if(1===u.length)return Ir({inputs:{x:u[0]},backend:n});const c=u.map((t=>t.shape));return r.Wap.assertParamsConsistent(c,o),Si(u,o,n)}const Ti={kernelName:r.Eh3,backendName:"webgl",kernelFunc:Ri};class Oi{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.padInfo.top,o=t.padInfo.left,a=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,l=t.dilationWidth,h=t.filterHeight,d=t.filterWidth,f=4*Math.floor(t.inChannels/4),p=t.inChannels%4,m="channelsLast"===t.dataFormat,b=m?1:2,y=m?2:3,g=m?3:1;let x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${a}, ${u});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${g}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${b}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${f}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===p}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${f}) *\n                    getW(wR, wC, ${f}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${f}, xR, xC) *\n                    getW(wR, wC, ${f}, d2);\n              }\n\n            } else if (${2===p}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${f}, d2),\n                getW(wR, wC, ${f} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${f}),\n                  getX(batch, xR, xC, ${f} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${f}, xR, xC),\n                  getX(batch, ${f} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===p}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${f}, d2),\n                getW(wR, wC, ${f} + 1, d2),\n                getW(wR, wC, ${f} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${f}),\n                  getX(batch, xR, xC, ${f} + 1),\n                  getX(batch, xR, xC, ${f} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${f}, xR, xC),\n                  getX(batch, ${f} + 1, xR, xC),\n                  getX(batch, ${f} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class Ii{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,s=t.strideDepth,i=t.strideHeight,o=t.strideWidth,a=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.filterDepth,h=t.filterHeight,d=t.filterWidth,f=4*Math.floor(t.inChannels/4),p=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${i}, ${o});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${a};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${f}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===p}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${f}) *\n                  getW(wF, wR, wC, ${f}, d2);\n              } else if (${2===p}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${f}),\n                  getX(batch, xF, xR, xC, ${f} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${f}, d2),\n                  getW(wF, wR, wC, ${f} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===p}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${f}),\n                  getX(batch, xF, xR, xC, ${f} + 1),\n                  getX(batch, xF, xR, xC, ${f} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${f}, d2),\n                  getW(wF, wR, wC, ${f} + 1, d2),\n                  getW(wF, wR, wC, ${f} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Fi{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:s,strideWidth:i,strideHeight:o,padInfo:a,outWidth:u,dilationWidth:c,dilationHeight:l,dataFormat:h}=n,{left:d,top:f}=a,p=s*r,m=$t(),b="channelsLast"===h,y=b?0:1,g=b?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${o} - ${f};\n            d0 = offsetY + ${l} * (pos / ${p});\n\n            if(d0 < ${e[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${i}. - ${d}.);\n              d1 = offsetX + ${c} * (int(mod(float(pos), ${p}.) / ${s}.));\n\n              if(d1 < ${e[g]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${b}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function _i({x:t,filter:e,convInfo:n,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:u=null}){const c=t.shape,l=s.texData.get(t.dataId),h=n.inChannels,d=c[0]*c[1]*c[2],f=n.outChannels,p="channelsLast"===n.dataFormat;let m;const b=[],y=(1===d||1===f)&&h>1e3,g=c[2]%2!=0&&!!l.isPacked;if(!y&&(0,r.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&g){const h=p?c[0]*c[1]*(c[2]+1):c[0]*c[2]*(c[3]+1),d={dataId:t.dataId,shape:[1,h,n.inChannels],dtype:t.dtype},f=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,r.D5U.hu(pt(l.shape,d.shape),(()=>`packed reshape ${l.shape} to ${d.shape} isn't free`));const y=Qr({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(y);const g=ls({a:d,b:y,backend:s,transposeA:false,transposeB:false,bias:i,activation:u,preluActivationWeights:o,leakyreluAlpha:a}),x=s.texData.get(g.dataId);r.D5U.hu(x.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=f,x.shape=n.outShape,m=Ir({inputs:{x:g},backend:s}),m.shape=n.outShape,b.push(g)}else{const r=Qr({inputs:{x:t},backend:s,attrs:{shape:[1,p?c[0]*c[1]*c[2]:c[0]*c[2]*c[3],n.inChannels]}}),l=Qr({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=ls({a:r,b:l,transposeA:false,transposeB:false,backend:s,bias:i,activation:u,preluActivationWeights:o,leakyreluAlpha:a});m=Qr({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),b.push(r),b.push(l),b.push(h)}for(const t of b)s.disposeIntermediateTensorInfo(t);return m}function Mi({x:t,filter:e,convInfo:n,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:u=null}){const{filterWidth:c,filterHeight:l,inChannels:h,outWidth:d,outHeight:f,dataFormat:p}=n,m="channelsLast"===p,b=c*l*h,y=f*d,g=[b,y],x=[],w=Qr({inputs:{x:t},backend:s,attrs:{shape:t.shape.slice(1)}}),v=Qr({inputs:{x:e},backend:s,attrs:{shape:[1,b,r.D5U.NA(e.shape)/b]}});x.push(w),x.push(v);const k=new Fi(g,w.shape,n),$=s.runWebGLProgram(k,[w],"float32"),N=Qr({inputs:{x:$},backend:s,attrs:{shape:[1,g[0],g[1]]}});x.push($),x.push(N);const C=null!=i,E=null!=o,S="leakyrelu"===u,A=u?Gr(u,!0):null,R=new jr(N.shape,v.shape,[1,y,n.outChannels],!0,!1,C,A,E,S),T=[N,v];if(i&&T.push(i),E&&T.push(o),S){const t=s.makeTensorInfo([],"float32",r.D5U.hr(a,"float32"));T.push(t),x.push(t)}const O=s.runWebGLProgram(R,T,"float32"),I=Qr({inputs:{x:O},backend:s,attrs:{shape:m?[1,f,d,n.outChannels]:[1,n.outChannels,f,d]}});x.push(O);for(const t of x)s.disposeIntermediateTensorInfo(t);return I}const Di={kernelName:r.mhS,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i,filter:o}=e,{strides:a,pad:u,dataFormat:c,dilations:l,dimRoundingMode:h}=s,d=r.Wap.convertConv2DDataFormat(c),f=r.Wap.computeConv2DInfo(i.shape,o.shape,a,l,u,h,!1,d);let p;if(1!==f.filterHeight||1!==f.filterWidth||1!==f.dilationHeight||1!==f.dilationWidth||1!==f.strideHeight||1!==f.strideWidth||"SAME"!==f.padInfo.type&&"VALID"!==f.padInfo.type)if((0,r.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===i.shape[0])p=Mi({x:i,filter:o,convInfo:f,backend:n});else{const t=new Oi(f);p=n.runWebGLProgram(t,[i,o],"float32")}else p=_i({x:i,filter:o,convInfo:f,backend:n});const m=Qr({inputs:{x:p},backend:n,attrs:{shape:f.outShape}});return n.disposeIntermediateTensorInfo(p),m}};class Li{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,i="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${i}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Pi{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i="channelsLast"===t.dataFormat,o=e-1-t.padInfo.top,a=n-1-t.padInfo.left,u=i?1:2,c=i?2:3,l=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${l}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Vi{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.padInfo.front,i=t.padInfo.top,o=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${s};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zi{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,i=t.strideHeight,o=t.strideWidth,a=e-1-t.padInfo.front,u=n-1-t.padInfo.top,c=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${a}, ${u}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Bi={kernelName:r.wUP,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i,dy:o}=e,{strides:a,pad:u,dataFormat:c,dimRoundingMode:l,filterShape:h}=s,d=r.Wap.convertConv2DDataFormat(c),f=r.Wap.computeConv2DInfo(i.shape,h,a,1,u,l,!1,d),p=new Li(f);return n.runWebGLProgram(p,[i,o],"float32")}};const Wi={kernelName:r.wm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:i,filter:o}=e,{inputShape:a,strides:u,pad:c,dataFormat:l,dimRoundingMode:h}=s,d=r.Wap.convertConv2DDataFormat(l),f=r.Wap.computeConv2DInfo(a,o.shape,u,1,c,h,!1,d),p=new Pi(f);return n.runWebGLProgram(p,[i,o],"float32")}};const Ui={kernelName:r.x12,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i,filter:o}=e,{strides:a,pad:u,dilations:c}=s,l=r.Wap.computeConv3DInfo(i.shape,o.shape,a,c,u),h=new Ii(l);return n.runWebGLProgram(h,[i,o],"float32")}};const Gi={kernelName:r.o2y,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i,dy:o}=e,{strides:a,pad:u,filterShape:c}=s,l=r.Wap.computeConv3DInfo(i.shape,c,a,1,u),h=new Vi(l);return n.runWebGLProgram(h,[i,o],"float32")}};const ji={kernelName:r.ik2,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:i,filter:o}=e,{pad:a,strides:u,inputShape:c}=s,l=r.Wap.computeConv3DInfo(c,o.shape,u,1,a),h=new zi(l);return n.runWebGLProgram(h,[i,o],"float32")}},Hi=Wr({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),qi={kernelName:r.mc4,backendName:"webgl",kernelFunc:Hi},Xi=Wr({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Ji={kernelName:r.TR1,backendName:"webgl",kernelFunc:Xi};class Yi{constructor(t,e,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,o,a,u]=t,[c]=e,[l,h]=n;this.outputShape=[c,l,h,u];const d="bilinear"===r?1:0,[f,p]=[o-1+".0",a-1+".0"],[m,b,y]=l>1?[""+(o-1)/(l-1),"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[g,x,w]=h>1?[""+(a-1)/(h-1),"(x2-x1) * width_ratio",`x1*${p} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${p}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${g});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${b};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Ki={kernelName:r.VcC,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:i,boxInd:o}=e,{cropSize:a,method:u,extrapolationValue:c}=r,l=new Yi(s.shape,i.shape,a,u,c);return n.runWebGLProgram(l,[s,i,o],"float32")}};class Qi{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,s=e?"0.0":`getX(${Zi(r,"coords")})`,i=t[t.length-1];let o="",a="";e?(o=n?"end != "+(i-1):"end != 0",a=n?"end + 1":"end - 1"):(o=n?`end + pow2 < ${i}`:"end >= pow2",a=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${ee(r)} coords = getOutputCoords();\n        int end = ${to(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${o}) {\n          int idx = ${a};\n          ${to(r,"coords")} = idx;\n          val += getX(${Zi(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function Zi(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function to(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}const eo={kernelName:r.iHb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{axis:o,exclusive:a,reverse:u}=s,c=i.shape.length,l=r.Wap.getAxesPermutation([o],c);let h=i;null!=l&&(h=us({inputs:{x:i},backend:n,attrs:{perm:l}}));const d=r.Wap.getInnerMostAxes(1,c)[0];if(d!==c-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${i.shape.length-1} but got axis=${o}`);const f=i.shape[d];let p=Ir({inputs:{x:h},backend:n});for(let t=0;t<=Math.ceil(Math.log2(f))-1;t++){const e=new Qi(h.shape,!1,u),r=e.getCustomSetupFunc(t),s=p;p=n.runWebGLProgram(e,[p],p.dtype,r),n.disposeIntermediateTensorInfo(s)}if(a){const t=new Qi(h.shape,a,u),e=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(e)}if(null!=l){const t=us({inputs:{x:p},backend:n,attrs:{perm:r.Wap.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),t}return p}};const no={kernelName:r.QRR,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:o,binaryOutput:a}=r;if(1===s.shape.length){const t=n.readSync(s.dataId),e=n.readSync(i.dataId),r=zn(t,e,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,r)}if(2===s.shape.length){const t=n.bufferSync(s),e=n.bufferSync(i),r=Bn(t,e,o,a);return n.makeTensorInfo(r.shape,i.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class ro{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const so={kernelName:r.T0n,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{blockSize:o,dataFormat:a}=s;r.D5U.hu(o>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${o}`));const u=i.shape[0],c="NHWC"===a?i.shape[1]:i.shape[2],l="NHWC"===a?i.shape[2]:i.shape[3],h="NHWC"===a?i.shape[3]:i.shape[1],d=c*o,f=l*o,p=h/(o*o),m=new ro("NHWC"===a?[u,d,f,p]:[u,p,d,f],o,a);return n.runWebGLProgram(m,[i],i.dtype)}};class io{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.inHeight,o=t.inWidth,a=t.padInfo.top,u=t.padInfo.left,c=t.strideHeight,l=t.strideWidth,h=t.dilationHeight,d=t.dilationWidth,f=t.filterHeight,p=t.filterWidth,m=t.outChannels/t.inChannels;let b="",y="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${c}, ${l});\n      const ivec2 pads = ivec2(${a}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${f}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${i}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${o}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${g}\n        ${y}\n        setOutput(result);\n      }\n    `}}class oo{constructor(t,e=!1,n=null,s=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const o=t.inHeight,a=t.inWidth,u=t.padInfo.top,c=t.padInfo.left,l=t.strideHeight,h=t.strideWidth,d=t.dilationHeight,f=t.dilationWidth,p=t.filterHeight,m=t.filterWidth,b=m;let y="int xR; int xC; int xCOffset;";for(let t=0;t<p;t++)for(let e=0;e<m;e++)y+=`\n          vec4 xTexelR${t}C${2*e} = vec4(0.);\n          vec4 wR${t}C${e} = vec4(0.);\n          vec4 xR${t}C${e} = vec4(0.);`;for(let t=0;t<p;t++)for(let e=0;e<b;e++){const n=2*e;if(y+=`\n          xR = xRCorner + ${t*d};\n          xC = xCCorner + ${n*f};\n        `,1===h){if(n<m&&(y+=c%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${o} && xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    xTexelR${t}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${o} && xCOffset >= 0 && xCOffset < ${a}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${t}C${n} = vec4(previous.zw, xTexelR${t}C${n}.xy);\n                } else {\n                  xR${t}C${n} = vec4(0, 0, xTexelR${t}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${o} && xC >= 0 && xC < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xR${t}C${n} = xTexelR${t}C${n};\n              `,n+1<m)){const e=c%2==0?r.D5U.nY(f):f;f%2==0&&c%2==1||f%2!=0&&c%2!=1?(y+=`\n                  xCOffset = xC + ${c%2} + ${e};\n\n                  if(xR >= 0 && xR < ${o} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,f>1&&(y+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${o} &&\n                      xCOffset >= 0 && xCOffset < ${a}) {\n                      xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${t}C${n} = vec4(0.);\n                    }\n                  `),y+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.xy);\n                `):y+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${o} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${t}C${n+1} = xTexelR${t}C${n+2};\n                `}}else n<m&&(y+=`\n              if(xR >= 0 && xR < ${o}) {\n            `,c%2==1?(y+=`\n                xCOffset = xC + 1 - ${h};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${a}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n              `,n+1<m&&(y+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${h};\n                  if(xCOffset >= 0 && xCOffset < ${a}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${t}C${n+1} = vec4(xTexelR${t}C${n+2}.xy, final.xy);\n                `)):(y+=`\n                if(xC >= 0 && xC < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${h};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.xy, xTexelR${t}C${n+2}.xy);\n              `,n+1<m&&(y+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n                `)),y+="}");n<m&&(y+=`\n            vec4 wTexelR${t}C${n} = getW(${t}, ${n}, d1, q);\n            wR${t}C${n} = vec4(wTexelR${t}C${n}.xz, wTexelR${t}C${n}.xz);\n          `,n+1<m&&(y+=`\n              vec4 wTexelR${t}C${n+1} = getW(${t}, ${n+1}, d1, q);\n              wR${t}C${n+1} =\n                vec4(wTexelR${t}C${n+1}.xz, wTexelR${t}C${n+1}.xz);`))}for(let t=0;t<p;t++)for(let e=0;e<m;e++)y+=`dotProd += xR${t}C${e} * wR${t}C${e};`;let g="",x="";n&&(g=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:i?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${l}, ${h});\n      const ivec2 pads = ivec2(${u}, ${c});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${y}\n\n        vec4 result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}const ao={kernelName:r.cie,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i,filter:o}=e,{strides:a,pad:u,dilations:c,dimRoundingMode:l}=s;let h=c;null==h&&(h=[1,1]),r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(a,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${h}'`));const d=r.Wap.computeConv2DInfo(i.shape,o.shape,a,h,u,l,!0);let f;return f=(0,r.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new oo(d):new io(d),n.runWebGLProgram(f,[i,o],"float32")}};class uo{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class co{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i=e-1-t.padInfo.top,o=n-1-t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${a}; dm++) {\n              int d2 = d1 * ${a} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const lo={kernelName:r.sL$,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i,dy:o}=e,{strides:a,dilations:u,pad:c,dimRoundingMode:l,filterShape:h}=s,d=r.Wap.computeConv2DInfo(i.shape,h,a,u,c,l,!0),f=new uo(d);return n.runWebGLProgram(f,[i,o],"float32")}};const ho={kernelName:r.y7R,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:i,filter:o}=e,{strides:a,dilations:u,pad:c,dimRoundingMode:l,inputShape:h}=s,d=r.Wap.computeConv2DInfo(h,o.shape,a,u,c,l,!0),f=new co(d);return n.runWebGLProgram(f,[i,o],"float32")}};class fo{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const po={kernelName:r.$w,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e,i=[...s.shape,...s.shape],o=r.D5U.NA(s.shape),a=Qr({inputs:{x:s},backend:n,attrs:{shape:[o]}}),u=new fo(o),c=n.runWebGLProgram(u,[a],a.dtype),l=Qr({inputs:{x:c},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(c),l}};class mo{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:r,strideHeight:s,strideWidth:i,filterHeight:o,filterWidth:a,dilationHeight:u,dilationWidth:c}=t,{top:l,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${i});\n      const ivec2 pads = ivec2(${l}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${o}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${a}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const bo={kernelName:r.p4S,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i,filter:o}=e,{strides:a,pad:u,dilations:c}=s,l=r.Wap.computeDilation2DInfo(i.shape,o.shape,a,u,"NHWC",c);let h;const d=new mo(l);h=n.runWebGLProgram(d,[i,o],"float32");const f=Qr({inputs:{x:h},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(h),f}},yo=Wr({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),go={kernelName:r.SX0,backendName:"webgl",kernelFunc:yo},xo={kernelName:r.HEU,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:s,y:i}=e,o=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Or("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,i.shape):new Tr("return (b >= 1.0) ? a : a * (b + 1.0);",s.shape,i.shape);return n.runWebGLProgram(o,[s,i],s.dtype)}},wo=Ur({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),vo={kernelName:r.hdR,backendName:"webgl",kernelFunc:wo},ko=Wr({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${r.Wap.ERF_P};\n  float a1 = ${r.Wap.ERF_A1};\n  float a2 = ${r.Wap.ERF_A2};\n  float a3 = ${r.Wap.ERF_A3};\n  float a4 = ${r.Wap.ERF_A4};\n  float a5 = ${r.Wap.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),$o={kernelName:r.Omj,backendName:"webgl",kernelFunc:ko},No="return exp(x);",Co=Wr({opSnippet:No,packedOpSnippet:No,cpuKernelImpl:Gn}),Eo={kernelName:r.NEP,backendName:"webgl",kernelFunc:Co};function So(t){const{inputs:e,attrs:n,backend:s}=t,{dim:i}=n,{input:o}=e,a=o.shape.length,u=o.shape.slice();let c=i;return i<0&&(r.D5U.hu(-(a+1)<=i,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),c=a+i+1),u.splice(c,0,1),Qr({inputs:{x:o},backend:s,attrs:{shape:u}})}const Ao={kernelName:r.YFo,backendName:"webgl",kernelFunc:So},Ro="return exp(x) - 1.0;",To=Wr({opSnippet:Ro,packedOpSnippet:Ro,cpuKernelImpl:jn}),Oo={kernelName:r.Y0y,backendName:"webgl",kernelFunc:To};class Io{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";let o;if("real"===t)o="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function Fo(t,e,n){const s=n.texData.get(t.dataId),i=r.D5U.NA(t.shape),o=t.shape[t.shape.length-1],a=Qr({inputs:{x:t},backend:n,attrs:{shape:[i/o,o]}}).shape,u=new Io("real",a,e),c=new Io("imag",a,e),l=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:a},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:a}],h=n.runWebGLProgram(u,l,"float32"),d=n.runWebGLProgram(c,l,"float32"),f=_r({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const p=Qr({inputs:{x:f},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(p),p}const _o={kernelName:r.vwp,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return Fo(r,!1,n)}};class Mo{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}function Do(t){const{backend:e,attrs:n}=t,{shape:s,value:i}=n;let{dtype:o}=n;if(o=o||r.D5U.D2(i),"string"===o){const t=r.D5U.rQ(o,r.D5U.NA(s));return t.fill(i),e.makeTensorInfo(s,o,t)}{const t=new Mo(s,i),n=t.getCustomSetupFunc(i);return e.runWebGLProgram(t,[],o,n)}}const Lo={kernelName:r.deh,backendName:"webgl",kernelFunc:Do};class Po{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Vo={kernelName:r.Uyb,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,s=new Po(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},zo="return floor(x);",Bo=Wr({opSnippet:zo,packedOpSnippet:zo,cpuKernelImpl:Hn}),Wo={kernelName:r.OR,backendName:"webgl",kernelFunc:Bo},Uo=Ur({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Go={kernelName:r.jeX,backendName:"webgl",kernelFunc:Uo};class jo{constructor(t){this.variableNames=["A"];const e=$t(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Ho{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=$t(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const qo={kernelName:r.eBW,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t;let{pixels:i}=e;const{numChannels:o}=s,a="undefined"!=typeof HTMLVideoElement&&i instanceof HTMLVideoElement,u="undefined"!=typeof HTMLImageElement&&i instanceof HTMLImageElement,c="undefined"!=typeof ImageBitmap&&i instanceof ImageBitmap,[l,h]=a?[i.videoWidth,i.videoHeight]:[i.width,i.height],d=[h,l],f=[h,l,o];(u||a||c)&&(null==Xo&&(Xo=document.createElement("canvas").getContext("2d")),Xo.canvas.width=l,Xo.canvas.height=h,Xo.drawImage(i,0,0,l,h),i=Xo.canvas);const p=n.makeTensorInfo(d,"int32");n.texData.get(p.dataId).usage=j.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),i);const m=(0,r.OBj)().getBool("WEBGL_PACK")?new Ho(f):new jo(f),b=n.runWebGLProgram(m,[p],"int32");return n.disposeData(p.dataId),b}};let Xo;const Jo={kernelName:r._V0,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i,filter:o,bias:a,preluActivationWeights:u}=e,{strides:c,pad:l,dataFormat:h,dilations:d,dimRoundingMode:f,activation:p,leakyreluAlpha:m}=s,b=r.Wap.convertConv2DDataFormat(h),y=r.Wap.computeConv2DInfo(i.shape,o.shape,c,d,l,f,!1,b);let g;const x=[];if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if((0,r.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===i.shape[0])g=Mi({x:i,filter:o,convInfo:y,backend:n,bias:a,activation:p,preluActivationWeights:u,leakyreluAlpha:m});else{const t=null!=a,e=null!=u,s="leakyrelu"===p,c=p?Gr(p,!1):null,l=new Oi(y,t,c,e,s),h=[i,o];if(a&&h.push(a),u&&h.push(u),s){const t=n.makeTensorInfo([],"float32",r.D5U.hr(m,"float32"));h.push(t),x.push(t)}g=n.runWebGLProgram(l,h,"float32")}else g=_i({x:i,filter:o,convInfo:y,backend:n,bias:a,activation:p,preluActivationWeights:u,leakyreluAlpha:m});const w=Qr({inputs:{x:g},backend:n,attrs:{shape:y.outShape}});return x.push(g),x.forEach((t=>n.disposeIntermediateTensorInfo(t))),w}};const Yo={kernelName:r.luS,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i,filter:o,bias:a,preluActivationWeights:u}=e,{strides:c,pad:l,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=s,m=[];let b=h;null==b&&(b=[1,1]),r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(c,b),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${b}'`));const y=r.Wap.computeConv2DInfo(i.shape,o.shape,c,b,l,d,!0),g=(0,r.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,x=f?Gr(f,g):null,w=[i,o],v=null!=a,k=null!=u,$="leakyrelu"===f;if(v&&w.push(a),k&&w.push(u),$){const t=n.makeTensorInfo([],"float32",r.D5U.hr(p,"float32"));w.push(t),m.push(t)}let N;N=g?new oo(y,v,x,k,$):new io(y,v,x,k,$);const C=n.runWebGLProgram(N,w,"float32");return m.forEach((t=>n.disposeIntermediateTensorInfo(t))),C}};class Ko{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=ee(e.length),s=ee(n.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${i};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const Qo={kernelName:r.q1x,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:s,indices:i}=e,o=i.shape,a=o[o.length-1],[u,c,l,h]=r.Wap.prepareAndValidate(s,i),d=Qr({inputs:{x:i},backend:n,attrs:{shape:[c,a]}}),f=Qr({inputs:{x:s},backend:n,attrs:{shape:[r.D5U.NA(s.shape)/l,l]}}),p=new Ko(a,h,[c,l]),m=n.runWebGLProgram(p,[f,d],f.dtype),b=Qr({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}};class Zo{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=ee(this.rank),r=function(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let e=0;e<t.length;e++)2===e?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[e]}`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const ta={kernelName:r.qi_,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i,indices:o}=e,{axis:a,batchDims:u}=s,c=r.D5U.EC(a,i.shape)[0],l=r.Wap.segment_util.collectGatherOpShapeInfo(i,o,c,u),h=r.D5U.NA(o.shape),d=[],f=Qr({inputs:{x:i},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=Qr({inputs:{x:o},backend:n,attrs:{shape:[l.batchSize,h/l.batchSize]}});d.push(f),d.push(p);const m=[l.batchSize,l.outerSize,h/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([i,o])||"string"===i.dtype){const t=n.bufferSync(p),e=n.bufferSync(f),r=qn(e,t,m);return d.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const b=new Zo(f.shape,m),y=n.runWebGLProgram(b,[f,p],f.dtype);d.push(y);const g=Qr({inputs:{x:y},backend:n,attrs:{shape:l.outputShape}});return d.forEach((t=>n.disposeIntermediateTensorInfo(t))),g}},ea=Ur({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Xn,dtype:"bool"}),na={kernelName:r.iZT,backendName:"webgl",kernelFunc:ea},ra=Ur({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),sa={kernelName:r.Acj,backendName:"webgl",kernelFunc:ra};const ia={kernelName:r.Qg5,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return Fo(r,!0,n)}},oa=Wr({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),aa={kernelName:r.avt,backendName:"webgl",kernelFunc:oa},ua=Wr({opSnippet:"return float(isinf(x));",dtype:"bool"}),ca={kernelName:r.iWB,backendName:"webgl",kernelFunc:ua},la=Wr({opSnippet:"return float(isnan(x));",dtype:"bool"}),ha={kernelName:r.r7n,backendName:"webgl",kernelFunc:la},da=Ur({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Jn,dtype:"bool"}),fa={kernelName:r.vtC,backendName:"webgl",kernelFunc:da},pa=Ur({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),ma={kernelName:r.CAk,backendName:"webgl",kernelFunc:pa};const ba={kernelName:r.e7N,backendName:"webgl",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:i}=n,o=Yn(r,s,i);return e.makeTensorInfo([o.length],"float32",o)}},ya=Wr({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Kn}),ga={kernelName:r.ZbH,backendName:"webgl",kernelFunc:ya},xa=Wr({opSnippet:"return log(1.0 + x);"}),wa={kernelName:r.kU,backendName:"webgl",kernelFunc:xa},va=Ur({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),ka={kernelName:r.PYm,backendName:"webgl",kernelFunc:va},$a=Wr({opSnippet:"return float(!(x >= 1.0));"}),Na={kernelName:r.VfG,backendName:"webgl",kernelFunc:$a},Ca=Ur({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Ea={kernelName:r.MZg,backendName:"webgl",kernelFunc:Ca};class Sa{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[];const i=e,o=t[3]-1;let a;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;a=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${a};\n        setOutput(val);\n      }\n    `}}class Aa{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,o=t[3]-1;let a;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;a=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${a};\n        setOutput(result);\n      }\n    `}}const Ra={kernelName:r.eZ0,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{depthRadius:o,bias:a,alpha:u,beta:c}=s,l=(0,r.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Aa(i.shape,o,a,u,c):new Sa(i.shape,o,a,u,c);return n.runWebGLProgram(l,[i],i.dtype)}};class Ta{constructor(t,e,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Oa={kernelName:r.Hhh,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s,y:i,dy:o}=e,{depthRadius:a,bias:u,alpha:c,beta:l}=r,h=new Ta(s.shape,a,u,c,l);return n.runWebGLProgram(h,[s,i,o],s.dtype)}};function Ia(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{reductionIndices:o,keepDims:a}=s,u=i.shape.length,c=r.D5U.EC(o,i.shape);let l=c;const h=r.Wap.getAxesPermutation(l,u),d=null!=h,f=n.shouldExecuteOnCPU([i]);let p=i;if(d){if(f){const t=n.texData.get(p.dataId).values,e=new Array(u);for(let t=0;t<e.length;t++)e[t]=i.shape[h[t]];const r=dr(t,i.shape,i.dtype,h,e);p=n.makeTensorInfo(e,i.dtype);n.texData.get(p.dataId).values=r}else p=is(i,h,n);l=r.Wap.getInnerMostAxes(l.length,u)}r.Wap.assertAxesAreInnerMostDims("max",l,u);const[m,b]=r.Wap.computeOutAndReduceShapes(p.shape,l);let y,g=m;if(a&&(g=r.Wap.expandShapeToKeepDim(m,c)),f){const t=n.texData.get(p.dataId).values,e=Qn(t,r.D5U.NA(b),g,i.dtype);y=n.makeTensorInfo(g,i.dtype);n.texData.get(y.dataId).values=e}else y=function(t,e,n,s){const i=r.D5U.NA(e),o=Qr({inputs:{x:t},attrs:{shape:[r.D5U.NA(t.shape)/i,i]},backend:s}),a=ns(o,t.dtype,"max",s),u=Qr({inputs:{x:a},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(a),u}(p,b,g,n);return d&&n.disposeIntermediateTensorInfo(p),y}const Fa={kernelName:r.YoZ,backendName:"webgl",kernelFunc:Ia},_a=Ur({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Zn}),Ma={kernelName:r.BMI,backendName:"webgl",kernelFunc:_a};const Da={kernelName:r.mTV,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e;vt(i,"maxPool");const{filterSize:o,strides:a,pad:u,dimRoundingMode:c}=s;r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const l=r.Wap.computePool2DInfo(i.shape,o,a,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&r.D5U.cO(l.inShape,l.outShape))return Ir({inputs:{x:i},backend:n});const h=new Us(l,"max",!1);return n.runWebGLProgram(h,[i],i.dtype)}};const La={kernelName:r.OAf,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{filterSize:o,strides:a,pad:u,dataFormat:c,dimRoundingMode:l}=s,h=r.Wap.computePool3DInfo(i.shape,o,a,[1,1,1],u,l,c),d=new Gs(h,"max",!1);return n.runWebGLProgram(d,[i],i.dtype)}};class Pa{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,s=t.effectiveFilterHeight,i=t.effectiveFilterWidth,o=s-1-t.padInfo.top,a=i-1-t.padInfo.left,u=s*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Va{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.dilationDepth,i=t.dilationHeight,o=t.dilationWidth,a=t.effectiveFilterDepth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth,l=a-1-t.padInfo.front,h=u-1-t.padInfo.top,d=c-1-t.padInfo.left,f=a*u*c-1;this.userCode=`\n      const ivec3 pads = ivec3(${l}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${a};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${f} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const za={kernelName:r.OU7,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:i,input:o}=e,a=o,{filterSize:u,strides:c,pad:l,dimRoundingMode:h}=s,d=r.Wap.computePool3DInfo(a.shape,u,c,[1,1,1],l,h),f=new Gs(d,"max",!0),p=n.runWebGLProgram(f,[a],a.dtype),m=new Va(d),b=n.runWebGLProgram(m,[i,p],a.dtype);return n.disposeIntermediateTensorInfo(p),b}};const Ba={kernelName:r.OV7,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:i,input:o,output:a}=e,u=o;vt([o,a],"maxPoolGrad");const{filterSize:c,strides:l,pad:h,dimRoundingMode:d}=s,f=r.Wap.computePool2DInfo(u.shape,c,l,1,h,d),p=new Us(f,"max",!0),m=n.runWebGLProgram(p,[u],u.dtype),b=new Pa(f),y=n.runWebGLProgram(b,[i,m],u.dtype);return n.disposeIntermediateTensorInfo(m),y}};const Wa={kernelName:r.vFR,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:i,strides:o,pad:a,includeBatchInIndex:u}=e,c=n;r.D5U.hu(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const l=[1,1];r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(o,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`));const h=r.Wap.computePool2DInfo(s.shape,i,o,l,a),[d,f]=function(t,e,n,r){let s=new Us(n,"max",!1);const i=r.runWebGLProgram(s,[t],"float32");return s=new Us(n,"max",!0,!0,e),[i,r.runWebGLProgram(s,[t],"float32")]}(s,u,h,c);return[d,f]}};const Ua={kernelName:r.q2K,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{keepDims:i,axis:o}=e,a=n,u=s.shape.length,c=r.D5U.EC(o,s.shape);let l=c;const h=r.Wap.getAxesPermutation(l,u),d=null!=h,f=a.shouldExecuteOnCPU([s]),p=[];let m=s;if(d){if(f){const t=a.texData.get(m.dataId).values,e=new Array(u);for(let t=0;t<e.length;t++)e[t]=s.shape[h[t]];const n=dr(t,s.shape,s.dtype,h,e);m=a.makeTensorInfo(e,s.dtype);a.texData.get(m.dataId).values=n}else m=is(s,h,a);p.push(m),l=r.Wap.getInnerMostAxes(l.length,u)}r.Wap.assertAxesAreInnerMostDims("sum",l,u);const[b,y]=r.Wap.computeOutAndReduceShapes(m.shape,l);let g=b;i&&(g=r.Wap.expandShapeToKeepDim(b,c));const x=function(t,e,n,s){const i=r.D5U.NA(e),o=Qr({inputs:{x:t},attrs:{shape:[r.D5U.NA(t.shape)/i,i]},backend:s}),a=ns(o,"float32","mean",s),u=Qr({inputs:{x:a},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(a),u}(m,y,g,a);for(const t of p)a.disposeIntermediateTensorInfo(t);return x}};const Ga={kernelName:r.c17,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{axis:o,keepDims:a}=s,u=i.shape.length,c=r.D5U.EC(o,i.shape);let l=c;const h=r.Wap.getAxesPermutation(l,u);let d=i;null!=h&&(d=us({inputs:{x:i},backend:n,attrs:{perm:h}}),l=r.Wap.getInnerMostAxes(l.length,i.shape.length)),r.Wap.assertAxesAreInnerMostDims("min",l,u);const[f,p]=r.Wap.computeOutAndReduceShapes(d.shape,l),m=Qr({inputs:{x:d},backend:n,attrs:{shape:[-1,r.D5U.NA(p)]}}),b=ns(m,m.dtype,"min",n);let y;if(a){y=Qr({inputs:{x:b},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(f,c)}})}else y=Qr({inputs:{x:b},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=h&&n.disposeIntermediateTensorInfo(d),y}},ja=Ur({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:tr}),Ha={kernelName:r.q8u,backendName:"webgl",kernelFunc:ja};class qa{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=ee(r),i=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),a=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${a}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class Xa{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=ee(r),i=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),a=mr("rc",r),u=mr("source",r),c=`${a[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const t=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${a[r-1]} += 1;\n        if(${c}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n      `}else{const t=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${a[r-1]} += 1;\n        if(${c}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${a[r-2]} += 1;\n        if(${a[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${u.join()}), ${l});\n          ${a[r-1]} += 1;\n          if(${c}) {\n            ${t}\n            result[3] = getChannel(getX(${u.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const Ja={kernelName:r.jQs,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s}=t,{paddings:i,mode:o}=n,a=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Xa(s.shape,i,o):new qa(s.shape,i,o);return e.runWebGLProgram(a,[s],s.dtype)}},Ya=Ur({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Ka={kernelName:r.Vbg,backendName:"webgl",kernelFunc:Ya};class Qa{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}const Za=Ur({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),tu={kernelName:r.oHH,backendName:"webgl",kernelFunc:Za},eu="return a - b;",nu=Ur({opSnippet:eu,packedOpSnippet:eu,supportsComplex:!0,cpuKernelImpl:cr}),ru={kernelName:r.Tr8,backendName:"webgl",kernelFunc:nu};function su(t){const{inputs:e,backend:n,attrs:s}=t,{logits:i}=e,{dim:o}=s,a=r.D5U.EC([o],i.shape),u=Ia({inputs:{x:i},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),c=r.Wap.expandShapeToKeepDim(u.shape,a),l=Qr({inputs:{x:u},backend:n,attrs:{shape:c}}),h=nu({inputs:{a:i,b:l},backend:n}),d=Co({inputs:{x:h},backend:n}),f=os({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:!1}}),p=Qr({inputs:{x:f},backend:n,attrs:{shape:c}}),m=Za({inputs:{a:d,b:p},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),m}const iu={kernelName:r.Gcp,backendName:"webgl",kernelFunc:su};const ou={kernelName:r.NZg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:i,seed:o,normalized:a}=r,u=a?s:su({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),c=u.shape[0],l=u.shape[1],h=new Qa(c,l,i),d=h.getCustomSetupFunc(o),f=n.runWebGLProgram(h,[u],"int32",d);return a||n.disposeIntermediateTensorInfo(u),f}},au="return -x;";const uu={kernelName:r.kuV,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])){const t=n.texData.get(s.dataId),[e,r]=nr(t.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,e)}let i;return i=(0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Cr(s.shape,au):new kr(s.shape,au),n.runWebGLProgram(i,[s],s.dtype)}},cu=r.GDt.GP;const lu={kernelName:r.uv1,backendName:"webgl",kernelFunc:function(t){r.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:i,scores:o}=e,{maxOutputSize:a,iouThreshold:u,scoreThreshold:c}=s,l=n.readSync(i.dataId),h=n.readSync(o.dataId),{selectedIndices:d}=cu(l,h,a,u,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},hu=r.GDt.qP;const du={kernelName:r.cye,backendName:"webgl",kernelFunc:function(t){r.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:i,scores:o}=e,{maxOutputSize:a,iouThreshold:u,scoreThreshold:c,padToMaxOutputSize:l}=s,h=n.readSync(i.dataId),d=n.readSync(o.dataId),{selectedIndices:f,validOutputs:p}=hu(h,d,a,u,c,l);return[n.makeTensorInfo([f.length],"int32",new Int32Array(f)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},fu=r.GDt.pA;const pu={kernelName:r.W0H,backendName:"webgl",kernelFunc:function(t){r.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:i,scores:o}=e,{maxOutputSize:a,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=s,h=n.readSync(i.dataId),d=n.readSync(o.dataId),f=a,p=u,m=c,b=l,{selectedIndices:y,selectedScores:g}=fu(h,d,f,p,m,b);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}};class mu{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const bu={kernelName:r.we_,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{indices:i}=e,{depth:o,onValue:a,offValue:u}=s,c=r.D5U.NA(i.shape),l=new mu(c,o,a,u),h=Qr({inputs:{x:i},backend:n,attrs:{shape:[c]}}),d=n.runWebGLProgram(l,[h],i.dtype);n.disposeIntermediateTensorInfo(h);const f=Qr({inputs:{x:d},backend:n,attrs:{shape:[...i.shape,o]}});return n.disposeIntermediateTensorInfo(d),f}};function yu(t){const{inputs:e,backend:n}=t,{x:r}=e;if("complex64"===r.dtype){const t=li({inputs:{input:r},backend:n}),e=yu({inputs:{x:t},backend:n}),s=Ci({inputs:{input:r},backend:n}),i=yu({inputs:{x:s},backend:n}),o=_r({inputs:{real:e,imag:i},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}return Do({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const gu={kernelName:r.RuY,backendName:"webgl",kernelFunc:yu};const xu={kernelName:r.qWM,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const e=li({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r}),i=Ci({inputs:{input:s},backend:r}),o=yu({inputs:{x:i},backend:r}),a=_r({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),a}return Do({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}};const wu={kernelName:r.QiL,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{axis:i}=s;if(1===e.length)return So({inputs:{input:e[0]},backend:n,attrs:{dim:i}});const o=e[0].shape,a=e[0].dtype;e.forEach((t=>{r.D5U.k5(o,t.shape,"All tensors passed to stack must have matching shapes"),r.D5U.hu(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],c=Ri({inputs:e.map((t=>{const e=So({inputs:{input:t},backend:n,attrs:{dim:i}});return u.push(e),e})),backend:n,attrs:{axis:i}});return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}};class vu{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=ee(r),i=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),a=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${a}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class ku{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=ee(r),i=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),a=mr("rc",r),u=mr("source",r),c=`${a[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${a[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${a[r-2]} += 1;\n       if(${a[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${a[r-1]} += 1;\n         if(${c}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let t=0,e=1===r?2:4;t<e;t++)f+=`\n        ${h[t]}\n        if (${d}) {\n          result[${t}] = float(${n});\n        } else {\n          ${s} source = rc - start;\n          result[${t}] = getChannel(getX(${u.join()}), ${l});\n        }\n      `;f+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${f}\n        setOutput(result);\n      }\n    `}}const $u=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{paddings:o,constantValue:a}=s,u=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ku(i.shape,o,a):new vu(i.shape,o,a);return n.runWebGLProgram(u,[i],i.dtype)},Nu={kernelName:r.lyA,backendName:"webgl",kernelFunc:$u},Cu=Ur({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Eu={kernelName:r.pe_,backendName:"webgl",kernelFunc:Cu};const Su={kernelName:r.DlI,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{axis:o,keepDims:a}=s,u=i.shape.length,c=[],l=r.D5U.EC(o,i.shape);let h=l;const d=r.Wap.getAxesPermutation(h,u);let f,p=i;if(null!=d&&(p=us({inputs:{x:i},backend:n,attrs:{perm:d}}),h=r.Wap.getInnerMostAxes(h.length,u),c.push(p)),r.Wap.assertAxesAreInnerMostDims("prod",h,u),n.shouldExecuteOnCPU([p])){const t=n.texData.get(p.dataId).values,{outVals:e,outShape:r,outDtype:s}=rr(p.shape,p.dtype,t,h);f=n.makeTensorInfo(r,s,e)}else{const[t,e]=r.Wap.computeOutAndReduceShapes(p.shape,h),s=r.D5U.NA(e),o=Qr({inputs:{x:p},backend:n,attrs:{shape:[-1,s]}}),a=ns(o,(0,r.z4k)(i.dtype),"prod",n);f=Qr({inputs:{x:a},backend:n,attrs:{shape:t}}),c.push(o),c.push(a)}if(a){c.push(f);const t=r.Wap.expandShapeToKeepDim(f.shape,l);f=Qr({inputs:{x:f},backend:n,attrs:{shape:t}})}return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),f}},Au=t=>{const{backend:e,attrs:n}=t,{start:r,stop:s,step:i,dtype:o}=n,a=sr(r,s,i,o);return e.makeTensorInfo([a.length],o,a)},Ru={kernelName:r.e6w,backendName:"webgl",kernelFunc:Au},Tu=Wr({opSnippet:"return 1.0 / x;"}),Ou={kernelName:r.$HU,backendName:"webgl",kernelFunc:Tu},Iu=Wr({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Fu={kernelName:r.qkr,backendName:"webgl",kernelFunc:Iu},_u=Wr({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Mu={kernelName:r.SbG,backendName:"webgl",kernelFunc:_u};class Du{constructor(t,e,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,o,a,u]=t;this.outputShape=[i,e,n,u];const c=[r&&e>1?o-1:o,r&&n>1?a-1:a],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${a}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class Lu{constructor(t,e,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,o,a,u]=t;this.outputShape=[i,e,n,u];const c=[r&&e>1?o-1:o,r&&n>1?a-1:a],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${a}.0,\n                                     ${a}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const Pu={kernelName:r._Yw,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:i}=e,{alignCorners:o,halfPixelCenters:a,size:u}=s,[c,l]=u,h=(0,r.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Lu(i.shape,c,l,o,a):new Du(i.shape,c,l,o,a);return n.runWebGLProgram(h,[i],"float32")}};class Vu{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,s]=e,[,i,o]=t,a=[n&&i>1?r-1:r,n&&o>1?s-1:s],u=[n&&i>1?i-1:i,n&&o>1?o-1:o],c=a[0]/u[0],l=a[1]/u[1],h=1/c,d=1/l,f=2*Math.ceil(h)+2,p=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${f});\n        const int winWidth = int(${p});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const zu={kernelName:r.zbQ,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:o}=r,a=new Vu(i.shape,s.shape,o);return n.runWebGLProgram(a,[i],i.dtype)}};class Bu{constructor(t,e,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,o,a,u]=t;this.outputShape=[i,e,n,u];const c=[r&&e>1?o-1:o,r&&n>1?a-1:a],l=[r&&e>1?e-1:e,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${a}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const Wu={kernelName:r.dpD,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:o,size:a}=r,[u,c]=a,l=new Bu(s.shape,u,c,i,o);return n.runWebGLProgram(l,[s],s.dtype)}};class Uu{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,s]=e,[,i,o]=t,a=[n&&i>1?r-1:r,n&&o>1?s-1:s],u=[n&&i>1?i-1:i,n&&o>1?o-1:o],c=a[0]/u[0],l=a[1]/u[1],h=1/c,d=1/l,f=2*Math.ceil(h)+2,p=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${f});\n        const int winWidth = int(${p});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${a[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${a[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Gu={kernelName:r.Hmb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:o}=r,a=new Uu(i.shape,s.shape,o);return n.runWebGLProgram(a,[i],i.dtype)}};class ju{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map(((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=ee(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class Hu{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=mr("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=ee(n);function a(n){const r=t.map(((r,s)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return a(t)}(r.slice())};\n          if(${s}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",a(t)}(r.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",a(t)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",a(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const qu={kernelName:r.mKl,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{dims:o}=s,a=i.shape.length,u=r.D5U.EC(o,i.shape);if(0===a)return Ir({inputs:{x:i},backend:n});const c=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Hu(i.shape,u):new ju(i.shape,u);return n.runWebGLProgram(c,[i],i.dtype)}};class Xu{constructor(t,e,n,s){this.variableNames=["Image"],this.outputShape=[];const i=t[1],o=t[2],a=Math.sin(e).toFixed(3),u=Math.cos(e).toFixed(3);this.outputShape=t;const[c,l]=r.Wap.getImageCenter(s,i,o),h=c.toFixed(3),d=l.toFixed(3);let f="";f="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${h}) * ${u} - (float(y) - ${d}) * ${a};\n          float coordYFloat = (float(x) - ${h}) * ${a} + (float(y) - ${d}) * ${u};\n          int coordX = int(round(coordXFloat + ${h}));\n          int coordY = int(round(coordYFloat + ${d}));\n          ${f}\n          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${i}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Ju={kernelName:r.b9H,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:i,center:o}=e,a=n,u=new Xu(r.shape,s,i,o);return a.runWebGLProgram(u,[r],r.dtype)}},Yu=Wr({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Ku={kernelName:r.e07,backendName:"webgl",kernelFunc:Yu},Qu=Wr({opSnippet:"return inversesqrt(x);",cpuKernelImpl:ir}),Zu={kernelName:r.bV0,backendName:"webgl",kernelFunc:Qu};class tc{constructor(t,e,n,r,s,i,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const a=ee(s.length),u=ee(i.length);let c="";1===n?c="i":2===n&&(c="i, j");const l=`getIndices(${c})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,f=e>1?"strides[j]":"strides";this.userCode=`\n        ${a} strides = ${a}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${l});\n              flattenedIndex += index * ${f};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const ec={kernelName:r.xQA,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{indices:i,updates:o}=e,{shape:a}=s,{sliceRank:u,numUpdates:c,sliceSize:l,strides:h,outputSize:d}=r.Wap.calculateShapes(o,i,a),f=[d/l,l];if(0===d)return n.makeTensorInfo(a,i.dtype);const p=Qr({inputs:{x:i},backend:n,attrs:{shape:[c,u]}}),m=Qr({inputs:{x:o},backend:n,attrs:{shape:[c,l]}}),b=n.makeTensorInfo([],"float32",new Float32Array([0])),y=new tc(c,u,p.shape.length,m.shape.length,h,f),g=n.runWebGLProgram(y,[m,p,b],m.dtype),x=Qr({inputs:{x:g},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),x}};class nc{constructor(t,e,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],o=[];for(let r=0;r<e.length;r++)o.push(`${n[r]}`),r<t&&i.push(`${n[r]}`);r=i.join(),s=o.join()}const i=ee(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const rc={kernelName:r.PhF,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:s,t:i,e:o}=e,a=new nc(s.shape.length,i.shape,i.shape.length);return n.runWebGLProgram(a,[s,i,o],(0,r.x8V)(i.dtype,o.dtype))}},sc=Wr({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${r.Wap.SELU_SCALEALPHA};\n  float scale = ${r.Wap.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),ic={kernelName:r.oFR,backendName:"webgl",kernelFunc:sc},oc=Wr({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),ac={kernelName:r.a5O,backendName:"webgl",kernelFunc:oc},uc=Wr({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),cc={kernelName:r.i5y,backendName:"webgl",kernelFunc:uc},lc=Wr({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),hc={kernelName:r.RQH,backendName:"webgl",kernelFunc:lc},dc=Wr({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),fc={kernelName:r.wYB,backendName:"webgl",kernelFunc:dc},pc=Wr({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),mc={kernelName:r.MRv,backendName:"webgl",kernelFunc:pc},bc={kernelName:r.TQc,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{blockShape:o,paddings:a}=s;r.D5U.hu(i.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const u=o.reduce(((t,e)=>t*e)),c=[[0,0]];c.push(...a);for(let t=1+o.length;t<i.shape.length;++t)c.push([0,0]);const l=[],h=$u({inputs:{x:i},backend:n,attrs:{paddings:c,constantValue:0}}),d=r.Wap.getReshaped(h.shape,o,u,!1),f=r.Wap.getPermuted(d.length,o.length,!1),p=r.Wap.getReshapedPermuted(h.shape,o,u,!1),m=Qr({inputs:{x:h},backend:n,attrs:{shape:d}}),b=us({inputs:{x:m},backend:n,attrs:{perm:f}}),y=Qr({inputs:{x:b},backend:n,attrs:{shape:p}});return l.push(h),l.push(m),l.push(b),l.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}};const yc={kernelName:r.D2d,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:i,sparseValues:o,defaultValue:a}=e,{outputShape:u}=s,{sliceRank:c,numUpdates:l,strides:h,outputSize:d}=r.Wap.calculateShapes(o,i,u),f=new tc(l,c,i.shape.length,o.shape.length,h,[d,1],!1),p=n.runWebGLProgram(f,[o,i,a],o.dtype),m=Qr({inputs:{x:p},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(p),m}};const gc={kernelName:r.L8s,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{numOrSizeSplits:o,axis:a}=s,u=r.D5U.EC(a,i.shape)[0],c=r.Wap.prepareSplitSize(i,o,u),l=i.shape.length,h=new Array(l).fill(0),d=i.shape.slice();return c.map((t=>{const e=[...d];e[u]=t;const r=si({inputs:{x:i},backend:n,attrs:{begin:h,size:e}});return h[u]+=t,r}))}},xc=Wr({opSnippet:"return sqrt(x);"}),wc={kernelName:r.FKq,backendName:"webgl",kernelFunc:xc},vc=Wr({opSnippet:"return x * x;"}),kc={kernelName:r.bK0,backendName:"webgl",kernelFunc:vc},$c="return (a - b) * (a - b);",Nc=Ur({opSnippet:$c,packedOpSnippet:$c}),Cc={kernelName:r._tC,backendName:"webgl",kernelFunc:Nc};const Ec={kernelName:r.h8e,backendName:"webgl",kernelFunc:function({inputs:t,attrs:e,backend:n}){const{x:r}=t,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${e.alpha});\n  `,i=new kr(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}};class Sc{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=ee(n.length),i=ee(n.length);let o="";if(1===r)o="coords * strides + begin";else{let t=0;o=n.map(((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${t});\n      ${s} strides = ${s}(${e});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}const Ac={kernelName:r.jQk,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{begin:o,end:a,strides:u,beginMask:c,endMask:l,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:f}=s,{nonStrided:p,$begin:m,$strides:b,size:y,newShape:g,outShape:x}=r.kuN.sliceInfo(i.shape,o,a,u,c,l,h,d,f),w=Qr({inputs:{x:i},backend:n,attrs:{shape:g}});let v;if(p){const t=si({inputs:{x:w},backend:n,attrs:{begin:m,size:y}});v=Qr({inputs:{x:t},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(t)}else if(x.some((t=>0===t)))v=n.makeTensorInfo(x,i.dtype,[]);else{if(n.shouldExecuteOnCPU([w])){const t=n.texData.get(w.dataId).values,e=(0,r.f3b)(w.shape,w.dtype,t),s=ur(x,e,b,m);v=n.makeTensorInfo(x,w.dtype,s.values)}else{const t=new Sc(m,b,x);v=n.runWebGLProgram(t,[w],w.dtype)}}const k=Qr({inputs:{x:v},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),k}},Rc=Wr({opSnippet:"return tan(x);"}),Tc={kernelName:r.sEM,backendName:"webgl",kernelFunc:Rc},Oc=Wr({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Ic={kernelName:r.MIZ,backendName:"webgl",kernelFunc:Oc};class Fc{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;const r=ee(this.rank),s=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let e=0;e<t.length;e++)r.push(`imod(${n[e]}, ${t[e]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function _c(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{reps:o}=s;if("string"===i.dtype){const t=n.readSync(i.dataId).map((t=>r.D5U.v5(t))),e=(0,r.f3b)(i.shape,i.dtype,t),s=lr(e,o);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const a=new Fc(i.shape,o);return n.runWebGLProgram(a,[i],i.dtype)}const Mc={kernelName:r.n9L,backendName:"webgl",kernelFunc:_c};const Dc={kernelName:r.cWu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:i,sorted:o}=r,a=n.readSync(s.dataId),[u,c]=hr(a,s.shape,s.dtype,i,o);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}};const Lc={kernelName:r.kpP,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:i}=e;vt(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=r.readSync(i.dataId),{outputValues:a,outputShape:u,indices:c}=fr(o,s,i.shape,i.dtype);return[r.makeTensorInfo(u,i.dtype,a),r.makeTensorInfo([c.length],"int32",c)]}};const Pc={kernelName:r.ToN,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:i}=r;i<0&&(i+=s.shape.length);const o=s,a=o.shape.length,u=s.shape[i],c=new Array(a-1);let l=0;for(let t=0;t<a;t++)t!==i&&(c[l++]=o.shape[t]);const h=[],d=new Array(a).fill(0),f=o.shape.slice();f[i]=1;const p=new Array(u);for(let t=0;t<p.length;t++){d[i]=t;const e=si({inputs:{x:o},backend:n,attrs:{begin:d,size:f}}),r=Qr({inputs:{x:e},backend:n,attrs:{shape:c}});p[t]=r,h.push(e)}return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}};class Vc{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,s=t.inSize,i=t.numSegments,o=i*Math.ceil(s/n);this.outputShape=[r,o];const a=4*Math.floor(n/4),u=n%4,c="\n        sumValue += dot(values, segFilter);\n    ";let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}const zc=[Ra,Oa,hs,fs,ms,ys,ws,$s,Ns,Cs,Os,Is,_s,Ds,zs,Ps,Ws,Hs,js,Js,Ys,Ks,ti,oi,ai,di,mi,gi,vi,Mr,Ti,Bi,Wi,Di,Gi,ji,Ui,qi,Ji,Ki,eo,no,so,lo,ho,ao,po,bo,go,xo,vo,$o,Eo,Ao,Oo,_o,Lo,Vo,Wo,Go,qo,Jo,Yo,Qo,ta,na,sa,Fr,ia,Ei,aa,ca,ha,Pr,fa,ma,ba,wa,ga,ka,Na,Ea,Fa,La,Da,za,Ba,Wa,Ma,Ua,Ga,Ha,Ja,Ka,ou,Kr,uu,lu,du,pu,ci,bu,xu,wu,Nu,Eu,Br,Su,Ru,hi,tu,Ou,Mu,Fu,Zr,Pu,zu,Wu,Gu,qu,Ju,Ku,Zu,ec,rc,ic,ac,cc,hc,fc,ii,iu,mc,bc,yc,gc,wc,kc,Cc,Ec,Ac,ru,as,Tc,Ic,Mc,Dc,cs,Lc,Pc,{kernelName:r.Qvg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i,segmentIds:o}=e,{numSegments:a}=s,u=i.shape.length,c=[];let l=0;const h=r.Wap.getAxesPermutation([l],u);let d=i;null!=h&&(d=us({inputs:{x:i},backend:n,attrs:{perm:h}}),c.push(d),l=r.Wap.getInnerMostAxes(1,u)[0]);const f=r.Wap.segment_util.computeOutShape(d.shape,l,a),p=r.D5U.NA([d.shape[l]]),m=Qr({inputs:{x:d},backend:n,attrs:{shape:[-1,p]}});c.push(m);const b=(0,r.z4k)(i.dtype),y=(t,e,s,i,o)=>{const a=t.shape[0],u=t.shape[1],l=r.Wap.segment_util.segOpComputeOptimalWindowSize(u,o),h=new Vc({windowSize:l,inSize:u,batchSize:a,numSegments:o},e),d=n.compileAndRun(h,[t,s],i);if(c.push(d),d.shape[1]===o)return d;const f=Au({backend:n,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),p=_c({inputs:{x:f},backend:n,attrs:{reps:[u/l]}});c.push(f),c.push(p);return y(d,e,p,i,o)},g=Qr({inputs:{x:y(m,"unsortedSegmentSum",o,b,a)},backend:n,attrs:{shape:f}});let x=g;if(null!=h){c.push(g);const t=r.Wap.getUndoAxesPermutation(h);x=us({inputs:{x},backend:n,attrs:{perm:t}})}return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),x}},gu];for(const t of zc)(0,r.wCN)(t);const Bc=r.GDt.ZA;class Wc extends r.Zuw{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new r.JLz(this,(0,r.SRH)())}write(t,e,n){this.firstUse&&(this.firstUse=!1,(0,r.OBj)().get("IS_NODE")&&r.Wap.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const s={};return this.data.set(s,{values:t,dtype:n,refCount:1}),s}makeTensorInfo(t,e,n){let s;if("string"===e&&null!=n&&n.length>0&&r.D5U.HD(n[0])){const i=n.map((t=>r.D5U.YW(t)));s=this.write(i,t,e)}else s=this.write(n,t,e);return{dataId:s,shape:t,dtype:e}}incRef(t){this.data.get(t).refCount++}decRef(t){if(this.data.has(t)){this.data.get(t).refCount--}}move(t,e,n,r){this.data.set(t,{values:e,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if("complex64"===e){const t=this.readSync(n.real.dataId),e=this.readSync(n.imag.dataId);return r.Wap.mergeRealAndImagArrays(t,e)}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>r.D5U.v5(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,r.f3b)(t.shape,t.dtype,n)}makeOutput(t,e,n){const s=this.write(t,e,n);return(0,r.SRH)().makeTensorFromDataId(s,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensorInfos:e}=this.data.get(t);null!=e&&(this.disposeData(e.real.dataId),this.disposeData(e.imag.dataId)),this.data.delete(t)}}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.data.has(e)){const t=this.data.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}async time(t){const e=r.D5U.zO();t();return{kernelMs:r.D5U.zO()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){ie([t],"where");const e=this.readSync(t.dataId);return Bc(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}(0,r.jqO)("cpu",(()=>new Wc),1);const Uc=Se(r.SX0,(t=>t>=0?t:Math.exp(t)-1)),Gc={kernelName:r.SX0,backendName:"cpu",kernelFunc:Uc};function jc(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{alpha:o}=s;ie([i],"leakyRelu");const a=r.D5U.NA(i.shape),u=n.data.get(i.dataId).values,c=r.D5U.WP("float32",a);for(let t=0;t<u.length;t++)c[t]=u[t]<0?o*u[t]:u[t];return n.makeTensorInfo(i.shape,"float32",c)}const Hc={kernelName:r.J$2,backendName:"cpu",kernelFunc:jc},qc=ue(((t,e)=>t<0?e*t:t));function Xc(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e;ie([r,s],"prelu");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,[a,u]=qc(r.shape,s.shape,i,o,r.dtype);return n.makeTensorInfo(u,r.dtype,a)}const Jc={kernelName:r.o0g,backendName:"cpu",kernelFunc:Xc},Yc=Se(r.qkr,(t=>Math.max(0,t))),Kc={kernelName:r.qkr,backendName:"cpu",kernelFunc:Yc},Qc=Se(r.SbG,(t=>Math.min(Math.max(0,t),6))),Zc={kernelName:r.SbG,backendName:"cpu",kernelFunc:Qc};function tl(t,e,n,r,s){if("linear"===n)return de({inputs:{x:e},backend:t});if("relu"===n)return Yc({inputs:{x:e},backend:t});if("elu"===n)return Uc({inputs:{x:e},backend:t});if("relu6"===n)return Qc({inputs:{x:e},backend:t});if("prelu"===n)return Xc({inputs:{x:e,alpha:r},backend:t});if("leakyrelu"===n)return jc({inputs:{x:e},backend:t,attrs:{alpha:s}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function el(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{shape:o}=s,a=r.D5U.NA(i.shape),u=r.D5U.JZ(o,a),c=r.D5U.NA(u);r.D5U.hu(a===c,(()=>`The new shape (${u}) has ${c} elements and the old shape (${i.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(i.dataId);const l=n.data.get(i.dataId);if(null!=l.complexTensorInfos){const t=l.complexTensorInfos.real,e=l.complexTensorInfos.imag;t.shape=u,e.shape=u}return{dataId:i.dataId,shape:u,dtype:i.dtype}}const nl={kernelName:r.HZH,backendName:"cpu",kernelFunc:el};function rl(t){const{inputs:e,backend:n,attrs:s}=t,{a:i,b:o}=e,{transposeA:a,transposeB:u}=s;ie([i,o],"matMul");const c=i.shape.length,l=o.shape.length,h=a?i.shape[c-2]:i.shape[c-1],d=u?o.shape[l-1]:o.shape[l-2],f=a?i.shape[c-1]:i.shape[c-2],p=u?o.shape[l-2]:o.shape[l-1],m=i.shape.slice(0,-2),b=o.shape.slice(0,-2),y=r.D5U.NA(m),g=r.D5U.NA(b),x=y===g||1===y||1===g;r.D5U.hu(c>=2&&l>=2&&x,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${b}).`));const w=(y>g?i.shape.slice(0,-2):o.shape.slice(0,-2)).concat([f,p]);r.D5U.hu(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${i.shape} and ${o.shape} and transposeA=${a} and transposeB=${u} must match.`));const v=u?[g,p,d]:[g,d,p],k=el({inputs:{x:i},backend:n,attrs:{shape:a?[y,h,f]:[y,f,h]}}),$=el({inputs:{x:o},backend:n,attrs:{shape:v}}),N=a?k.shape[1]:k.shape[2],C=a?k.shape[2]:k.shape[1],E=u?$.shape[1]:$.shape[2],S=Math.max(y,g),A=n.data.get(k.dataId).values,R=n.data.get($.dataId).values,T=r.D5U.e3(k.shape),O=r.D5U.e3($.shape),[I,F,_]=a?[T[0],1,T[1]]:[T[0],T[1],1],[M,D,L]=u?[1,O[1],O[0]]:[O[1],1,O[0]],P=C*E,V=(0,r.f3b)([S,C,E],k.dtype),z=V.values,B=n.blockSize;for(let t=0;t<S;t++)for(let e=0;e<C;e+=B)for(let n=0;n<E;n+=B)for(let r=0;r<N;r+=B){const s=Math.min(e+B,C),i=Math.min(n+B,E),o=Math.min(r+B,N);for(let a=e;a<s;a++)for(let e=n;e<i;e++){let n=0;for(let s=r;s<o;s++){const r=Math.min(t,y-1)*I,i=Math.min(t,g-1)*L;n+=A[r+a*F+s*_]*R[s*M+e*D+i]}z[t*P+(a*E+e)]+=n}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo($),n.makeTensorInfo(w,V.dtype,V.values)}const sl={kernelName:r.XLW,backendName:"cpu",kernelFunc:rl};const il={kernelName:r.usg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i,bias:o,preluActivationWeights:a}=e,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:h}=r;let d,f,p;const m=[];d=rl({inputs:{a:s,b:i},attrs:{transposeA:u,transposeB:c},backend:n}),o&&(f=ke({inputs:{a:d,b:o},backend:n}),m.push(d),d=f),l&&(p=tl(n,d,l,a,h),m.push(d),d=p);for(const t of m)n.disposeIntermediateTensorInfo(t);return d}},ol=Se(r.VGw,(t=>Math.acos(t))),al={kernelName:r.VGw,backendName:"cpu",kernelFunc:ol},ul=Se(r.SpW,(t=>Math.acosh(t))),cl={kernelName:r.SpW,backendName:"cpu",kernelFunc:ul};const ll={kernelName:r.Xze,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,s=e;ie(e,"addN");const i=s.map((t=>n.data.get(t.dataId).values)),o=(0,r.f3b)(s[0].shape,s[0].dtype),a=o.values;for(let t=0;t<s.length;t++){const e=i[t];for(let t=0;t<a.length;t++)a[t]+=e[t]}return n.makeTensorInfo(o.shape,o.dtype,o.values)}};const hl={kernelName:r.oT6,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{axis:o,keepDims:a}=s;ie(i,"all");const u=r.D5U.EC(o,i.shape);let c=u;const l=r.Wap.getAxesPermutation(c,i.shape.length);let h=i;null!=l&&(h=yn({inputs:{x:i},backend:n,attrs:{perm:l}}),c=r.Wap.getInnerMostAxes(c.length,i.shape.length)),r.Wap.assertAxesAreInnerMostDims("all",c,h.shape.length);const[d,f]=r.Wap.computeOutAndReduceShapes(h.shape,c),p=r.D5U.NA(f),m=r.D5U.wT(r.D5U.NA(d),h.dtype),b=n.data.get(h.dataId).values;for(let t=0;t<m.length;++t){const e=t*p;let n=b[e];for(let t=0;t<p;++t){const r=b[e+t];n=n&&r}m[t]=n}null!=l&&n.disposeIntermediateTensorInfo(h);const y=n.makeTensorInfo(d,h.dtype,m);if(a){const t=el({inputs:{x:y},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(d,u)}});return n.disposeIntermediateTensorInfo(y),t}return y}};const dl={kernelName:r.IKK,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{axis:o,keepDims:a}=s;ie(i,"any");const u=r.D5U.EC(o,i.shape);let c=u;const l=r.Wap.getAxesPermutation(c,i.shape.length);let h=i;null!=l&&(h=yn({inputs:{x:i},backend:n,attrs:{perm:l}}),c=r.Wap.getInnerMostAxes(c.length,i.shape.length)),r.Wap.assertAxesAreInnerMostDims("any",c,h.shape.length);const[d,f]=r.Wap.computeOutAndReduceShapes(h.shape,c),p=r.D5U.NA(f),m=r.D5U.wT(r.D5U.NA(d),h.dtype),b=n.data.get(h.dataId).values;for(let t=0;t<m.length;++t){const e=t*p;let n=b[e];for(let t=0;t<p;++t){const r=b[e+t];n=n||r}m[t]=n}null!=l&&n.disposeIntermediateTensorInfo(h);const y=n.makeTensorInfo(d,h.dtype,m);if(a){const t=el({inputs:{x:y},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(d,u)}});return n.disposeIntermediateTensorInfo(y),t}return y}};const fl={kernelName:r.sJF,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{axis:o}=s;ie(i,"argMax");let a=r.D5U.EC(o,i.shape);const u=r.Wap.getAxesPermutation(a,i.shape.length);let c=i;const l=[];null!=u&&(c=yn({inputs:{x:i},backend:n,attrs:{perm:u}}),l.push(c),a=r.Wap.getInnerMostAxes(a.length,c.shape.length)),a=[a[0]],r.Wap.assertAxesAreInnerMostDims("argMax",a,c.shape.length);const[h,d]=r.Wap.computeOutAndReduceShapes(c.shape,a),f=r.D5U.NA(h),p=r.D5U.wT(f,"int32"),m=r.D5U.NA(d),b=n.data.get(c.dataId).values;for(let t=0;t<p.length;++t){const e=t*m;let n=b[e],r=0;for(let t=0;t<m;++t){const s=b[e+t];s>n&&(n=s,r=t)}p[t]=r}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(h,"int32",p)}};const pl={kernelName:r.aJk,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{axis:o}=s;ie(i,"argMin");let a=r.D5U.EC(o,i.shape);const u=r.Wap.getAxesPermutation(a,i.shape.length);let c=i;const l=[];null!=u&&(c=yn({inputs:{x:i},backend:n,attrs:{perm:u}}),l.push(c),a=r.Wap.getInnerMostAxes(a.length,c.shape.length)),a=[a[0]],r.Wap.assertAxesAreInnerMostDims("argMin",a,c.shape.length);const[h,d]=r.Wap.computeOutAndReduceShapes(c.shape,a),f=r.D5U.NA(h),p=r.D5U.wT(f,"int32"),m=r.D5U.NA(d),b=n.data.get(c.dataId).values;for(let t=0;t<p.length;++t){const e=t*m;let n=b[e],r=0;for(let t=0;t<m;++t){const s=b[e+t];s<n&&(n=s,r=t)}p[t]=r}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(h,"int32",p)}},ml=Se(r.M2y,(t=>Math.asin(t))),bl={kernelName:r.M2y,backendName:"cpu",kernelFunc:ml},yl=Se(r.qw7,(t=>Math.asinh(t))),gl={kernelName:r.qw7,backendName:"cpu",kernelFunc:yl},xl=Se(r.jMg,(t=>Math.atan(t))),wl={kernelName:r.jMg,backendName:"cpu",kernelFunc:xl},vl=ue(((t,e)=>Math.atan2(t,e))),kl=ge(r.QCc,vl),$l={kernelName:r.QCc,backendName:"cpu",kernelFunc:kl},Nl=Se(r.Oyi,(t=>Math.atanh(t))),Cl={kernelName:r.Oyi,backendName:"cpu",kernelFunc:Nl};function El(t,e,n,s,i,o){const a=i.strideHeight,u=i.strideWidth,c=i.dilationHeight,l=i.dilationWidth,h=i.effectiveFilterHeight,d=i.effectiveFilterWidth,f=i.padInfo.top,p=i.padInfo.left,m="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=(0,r.f3b)(i.outShape,n),y=b.values,g=i.outShape[1]*i.outShape[2]*i.outShape[3],x=i.outShape[2]*i.outShape[3],w=i.outShape[3];for(let e=0;e<i.batchSize;++e){const n=e*g,r=e*s[0];for(let e=0;e<i.inChannels;++e)for(let b=0;b<i.outHeight;++b){const g=b*a-f,v=Math.max(0,g),k=Math.min(i.inHeight,h+g),$=n+b*x;for(let n=0;n<i.outWidth;++n){const a=n*u-p,h=Math.max(0,a),f=Math.min(i.inWidth,d+a);let b=m,g=0,x=0;for(let n=v;n<k;n+=c){const i=r+n*s[1];for(let n=h;n<f;n+=l){const r=t[i+n*s[2]+e];"max"===o&&r>b?b=r:"avg"===o&&(g+=r,x++)}if(isNaN(b))break}y[$+n*w+e]="avg"===o?g/x:b}}}return b}function Sl(t,e,n,s,i=!1,o=!1){const a=(0,r.f3b)(s.outShape,"int32"),u=s.strideHeight,c=s.strideWidth,l=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterHeight,f=s.effectiveFilterWidth,p=s.padInfo.top,m=s.padInfo.left,b=(0,r.f3b)(e,n,t);for(let t=0;t<s.batchSize;++t)for(let e=0;e<s.inChannels;++e)for(let n=0;n<s.outHeight;++n){const r=n*u-p;let y=r;for(;y<0;)y+=l;const g=Math.min(s.inHeight,d+r);for(let u=0;u<s.outWidth;++u){const d=u*c-m;let p=d;for(;p<0;)p+=h;const x=Math.min(s.inWidth,f+d);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<g;n+=l){const a=n-r;for(let r=p;r<x;r+=h){const u=r-d,c=b.get(t,n,r,e);c>w&&(w=c,v=i?o?((t*s.inHeight+n)*s.inWidth+r)*s.inChannels+e:(n*s.inWidth+r)*s.inChannels+e:a*f+u)}}a.set(v,t,n,u,e)}}return a}function Al(t,e,n,s,i,o){const a=i.strideDepth,u=i.strideHeight,c=i.strideWidth,l=i.dilationDepth,h=i.dilationHeight,d=i.dilationWidth,f=i.effectiveFilterDepth,p=i.effectiveFilterHeight,m=i.effectiveFilterWidth,b=i.padInfo.front,y=i.padInfo.top,g=i.padInfo.left,x="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=(0,r.f3b)(i.outShape,n),v=w.values,k=i.outShape[1]*i.outShape[2]*i.outShape[3]*i.outShape[4],$=i.outShape[2]*i.outShape[3]*i.outShape[4],N=i.outShape[3]*i.outShape[4],C=i.outShape[4];for(let e=0;e<i.batchSize;++e){const n=e*k,r=e*s[0];for(let e=0;e<i.inChannels;++e)for(let w=0;w<i.outDepth;++w){const k=w*a-b;let E=k;for(;E<0;)E+=l;const S=Math.min(i.inDepth,f+k),A=n+w*$;for(let n=0;n<i.outHeight;++n){const a=n*u-y;let f=a;for(;f<0;)f+=h;const b=Math.min(i.inHeight,p+a),w=A+n*N;for(let n=0;n<i.outWidth;++n){const a=n*c-g;let u=a;for(;u<0;)u+=d;const p=Math.min(i.inWidth,m+a),y=w+n*C;let k=x,$=0,N=0;for(let n=E;n<S;n+=l){const i=r+n*s[1];for(let n=f;n<b;n+=h){const r=i+n*s[2];for(let n=u;n<p;n+=d){const i=t[r+n*s[3]+e];if("max"===o&&i>k?k=i:"avg"===o&&($+=i,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[y+e]="avg"===o?$/N:k}}}}return w}const Rl={kernelName:r.JhU,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e;ie(i,"avgPool");const{filterSize:o,strides:a,pad:u,dimRoundingMode:c}=s;r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const l=r.Wap.computePool2DInfo(i.shape,o,a,1,u,c);let h;if(1===l.filterWidth&&1===l.filterHeight&&r.D5U.cO(l.inShape,l.outShape))h=de({inputs:{x:i},backend:n});else{const t=n.data.get(i.dataId).values,e=r.D5U.e3(i.shape),s=El(t,i.shape,i.dtype,e,l,"avg");h=n.makeTensorInfo(l.outShape,i.dtype,s.values)}return h}};const Tl={kernelName:r._k9,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{filterSize:o,strides:a,pad:u,dimRoundingMode:c,dataFormat:l,dilations:h}=s;ie(i,"avgPool3d");let d=h;null==d&&(d=[1,1,1]);const f=r.Wap.computePool3DInfo(i.shape,o,a,d,u,c,l),p=Al(n.data.get(i.dataId).values,i.shape,i.dtype,r.D5U.e3(i.shape),f,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}};const Ol={kernelName:r.IMb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:i,input:o}=e,{filterSize:a,strides:u,pad:c,dilations:l,dimRoundingMode:h}=s;ie([i,o],"avgPool3DGrad");const d=r.Wap.computePool3DInfo(o.shape,a,u,l,c,h),f=d.strideDepth,p=d.strideHeight,m=d.strideWidth,b=d.filterDepth,y=d.filterHeight,g=d.filterWidth,x=d.dilationDepth,w=d.dilationHeight,v=d.dilationWidth,k=d.effectiveFilterDepth,$=d.effectiveFilterHeight,N=d.effectiveFilterWidth,C=k-1-d.padInfo.front,E=N-1-d.padInfo.left,S=$-1-d.padInfo.top,A=(0,r.f3b)(o.shape,"float32"),R=1/(b*y*g),T=n.bufferSync(i);for(let t=0;t<d.batchSize;++t)for(let e=0;e<d.inChannels;++e)for(let n=0;n<d.inDepth;++n)for(let r=0;r<d.inHeight;++r)for(let s=0;s<d.inWidth;++s){const i=n-C,o=r-S,a=s-E;let u=0;for(let n=0;n<k;n+=x){const r=(i+n)/f;if(!(r<0||r>=d.outDepth||Math.floor(r)!==r))for(let n=0;n<$;n+=w){const s=(o+n)/p;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let n=0;n<N;n+=v){const i=(a+n)/m;if(i<0||i>=d.outWidth||Math.floor(i)!==i)continue;u+=T.get(t,r,s,i,e)}}}A.set(u*R,t,n,r,s,e)}return n.makeTensorInfo(A.shape,A.dtype,A.values)}};const Il={kernelName:r.ROF,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:i,input:o}=e,a=o;ie([i,o],"avgPoolGrad");const{filterSize:u,strides:c,pad:l}=s,h=r.Wap.computePool2DInfo(a.shape,u,c,1,l),d=h.strideHeight,f=h.strideWidth,p=h.filterHeight,m=h.filterWidth,b=h.dilationHeight,y=h.dilationWidth,g=h.effectiveFilterHeight,x=h.effectiveFilterWidth,w=x-1-h.padInfo.left,v=g-1-h.padInfo.top,k=(0,r.f3b)(a.shape,"float32"),$=1/(p*m),N=n.data.get(i.dataId).values,C=(0,r.f3b)(i.shape,"float32",N);for(let t=0;t<h.batchSize;++t)for(let e=0;e<h.inChannels;++e)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const s=n-v,i=r-w;let o=0;for(let n=0;n<g;n+=b){const r=(s+n)/d;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let n=0;n<x;n+=y){const s=(i+n)/f;if(s<0||s>=h.outWidth||Math.floor(s)!==s)continue;o+=C.get(t,r,s,e)}}k.set(o*$,t,n,r,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};const Fl={kernelName:r.sHE,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i,scale:o,offset:a,mean:u,variance:c}=e;r.D5U.hu(u.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),r.D5U.hu(null==a||u.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),r.D5U.hu(null==o||u.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),ie([i,u,c,o,a],"batchNorm");let{varianceEpsilon:l}=s;null==l&&(l=.001);const h=n.data.get(i.dataId).values,d=n.data.get(u.dataId).values,f=n.data.get(c.dataId).values,p=o?n.data.get(o.dataId).values:new Float32Array([1]),m=a?n.data.get(a.dataId).values:new Float32Array([0]),b=new Float32Array(h.length),y=m.length,g=p.length,x=f.length,w=d.length;let v=0,k=0,$=0,N=0;for(let t=0;t<h.length;++t)b[t]=m[v++]+(h[t]-d[k++])*p[$++]/Math.sqrt(f[N++]+l),v>=y&&(v=0),k>=w&&(k=0),$>=g&&($=0),N>=x&&(N=0);return n.makeTensorInfo(i.shape,i.dtype,b)}};const _l={kernelName:r.zws,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{blockShape:o,crops:a}=s;ie([i],"batchToSpaceND");const u=o.reduce(((t,e)=>t*e)),c=r.Wap.getReshaped(i.shape,o,u),l=r.Wap.getPermuted(c.length,o.length),h=r.Wap.getReshapedPermuted(i.shape,o,u),d=r.Wap.getSliceBeginCoords(a,o.length),f=r.Wap.getSliceSize(h,a,o.length),p=el({inputs:{x:i},backend:n,attrs:{shape:c}}),m=yn({inputs:{x:p},backend:n,attrs:{perm:l}}),b=el({inputs:{x:m},backend:n,attrs:{shape:h}}),y=En({inputs:{x:b},backend:n,attrs:{begin:d,size:f}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),y}};const Ml={kernelName:r.zvY,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:o}=r,a=Ne(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,a)}},Dl=Se(r.xnO,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),Ll={kernelName:r.xnO,backendName:"cpu",kernelFunc:Dl},Pl={kernelName:r.yj2,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,s=new Float32Array(r.D5U.NA(e.shape)),i=n.data.get(e.dataId),o=i.complexTensorInfos.real,a=i.complexTensorInfos.imag,u=n.data.get(o.dataId).values,c=n.data.get(a.dataId).values;for(let t=0;t<u.length;t++){const e=u[t],n=c[t];s[t]=Math.hypot(e,n)}return n.makeOutput(s,e.shape,"float32")}};function Vl(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.imag,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const zl={kernelName:r.J_u,backendName:"cpu",kernelFunc:Vl};function Bl(t){const{inputs:e,backend:n,attrs:s}=t,{axis:i}=s,o=r.D5U.EC(i,e[0].shape)[0];let a=r.Wap.computeOutShape(e.map((t=>t.shape)),o);if(0===r.D5U.NA(a))return n.makeTensorInfo(a,e[0].dtype,[]);const u=e.filter((t=>r.D5U.NA(t.shape)>0));if(1===u.length)return de({inputs:{x:u[0]},backend:n});const c=u.map((t=>t.shape));if(r.Wap.assertParamsConsistent(c,o),"complex64"===u[0].dtype){const t=u.map((t=>pe({inputs:{input:t},backend:n}))),e=u.map((t=>Vl({inputs:{input:t},backend:n}))),r=Bl({inputs:t,backend:n,attrs:{axis:o}}),s=Bl({inputs:e,backend:n,attrs:{axis:o}}),i=ce({inputs:{real:r,imag:s},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const l=u.map((t=>{const e=r.D5U.NA(t.shape.slice(o));return el({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})})),h=l.map((t=>({vals:n.data.get(t.dataId).values,shape:t.shape})));a=r.Wap.computeOutShape(l.map((t=>t.shape)),1);const d=1===l[0].shape[0],f=Ie(h,a,e[0].dtype,d),p=r.Wap.computeOutShape(u.map((t=>t.shape)),o),m=n.makeTensorInfo(p,e[0].dtype,f);return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),m}const Wl={kernelName:r.Eh3,backendName:"cpu",kernelFunc:Bl};function Ul(t){const{inputs:e,backend:n,attrs:s}=t,{x:i,filter:o}=e,{strides:a,pad:u,dataFormat:c,dilations:l,dimRoundingMode:h}=s;ie([i,o],"conv2d");const d=r.Wap.convertConv2DDataFormat(c),f=r.Wap.computeConv2DInfo(i.shape,o.shape,a,l,u,h,!1,d),p=f.filterHeight,m=f.filterWidth,b=f.dilationHeight,y=f.dilationWidth,g=f.padInfo.left,x=f.padInfo.top,w="channelsLast"===f.dataFormat,v=new r.YDk(f.outShape,i.dtype),k=r.D5U.e3(i.shape),$=r.D5U.e3(o.shape),N=k[0],C=w?k[1]:k[2],E=w?k[2]:1,S=w?1:k[1],A=v.strides[0],R=w?v.strides[1]:v.strides[2],T=w?v.strides[2]:1,O=w?1:v.strides[1],I=n.data.get(i.dataId).values,F=n.data.get(o.dataId).values,_=v.values;for(let t=0;t<f.batchSize;++t){const e=t*N,n=t*A;for(let t=0;t<f.outHeight;++t){const r=n+t*R,s=t*f.strideHeight-x;for(let t=0;t<p;++t){const n=s+t*b;if(n<0||n>=f.inHeight)continue;const i=t*$[0],o=e+n*C;for(let t=0;t<f.outWidth;++t){const e=r+t*T,n=t*f.strideWidth-g;for(let t=0;t<m;++t){const r=n+t*y;if(r<0||r>=f.inWidth)continue;const s=o+r*E;let a=i+t*$[1];for(let t=0;t<f.inChannels;++t){const n=I[s+t*S];for(let t=0;t<f.outChannels;++t)_[e+t*O]+=n*F[a+t];a+=f.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,_)}const Gl={kernelName:r.mhS,backendName:"cpu",kernelFunc:Ul};const jl={kernelName:r.wUP,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i,dy:o}=e,{strides:a,pad:u,dataFormat:c,dimRoundingMode:l,filterShape:h}=s;ie([i,o],"conv2dBackpropFilter");const d=r.Wap.convertConv2DDataFormat(c),f=r.Wap.computeConv2DInfo(i.shape,h,a,1,u,l,!1,d),{strideHeight:p,strideWidth:m,filterHeight:b,filterWidth:y}=f,g="channelsLast"===f.dataFormat,x=new r.YDk(f.filterShape,"float32"),w=f.padInfo.left,v=f.padInfo.top,k=n.data.get(i.dataId).values,$=n.data.get(o.dataId).values,N=new r.YDk(i.shape,i.dtype,k),C=new r.YDk(o.shape,o.dtype,$);for(let t=0;t<b;++t){const e=Math.max(0,Math.ceil((v-t)/p)),n=Math.min(f.outHeight,(f.inHeight+v-t)/p);for(let r=0;r<y;++r){const s=Math.max(0,Math.ceil((w-r)/m)),i=Math.min(f.outWidth,(f.inWidth+w-r)/m);for(let o=0;o<f.inChannels;++o)for(let a=0;a<f.outChannels;++a){let u=0;for(let c=0;c<f.batchSize;++c)for(let l=e;l<n;++l){const e=t+l*p-v;for(let t=s;t<i;++t){const n=r+t*m-w;u+=g?N.get(c,e,n,o)*C.get(c,l,t,a):N.get(c,o,e,n)*C.get(c,a,l,t)}}x.set(u,t,r,o,a)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const Hl={kernelName:r.wm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:i,filter:o}=e,{inputShape:a,strides:u,pad:c,dataFormat:l,dimRoundingMode:h}=s;ie([i,o],"conv2dBackpropInput");const d=r.D5U.e3(o.shape),f=r.D5U.e3(i.shape);let p=r.Wap.convertConv2DDataFormat(l);const m=r.Wap.computeConv2DInfo(a,o.shape,u,1,c,h,!1,p),b=new r.YDk(m.inShape,"float32"),y=b.values,g=n.data.get(i.dataId).values,x=n.data.get(o.dataId).values,[w,v,k]=d,{batchSize:$,filterHeight:N,filterWidth:C,inChannels:E,inHeight:S,inWidth:A,outChannels:R,outHeight:T,outWidth:O,strideHeight:I,strideWidth:F}=m;p=m.dataFormat;const _=N-1-m.padInfo.top,M=C-1-m.padInfo.left,D="channelsLast"===p,L=b.strides[0],P=D?b.strides[1]:b.strides[2],V=D?b.strides[2]:1,z=D?1:b.strides[1],B=f[0],W=D?f[1]:f[2],U=D?f[2]:1,G=D?1:f[1];for(let t=0;t<$;++t)for(let e=0;e<E;++e)for(let n=0;n<S;++n){const r=n-_,s=Math.max(0,Math.ceil(r/I)),i=Math.min(T,(N+r)/I);for(let o=0;o<A;++o){const a=o-M,u=Math.max(0,Math.ceil(a/F)),c=Math.min(O,(C+a)/F);let l=0;for(let n=s;n<i;++n){const s=n*I-r;for(let r=u;r<c;++r){const i=B*t+W*n+U*r,o=w*(N-1-s)+v*(C-1-(r*F-a))+k*e;for(let t=0;t<R;++t){l+=g[i+G*t]*x[o+t]}}}y[L*t+P*n+V*o+z*e]=l}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const ql={kernelName:r.x12,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i,filter:o}=e,{strides:a,pad:u,dilations:c}=s;ie([i,o],"conv3d");const l=r.Wap.computeConv3DInfo(i.shape,o.shape,a,c,u),{filterDepth:h,filterHeight:d,filterWidth:f,dilationDepth:p,dilationHeight:m,dilationWidth:b,padInfo:y}=l,g=y.front,x=y.left,w=y.top,v=new r.YDk(l.outShape,i.dtype),k=n.data.get(i.dataId).values,$=n.data.get(o.dataId).values,N=v.values,C=r.D5U.e3(i.shape),E=r.D5U.e3(o.shape);for(let t=0;t<l.batchSize;++t){const e=t*C[0],n=t*v.strides[0];for(let t=0;t<l.outDepth;++t){const r=n+t*v.strides[1],s=t*l.strideDepth-g;for(let t=0;t<h;++t){const n=s+t*p;if(n<0||n>=l.inDepth)continue;const i=t*E[0],o=e+n*C[1];for(let t=0;t<l.outHeight;++t){const e=r+t*v.strides[2],n=t*l.strideHeight-w;for(let t=0;t<d;++t){const r=n+t*m;if(r<0||r>=l.inHeight)continue;const s=i+t*E[1],a=o+r*C[2];for(let t=0;t<l.outWidth;++t){const n=e+t*l.outChannels,r=t*l.strideWidth-x;for(let t=0;t<f;++t){const e=r+t*b;if(e<0||e>=l.inWidth)continue;const i=s+t*E[2],o=a+e*l.inChannels;let u=i;for(let t=0;t<l.inChannels;++t){const e=k[o+t];for(let t=0;t<l.outChannels;++t)N[n+t]+=e*$[u+t];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const Xl={kernelName:r.o2y,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i,dy:o}=e,{strides:a,pad:u,filterShape:c}=s;ie([i,o],"conv3dBackpropFilterV2");const l=r.D5U.e3(i.shape),h=r.D5U.e3(o.shape),d=r.Wap.computeConv3DInfo(i.shape,c,a,1,u),f=d.strideDepth,p=d.strideHeight,m=d.strideWidth,b=d.filterDepth,y=d.filterHeight,g=d.filterWidth,x=new r.YDk(d.filterShape,"float32"),w=x.values,[v,k,$,N]=x.strides,C=n.data.get(o.dataId).values,[E,S,A,R]=h,T=n.data.get(i.dataId).values,[O,I,F,_]=l,M=d.padInfo.front,D=d.padInfo.left,L=d.padInfo.top;for(let t=0;t<b;++t){const e=Math.max(0,Math.ceil((M-t)/f)),n=Math.min(d.outDepth,(d.inDepth+M-t)/f),r=t*v;for(let s=0;s<y;++s){const i=Math.max(0,Math.ceil((L-s)/p)),o=Math.min(d.outHeight,(d.inHeight+L-s)/p),a=s*k+r;for(let r=0;r<g;++r){const u=Math.max(0,Math.ceil((D-r)/m)),c=Math.min(d.outWidth,(d.inWidth+D-r)/m),l=r*$+a;for(let a=0;a<d.inChannels;++a){const h=a*N+l;for(let l=0;l<d.outChannels;++l){let b=0;for(let h=0;h<d.batchSize;++h){const d=h*O,y=h*E;for(let h=e;h<n;++h){const e=(t+h*f-M)*I+d,n=h*S+y;for(let t=i;t<o;++t){const i=(s+t*p-L)*F+e,o=t*A+n;for(let t=u;t<c;++t){const e=t*R+o;b+=T[(r+t*m-D)*_+i+a]*C[e+l]}}}}w[h+l]=b}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const Jl={kernelName:r.ik2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:i,filter:o}=e,{pad:a,strides:u,inputShape:c}=s;ie([i],"conv3dBackpropInputV2");const l=r.D5U.e3(i.shape),h=r.D5U.e3(o.shape),d=r.Wap.computeConv3DInfo(c,o.shape,u,1,a),f=new r.YDk(d.inShape,"float32"),p=f.values,[m,b,y,g]=f.strides,x=n.data.get(i.dataId).values,[w,v,k,$]=l,N=n.data.get(o.dataId).values,[C,E,S,A]=h,{batchSize:R,filterDepth:T,filterHeight:O,filterWidth:I,inChannels:F,inDepth:_,inHeight:M,inWidth:D,outChannels:L,outDepth:P,outHeight:V,outWidth:z,strideDepth:B,strideHeight:W,strideWidth:U}=d,G=T-1-d.padInfo.front,j=O-1-d.padInfo.top,H=I-1-d.padInfo.left;for(let t=0;t<R;++t)for(let e=0;e<F;++e)for(let n=0;n<_;++n){const r=n-G,s=Math.max(0,Math.ceil(r/B)),i=Math.min(P,(T+r)/B);for(let o=0;o<M;++o){const a=o-j,u=Math.max(0,Math.ceil(a/W)),c=Math.min(V,(O+a)/W);for(let l=0;l<D;++l){const h=l-H,d=Math.max(0,Math.ceil(h/U)),f=Math.min(z,(I+h)/U);let R=0;for(let n=s;n<i;++n){const s=n*B-r;for(let r=u;r<c;++r){const i=r*W-a;for(let o=d;o<f;++o){const a=w*t+v*n+k*r+$*o,u=C*(T-1-s)+E*(O-1-i)+S*(I-1-(o*U-h))+A*e;for(let t=0;t<L;++t){R+=x[a+t]*N[u+t]}}}}p[m*t+b*n+y*o+g*l+e]=R}}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Yl=Se(r.mc4,(t=>Math.cos(t))),Kl={kernelName:r.mc4,backendName:"cpu",kernelFunc:Yl},Ql=Se(r.TR1,(t=>Math.cosh(t))),Zl={kernelName:r.TR1,backendName:"cpu",kernelFunc:Ql};const th={kernelName:r.VcC,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{image:i,boxes:o,boxInd:a}=e,{cropSize:u,method:c,extrapolationValue:l}=s,[h,d,f,p]=i.shape,m=o.shape[0],[b,y]=u,g=(0,r.f3b)([m,b,y,p],"float32"),x=n.data.get(o.dataId).values,w=n.data.get(a.dataId).values,v=n.data.get(i.dataId).values,k=r.D5U.e3(i.shape),$=r.D5U.e3(g.shape);for(let t=0;t<m;t++){const e=4*t,n=x[e],r=x[e+1],s=x[e+2],i=x[e+3],o=w[t];if(o>=h)continue;const a=b>1?(s-n)*(d-1)/(b-1):0,u=y>1?(i-r)*(f-1)/(y-1):0;for(let e=0;e<b;e++){const h=b>1?n*(d-1)+e*a:.5*(n+s)*(d-1);if(h<0||h>d-1)for(let n=0;n<y;n++)for(let r=0;r<p;r++){const s=r+n*$[2]+e*$[1]+t*$[0];g.values[s]=l}else if("bilinear"===c){const n=Math.floor(h),s=Math.ceil(h),a=h-n;for(let c=0;c<y;c++){const h=y>1?r*(f-1)+c*u:.5*(r+i)*(f-1);if(h<0||h>f-1){for(let n=0;n<p;n++){const r=n+c*$[2]+e*$[1]+t*$[0];g.values[r]=l}continue}const d=Math.floor(h),m=Math.ceil(h),b=h-d;for(let r=0;r<p;r++){let i=r+d*k[2]+n*k[1]+o*k[0];const u=v[i];i=r+m*k[2]+n*k[1]+o*k[0];const l=v[i];i=r+d*k[2]+s*k[1]+o*k[0];const h=v[i];i=r+m*k[2]+s*k[1]+o*k[0];const f=u+(l-u)*b,p=h+(v[i]-h)*b;i=r+c*$[2]+e*$[1]+t*$[0],g.values[i]=f+(p-f)*a}}}else for(let n=0;n<y;++n){const s=y>1?r*(f-1)+n*u:.5*(r+i)*(f-1);if(s<0||s>f-1){for(let r=0;r<p;r++){const s=r+n*$[2]+e*$[1]+t*$[0];g.values[s]=l}continue}const a=Math.round(s),c=Math.round(h);for(let r=0;r<p;r++){const s=r+a*k[2]+c*k[1]+o*k[0],i=r+n*$[2]+e*$[1]+t*$[0];g.values[i]=v[s]}}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const eh={kernelName:r.iHb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{axis:o,exclusive:a,reverse:u}=s;ie(i,"cumsum");const c=r.Wap.getAxesPermutation([o],i.shape.length);let l=i;null!=c&&(l=yn({inputs:{x:i},backend:n,attrs:{perm:c}}));const h=r.Wap.getInnerMostAxes(1,i.shape.length)[0];if(h!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${h}`);const d=(0,r.x8V)(l.dtype,"int32"),f=r.D5U.wT(r.D5U.NA(l.shape),d),p=n.data.get(l.dataId).values,m=l.shape[l.shape.length-1],b=u?(t,e)=>t+m-e-1:(t,e)=>t+e;for(let t=0;t<p.length;t+=m)for(let e=0;e<m;e++){const n=b(t,e);if(0===e)f[n]=a?0:p[n];else{const r=b(t,e-1);f[n]=a?p[r]+f[r]:p[n]+f[r]}}const y=n.makeTensorInfo(l.shape,d,f);if(null!=c){const t=yn({inputs:{x:y},backend:n,attrs:{perm:r.Wap.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(l),t}return y}};const nh={kernelName:r.QRR,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:o,binaryOutput:a}=r;if(1===s.shape.length){const t=Ne(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,t)}if(2===s.shape.length){const t=Ce(n.bufferSync(s),n.bufferSync(i),o,a);return n.makeTensorInfo(t.shape,i.dtype,t.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};const rh={kernelName:r.T0n,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{blockSize:o,dataFormat:a}=s;r.D5U.hu("NHWC"===a,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`)),r.D5U.hu(o>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${o}`));const u=i.shape[0],c=i.shape[1],l=i.shape[2],h=i.shape[3],d=c*o,f=l*o,p=h/(o*o),m=n.data.get(i.dataId).values,b=new Float32Array(u*d*f*p);let y=0;for(let t=0;t<u;++t)for(let e=0;e<d;++e){const n=Math.floor(e/o),r=e%o;for(let e=0;e<f;++e){const s=Math.floor(e/o),i=(r*o+e%o)*p;for(let e=0;e<p;++e){const r=e+i+h*(s+l*(n+c*t));b[y++]=m[r]}}}return n.makeTensorInfo([u,d,f,p],i.dtype,b)}};function sh(t){const{inputs:e,backend:n,attrs:s}=t,{x:i,filter:o}=e,{strides:a,pad:u,dilations:c,dimRoundingMode:l}=s;ie([i,o],"depthwiseConv2DNative");const h=r.D5U.e3(i.shape),d=r.D5U.e3(o.shape);let f=c;null==f&&(f=[1,1]),r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(a,f),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${f}'`));const p=r.Wap.computeConv2DInfo(i.shape,o.shape,a,f,u,l,!0),{filterHeight:m,filterWidth:b,dilationHeight:y,dilationWidth:g,padInfo:x}=p,w=x.left,v=x.top,k=p.outChannels/p.inChannels,$=new r.YDk(p.outShape,i.dtype),N=n.data.get(i.dataId).values,C=n.data.get(o.dataId).values,E=$.values;for(let t=0;t<p.batchSize;++t){const e=t*h[0],n=t*$.strides[0];for(let t=0;t<p.outHeight;++t){const r=n+t*$.strides[1],s=t*p.strideHeight-w;for(let t=0;t<m;++t){const n=s+t*y;if(n<0||n>=p.inHeight)continue;const i=t*d[0],o=e+n*h[1];for(let t=0;t<p.outWidth;++t){const e=r+t*$.strides[2],n=t*p.strideWidth-v;for(let t=0;t<b;++t){const r=n+t*g;if(r<0||r>=p.inWidth)continue;const s=i+t*d[1],a=o+r*p.inChannels;let u=e,c=s;for(let t=0;t<p.inChannels;++t){const e=N[a+t];for(let t=0;t<k;++t)E[u+t]+=e*C[c+t];u+=k,c+=k}}}}}}return n.makeTensorInfo($.shape,$.dtype,$.values)}const ih={kernelName:r.cie,backendName:"cpu",kernelFunc:sh};const oh={kernelName:r.sL$,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i,dy:o}=e,{strides:a,dilations:u,pad:c,dimRoundingMode:l,filterShape:h}=s;ie([i,o],"depthwiseConv2dNativeBackpropFilter");const d=r.Wap.computeConv2DInfo(i.shape,h,a,u,c,l,!0),{strideHeight:f,strideWidth:p,filterHeight:m,filterWidth:b}=d,y=new r.YDk(d.filterShape,"float32"),g=d.padInfo.left,x=d.padInfo.top,w=d.outChannels/d.inChannels,v=n.data.get(i.dataId).values,k=new r.YDk(i.shape,i.dtype,v),$=n.data.get(o.dataId).values,N=new r.YDk(o.shape,o.dtype,$);for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((x-t)/f)),n=Math.min(d.outHeight,(d.inHeight+x-t)/f);for(let r=0;r<b;++r){const s=Math.max(0,Math.ceil((g-r)/p)),i=Math.min(d.outWidth,(d.inWidth+g-r)/p);for(let o=0;o<d.outChannels;++o){const a=Math.trunc(o/w),u=o%w;let c=0;for(let u=0;u<d.batchSize;++u)for(let l=e;l<n;++l){const e=t+l*f-x;for(let t=s;t<i;++t){const n=r+t*p-g;c+=k.get(u,e,n,a)*N.get(u,l,t,o)}}y.set(c,t,r,a,u)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const ah={kernelName:r.y7R,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:i,filter:o}=e,{strides:a,dilations:u,pad:c,dimRoundingMode:l,inputShape:h}=s;ie([i,o],"depthwiseConv2DNativeBackpropInput");const d=r.D5U.e3(i.shape),f=r.D5U.e3(o.shape),p=r.Wap.computeConv2DInfo(h,o.shape,a,u,c,l,!0),m=new r.YDk(p.inShape,"float32"),b=m.values,[y,g,x]=m.strides,w=n.data.get(i.dataId).values,[v,k,$]=d,N=n.data.get(o.dataId).values,[C,E,S]=f,{batchSize:A,filterHeight:R,filterWidth:T,inChannels:O,inHeight:I,inWidth:F,outChannels:_,outHeight:M,outWidth:D,strideHeight:L,strideWidth:P}=p,V=R-1-p.padInfo.top,z=T-1-p.padInfo.left,B=_/O;for(let t=0;t<A;++t)for(let e=0;e<O;++e)for(let n=0;n<I;++n){const r=n-V,s=Math.max(0,Math.ceil(r/L)),i=Math.min(M,(R+r)/L);for(let o=0;o<F;++o){const a=o-z,u=Math.max(0,Math.ceil(a/P)),c=Math.min(D,(T+a)/P);let l=0;for(let n=s;n<i;++n){const s=n*L-r;for(let r=u;r<c;++r){const i=v*t+k*n+$*r,o=C*(R-1-s)+E*(T-1-(r*P-a))+S*e;for(let t=0;t<B;++t){l+=w[i+(e*B+t)]*N[o+t]}}}b[y*t+g*n+x*o+e]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const uh={kernelName:r.$w,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e,i=r.D5U.NA(s.shape),o=n.data.get(s.dataId).values,a=(0,r.f3b)([i,i],s.dtype),u=a.values;for(let t=0;t<o.length;t++)u[t*i+t]=o[t];const c=[...s.shape,...s.shape];return n.makeTensorInfo(c,a.dtype,a.values)}},ch={kernelName:r.p4S,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:i}=t,{strides:o,pad:a,dilations:u}=n,c=e,l=c.data.get(s.dataId).values,h=s.shape.length,d=c.data.get(i.dataId).values,f=i.shape.length,{batchSize:p,inHeight:m,inWidth:b,inChannels:y,outHeight:g,outWidth:x,padInfo:w,strideHeight:v,strideWidth:k,filterHeight:$,filterWidth:N,dilationHeight:C,dilationWidth:E,outShape:S}=r.Wap.computeDilation2DInfo(s.shape,i.shape,o,a,"NHWC",u),A=r.D5U.NA(S),R=S.length,T=r.D5U.rQ(s.dtype,A);for(let t=0;t<p;++t)for(let e=0;e<g;++e){const n=e*v-w.top;for(let o=0;o<x;++o){const a=o*k-w.left;for(let u=0;u<y;++u){let c=Number.MIN_SAFE_INTEGER;for(let e=0;e<$;++e){const o=n+e*C;if(o>=0&&o<m)for(let n=0;n<N;++n){const p=a+n*E;if(p>=0&&p<b){const a=r.D5U.qy([t,o,p,u],h,r.D5U.e3(s.shape)),m=r.D5U.qy([e,n,u],f,r.D5U.e3(i.shape)),b=l[a]+d[m];b>c&&(c=b)}}}T[r.D5U.qy([t,e,o,u],R,r.D5U.e3(S))]=c}}}return{dataId:c.write(r.D5U.Os(T,s.dtype),S,s.dtype),shape:S,dtype:s.dtype}}},lh={kernelName:r.Vn9,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:i,dy:o}=t,{strides:a,pad:u,dilations:c}=n,l=e,h=r.D5U.GX(s.shape,l.data.get(s.dataId).values),d=r.D5U.GX(i.shape,l.data.get(i.dataId).values),{batchSize:f,inHeight:p,inWidth:m,inChannels:b,outHeight:y,outWidth:g,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:$,dilationHeight:N,dilationWidth:C,outShape:E}=r.Wap.computeDilation2DInfo(s.shape,i.shape,a,u,"NHWC",c);r.D5U.hu(o.rank===E.length,(()=>`Error in ${r.Vn9}, dy must have the same rank as output ${E.length}, but got ${o.rank}`));const S=r.D5U.GX(E,l.data.get(o.dataId).values),A=r.D5U.l6(i.shape,i.dtype);for(let t=0;t<f;++t)for(let e=0;e<y;++e){const n=e*w-x.top;for(let r=0;r<g;++r){const s=r*v-x.left;for(let i=0;i<b;++i){let o=Number.MIN_SAFE_INTEGER,a=0,u=0;for(let e=0;e<k;++e){const r=n+e*N;if(r>=0&&r<p)for(let n=0;n<$;++n){const c=s+n*C;if(c>=0&&c<m){const s=h[t][r][c][i]+d[e][n][i];s>o&&(o=s,a=e,u=n)}}}A[a][u][i]+=S[t][e][r][i]}}}return{dataId:l.write(r.D5U.Os(A,s.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}},hh={kernelName:r.ekb,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:i,dy:o}=t,{strides:a,pad:u,dilations:c}=n,l=e,h=r.D5U.GX(s.shape,l.data.get(s.dataId).values),d=r.D5U.GX(i.shape,l.data.get(i.dataId).values),{batchSize:f,inHeight:p,inWidth:m,inChannels:b,outHeight:y,outWidth:g,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:$,dilationHeight:N,dilationWidth:C,outShape:E}=r.Wap.computeDilation2DInfo(s.shape,i.shape,a,u,"NHWC",c);r.D5U.hu(o.rank===E.length,(()=>`Error in ${r.ekb}, dy must have the same rank as output ${E.length}, but got ${o.rank}`));const S=r.D5U.GX(E,l.data.get(o.dataId).values),A=r.D5U.l6(s.shape,s.dtype);for(let t=0;t<f;++t)for(let e=0;e<y;++e){const n=e*w-x.top;for(let r=0;r<g;++r){const s=r*v-x.left;for(let i=0;i<b;++i){let o=Number.MIN_SAFE_INTEGER,a=n<0?0:n,u=s<0?0:s;for(let e=0;e<k;++e){const r=n+e*N;if(r>=0&&r<p)for(let n=0;n<$;++n){const c=s+n*C;if(c>=0&&c<m){const s=h[t][r][c][i]+d[e][n][i];s>o&&(o=s,a=r,u=c)}}}A[t][a][u][i]+=S[t][e][r][i]}}}return{dataId:l.write(r.D5U.Os(A,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};const dh={kernelName:r.HEU,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:s,y:i}=e;ie([s,i],"eluGrad");const o=new Float32Array(r.D5U.NA(i.shape)),a=n.data.get(i.dataId).values,u=n.data.get(s.dataId).values;for(let t=0;t<a.length;++t){const e=a[t];o[t]=e>=1?u[t]:u[t]*(e+1)}return n.makeTensorInfo(i.shape,"float32",o)}},fh=ue(((t,e)=>t===e?1:0)),ph=ge(r.hdR,fh,null,"bool"),mh={kernelName:r.hdR,backendName:"cpu",kernelFunc:ph},bh=r.Wap.ERF_P,yh=r.Wap.ERF_A1,gh=r.Wap.ERF_A2,xh=r.Wap.ERF_A3,wh=r.Wap.ERF_A4,vh=r.Wap.ERF_A5,kh=Se(r.Omj,(t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+bh*n);return e*(1-((((vh*r+wh)*r+xh)*r+gh)*r+yh)*r*Math.exp(-n*n))})),$h={kernelName:r.Omj,backendName:"cpu",kernelFunc:kh};function Nh(t){const{inputs:e,backend:n,attrs:s}=t,{input:i}=e,{dim:o}=s,a=i.shape.length,u=i.shape.slice();let c=o;return o<0&&(r.D5U.hu(-(a+1)<=o,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),c=a+o+1),u.splice(c,0,1),el({inputs:{x:i},backend:n,attrs:{shape:u}})}const Ch={kernelName:r.YFo,backendName:"cpu",kernelFunc:Nh},Eh=ue(((t,e)=>t/e)),Sh=ge(r.oHH,Eh),Ah={kernelName:r.oHH,backendName:"cpu",kernelFunc:Sh};function Rh(t,e,n){const s=t.shape,i=s[0],o=s[1],a=n.data.get(t.dataId),u=a.complexTensorInfos.real,c=a.complexTensorInfos.imag,l=[i,o],h=r.D5U.NA(l),d=r.D5U.WP("float32",h),f=r.D5U.WP("float32",h);for(let t=0;t<i;t++){const s=En({inputs:{x:u},backend:n,attrs:{begin:[t,0],size:[1,o]}}),i=En({inputs:{x:c},backend:n,attrs:{begin:[t,0],size:[1,o]}}),a=ce({inputs:{real:s,imag:i},backend:n}),{real:l,imag:h}=Th(a,e,n),p=r.Wap.mergeRealAndImagArrays(l,h);for(let e=0;e<o;e++){const n=r.Wap.getComplexWithIndex(p,e);d[t*o+e]=n.real,f[t*o+e]=n.imag}n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a)}const p=n.makeTensorInfo(l,"float32",d),m=n.makeTensorInfo(l,"float32",f),b=ce({inputs:{real:p,imag:m},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),b}function Th(t,e,n){const s=r.D5U.NA(t.shape),i=n.data.get(t.dataId),o=n.data.get(i.complexTensorInfos.real.dataId).values,a=n.data.get(i.complexTensorInfos.imag.dataId).values;if(0==((u=s)&u-1)){const i=Oh(o,a,s,e,n),u=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(u,"float32",i.real),e=n.makeTensorInfo(u,"float32",i.imag),o=n.makeTensorInfo([],"float32",r.D5U.hr(s,"float32")),a=de({inputs:{x:o},backend:n}),c=Ah.kernelFunc({inputs:{a:t,b:o},backend:n}),l=Ah.kernelFunc({inputs:{a:e,b:a},backend:n}),h=n.data.get(c.dataId).values,d=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),{real:h,imag:d}}return i}{const t=function(t,e,n){const s=new Float32Array(2*e);for(let i=0;i<e;i++){let o=0,a=0;for(let s=0;s<e;s++){const u=r.Wap.exponent(i*s,e,n),c=r.Wap.getComplexWithIndex(t,s);o+=c.real*u.real-c.imag*u.imag,a+=c.real*u.imag+c.imag*u.real}n&&(o/=e,a/=e),r.Wap.assignToTypedArray(s,o,a,i)}return s}(r.Wap.mergeRealAndImagArrays(o,a),s,e);return r.Wap.splitRealAndImagArrays(t)}var u}function Oh(t,e,n,s,i){if(1===n)return{real:t,imag:e};const o=r.Wap.mergeRealAndImagArrays(t,e),a=n/2,u=r.Wap.complexWithEvenIndex(o),c=u.real,l=u.imag,h=[c.length],d=i.makeTensorInfo(h,"float32",c),f=i.makeTensorInfo(h,"float32",l),p=ce({inputs:{real:d,imag:f},backend:i}),m=r.Wap.complexWithOddIndex(o),b=m.real,y=m.imag,g=[b.length],x=i.makeTensorInfo(g,"float32",b),w=i.makeTensorInfo(g,"float32",y),v=ce({inputs:{real:x,imag:w},backend:i}),k=Oh(c,l,a,s,i),$=k.real,N=k.imag,C=[$.length],E=i.makeTensorInfo(C,"float32",$),S=i.makeTensorInfo(C,"float32",N),A=ce({inputs:{real:E,imag:S},backend:i}),R=Oh(b,y,a,s,i),T=R.real,O=R.imag,I=[T.length],F=i.makeTensorInfo(I,"float32",T),_=i.makeTensorInfo(I,"float32",O),M=ce({inputs:{real:F,imag:_},backend:i}),D=r.Wap.exponents(n,s),L=[D.real.length],P=i.makeTensorInfo(L,"float32",D.real),V=i.makeTensorInfo(L,"float32",D.imag),z=ce({inputs:{real:P,imag:V},backend:i}),B=cn({inputs:{a:z,b:M},backend:i}),W=ke({inputs:{a:A,b:B},backend:i}),U=_n({inputs:{a:A,b:B},backend:i}),G=pe({inputs:{input:W},backend:i}),j=pe({inputs:{input:U},backend:i}),H=Vl({inputs:{input:W},backend:i}),q=Vl({inputs:{input:U},backend:i}),X=Bl({inputs:[G,j],backend:i,attrs:{axis:0}}),J=Bl({inputs:[H,q],backend:i,attrs:{axis:0}}),Y=i.data.get(X.dataId).values,K=i.data.get(J.dataId).values;return i.disposeIntermediateTensorInfo(d),i.disposeIntermediateTensorInfo(f),i.disposeIntermediateTensorInfo(p),i.disposeIntermediateTensorInfo(x),i.disposeIntermediateTensorInfo(w),i.disposeIntermediateTensorInfo(v),i.disposeIntermediateTensorInfo(E),i.disposeIntermediateTensorInfo(S),i.disposeIntermediateTensorInfo(A),i.disposeIntermediateTensorInfo(F),i.disposeIntermediateTensorInfo(_),i.disposeIntermediateTensorInfo(M),i.disposeIntermediateTensorInfo(P),i.disposeIntermediateTensorInfo(V),i.disposeIntermediateTensorInfo(z),i.disposeIntermediateTensorInfo(B),i.disposeIntermediateTensorInfo(W),i.disposeIntermediateTensorInfo(U),i.disposeIntermediateTensorInfo(G),i.disposeIntermediateTensorInfo(H),i.disposeIntermediateTensorInfo(j),i.disposeIntermediateTensorInfo(q),i.disposeIntermediateTensorInfo(X),i.disposeIntermediateTensorInfo(J),{real:Y,imag:K}}const Ih={kernelName:r.vwp,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e,i=r.D5U.NA(s.shape),o=s.shape[s.shape.length-1],a=el({inputs:{x:s},backend:n,attrs:{shape:[i/o,o]}}),u=Rh(a,!1,n),c=el({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),c}};function Fh(t){const{backend:e,attrs:n}=t,{shape:s,value:i,dtype:o}=n,a=o||r.D5U.D2(i),u=r.D5U.rQ(a,r.D5U.NA(s));return function(t,e,n){t.fill(e)}(u,i),e.makeTensorInfo(s,a,u)}const _h={kernelName:r.deh,backendName:"cpu",kernelFunc:Fh};const Mh={kernelName:r.Uyb,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,i=n,o=r.D5U.WP(s.dtype,r.D5U.NA(s.shape)),[a,u,c,l]=s.shape,h=i.data.get(s.dataId).values;for(let t=0;t<a;t++){const e=t*c*u*l;for(let t=0;t<u;t++){const n=t*(c*l);for(let r=0;r<c;r++){const s=r*l;for(let i=0;i<l;i++){const u=[a,t,r,i][2],d=Math.round(c-u),f=e+n+s+i;let p=h[f];if(d>=0&&d<c){p=h[e+n+d*l+i]}o[f]=p}}}}return{dataId:i.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Dh=ue(((t,e)=>Math.floor(t/e))),Lh=ge(r.jeX,Dh,null,"int32"),Ph={kernelName:r.jeX,backendName:"cpu",kernelFunc:Lh};const Vh={kernelName:r._V0,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:o,preluActivationWeights:a}=e,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=r;let m=Ul({inputs:{x:s,filter:i},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d}});if(o){const t=m;m=ke({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(t)}if(f){const t=m;m=tl(n,m,f,a,p),n.disposeIntermediateTensorInfo(t)}return m}};const zh={kernelName:r.luS,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:o,preluActivationWeights:a}=e,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=r;let m=sh({inputs:{x:s,filter:i},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d}});if(o){const t=m;m=ke({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(t)}if(f){const t=m;m=tl(n,m,f,a,p),n.disposeIntermediateTensorInfo(t)}return m}};const Bh={kernelName:r.q1x,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:s,indices:i}=e,o=r.D5U.NA(s.shape),a=i.shape,u=a[a.length-1],[c,l,h,d]=r.Wap.prepareAndValidate(s,i);if(0===l)return n.makeTensorInfo(c,s.dtype,[]);const f=(0,r.f3b)([l,h],s.dtype),p=n.data.get(i.dataId).values,m=n.data.get(s.dataId).values;for(let t=0;t<l;t++){const e=[];let n=0;for(let r=0;r<u;r++){const s=p[t*u+r];n+=s*d[r],e.push(s)}if(n<0||n>=o/h)throw new Error(`Invalid indices: ${e} does not index into ${s.shape}`);for(let e=0;e<h;e++)f.values[t*h+e]=m[n*h+e]}return n.makeTensorInfo(c,f.dtype,f.values)}};const Wh={kernelName:r.qi_,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i,indices:o}=e,{axis:a,batchDims:u}=s;ie([i,o],"gatherV2");let c=u;null==u&&(c=0);const l=r.D5U.NA(o.shape),h=r.D5U.EC(a,i.shape)[0],d=r.Wap.segment_util.collectGatherOpShapeInfo(i,o,h,c),f=el({inputs:{x:i},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),p=el({inputs:{x:o},backend:n,attrs:{shape:[d.batchSize,l/d.batchSize]}}),m=[d.batchSize,d.outerSize,l/d.batchSize,d.sliceSize],b=n.bufferSync(p),y=We(n.bufferSync(f),b,m);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),n.makeTensorInfo(d.outputShape,y.dtype,y.values)}},Uh=ue(((t,e)=>t>=e?1:0)),Gh=ge(r.Acj,Uh,null,"bool"),jh={kernelName:r.Acj,backendName:"cpu",kernelFunc:Gh};const Hh={kernelName:r.Qg5,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e,i=r.D5U.NA(s.shape),o=s.shape[s.shape.length-1],a=el({inputs:{x:s},backend:n,attrs:{shape:[i/o,o]}}),u=Rh(a,!0,n),c=el({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),c}},qh=Se(r.avt,(t=>Number.isFinite(t)?1:0),"bool"),Xh={kernelName:r.avt,backendName:"cpu",kernelFunc:qh},Jh=Se(r.iWB,(t=>Math.abs(t)===1/0?1:0),"bool"),Yh={kernelName:r.iWB,backendName:"cpu",kernelFunc:Jh},Kh=Se(r.r7n,(t=>Number.isNaN(t)?1:0),"bool"),Qh={kernelName:r.r7n,backendName:"cpu",kernelFunc:Kh},Zh=ue(((t,e)=>t<=e?1:0)),td=ge(r.CAk,Zh,null,"bool"),ed={kernelName:r.CAk,backendName:"cpu",kernelFunc:td};const nd={kernelName:r.e7N,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:i}=n,o=Je(r,s,i);return e.makeTensorInfo([o.length],"float32",o)}},rd=Se(r.kU,(t=>Math.log1p(t))),sd={kernelName:r.kU,backendName:"cpu",kernelFunc:rd},id=ue(((t,e)=>t&&e)),od=ge(r.PYm,id,null,"bool"),ad={kernelName:r.PYm,backendName:"cpu",kernelFunc:od},ud=Se(r.VfG,(t=>t?0:1),"bool"),cd={kernelName:r.VfG,backendName:"cpu",kernelFunc:ud},ld=ue(((t,e)=>t||e)),hd=ge(r.MZg,ld,null,"bool"),dd={kernelName:r.MZg,backendName:"cpu",kernelFunc:hd};const fd={kernelName:r.eZ0,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{depthRadius:o,bias:a,alpha:u,beta:c}=s;ie(i,"LRN");const l=i.shape[3],h=l-1,d=n.data.get(i.dataId).values,f=r.D5U.NA(i.shape),p=new Float32Array(f);function m(t){const e=t%l;let n=t-e+Math.max(0,e-o);const r=t-e+Math.min(e+o,h);let s=0;for(;n<=r;n++){const t=d[n];s+=t*t}return s}for(let t=0;t<f;t++){const e=m(t),n=d[t]*Math.pow(a+u*e,-c);p[t]=n}return n.makeTensorInfo(i.shape,i.dtype,p)}};const pd={kernelName:r.Hhh,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i,y:o,dy:a}=e,{depthRadius:u,bias:c,alpha:l,beta:h}=s;ie(a,"LRNGrad");const d=r.D5U.NA(a.shape),f=a.shape[3],p=n.data.get(a.dataId).values,m=n.data.get(i.dataId).values,b=n.data.get(o.dataId).values,y=new Float32Array(d),g=d;for(let t=0;t<g;t++){const e=t%f,n=t-e+Math.max(0,e-u),r=t-e+Math.min(f,e+u+1);let s=0;for(let t=n;t<r;t++)s+=Math.pow(m[t],2);s=l*s+c;for(let e=n;e<r;e++){let n=-2*l*h*m[e]*b[t]/s;t===e&&(n+=Math.pow(s,-h)),n*=p[t],y[e]+=n}}return n.makeTensorInfo(a.shape,i.dtype,y)}};function md(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{reductionIndices:o,keepDims:a}=s,u=n;let c=i.shape;const l=c.length,h=r.D5U.EC(o,c);let d=h;const f=r.Wap.getAxesPermutation(d,l);let p=u.data.get(i.dataId).values;if(null!=f){const t=new Array(l);for(let e=0;e<t.length;e++)t[e]=c[f[e]];p=bn(p,c,i.dtype,f,t),d=r.Wap.getInnerMostAxes(d.length,l),c=t}ie(i,"max"),r.Wap.assertAxesAreInnerMostDims("max",d,l);const[m,b]=r.Wap.computeOutAndReduceShapes(c,d),y=Ze(p,r.D5U.NA(b),m,i.dtype),g=u.write(y,m,i.dtype);let x=m;if(a){x=r.Wap.expandShapeToKeepDim(m,h)}return{dataId:g,shape:x,dtype:i.dtype}}const bd={kernelName:r.YoZ,backendName:"cpu",kernelFunc:md};const yd={kernelName:r.mTV,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e;ie(i,"maxPool");const{filterSize:o,strides:a,pad:u,dimRoundingMode:c}=s;r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const l=r.Wap.computePool2DInfo(i.shape,o,a,1,u,c);let h;if(1===l.filterWidth&&1===l.filterHeight&&r.D5U.cO(l.inShape,l.outShape))h=de({inputs:{x:i},backend:n});else{const t=n.data.get(i.dataId).values,e=r.D5U.e3(i.shape),s=El(t,i.shape,i.dtype,e,l,"max");h=n.makeTensorInfo(l.outShape,i.dtype,s.values)}return h}};const gd={kernelName:r.OAf,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{filterSize:o,strides:a,pad:u,dimRoundingMode:c,dataFormat:l,dilations:h}=s;ie(i,"maxPool3d");let d=h;null==d&&(d=[1,1,1]);const f=r.Wap.computePool3DInfo(i.shape,o,a,d,u,c,l),p=Al(n.data.get(i.dataId).values,i.shape,i.dtype,r.D5U.e3(i.shape),f,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}};const xd={kernelName:r.OU7,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:i,input:o}=e,{filterSize:a,strides:u,pad:c,dilations:l,dimRoundingMode:h}=s;ie([i,o],"maxPool3DGrad");const d=r.Wap.computePool3DInfo(o.shape,a,u,l,c,h),f=function(t,e){const n=(0,r.f3b)(e.outShape,"int32"),s=e.strideDepth,i=e.strideHeight,o=e.strideWidth,a=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,f=e.padInfo.front,p=e.padInfo.top,m=e.padInfo.left;for(let r=0;r<e.batchSize;++r)for(let b=0;b<e.inChannels;++b)for(let y=0;y<e.outDepth;++y){const g=y*s-f;let x=g;for(;x<0;)x+=a;const w=Math.min(e.inDepth,l+g);for(let s=0;s<e.outHeight;++s){const l=s*i-p;let f=l;for(;f<0;)f+=u;const v=Math.min(e.inHeight,h+l);for(let i=0;i<e.outWidth;++i){const p=i*o-m;let k=p;for(;k<0;)k+=c;const $=Math.min(e.inWidth,d+p);let N=Number.NEGATIVE_INFINITY,C=-1;for(let e=x;e<w;e+=a){const n=e-g;for(let s=f;s<v;s+=u){const i=s-l;for(let o=k;o<$;o+=c){const a=o-p,u=t.get(r,e,s,o,b);u>=N&&(N=u,C=n*h*d+i*h+a)}}}n.set(C,r,y,s,i,b)}}}return n}(n.bufferSync(o),d),p=d.strideDepth,m=d.strideHeight,b=d.strideWidth,y=d.dilationDepth,g=d.dilationHeight,x=d.dilationWidth,w=d.effectiveFilterDepth,v=d.effectiveFilterHeight,k=d.effectiveFilterWidth,$=w-1-d.padInfo.front,N=k-1-d.padInfo.left,C=v-1-d.padInfo.top,E=(0,r.f3b)(o.shape,"float32"),S=n.bufferSync(i);for(let t=0;t<d.batchSize;++t)for(let e=0;e<d.inChannels;++e)for(let n=0;n<d.inDepth;++n)for(let r=0;r<d.inHeight;++r)for(let s=0;s<d.inWidth;++s){const i=n-$,o=r-C,a=s-N;let u=0;for(let n=0;n<w;n+=y){const r=(i+n)/p;if(!(r<0||r>=d.outDepth||Math.floor(r)!==r))for(let s=0;s<v;s+=g){const i=(o+s)/m;if(!(i<0||i>=d.outHeight||Math.floor(i)!==i))for(let o=0;o<k;o+=x){const c=(a+o)/b;if(c<0||c>=d.outWidth||Math.floor(c)!==c)continue;const l=w*v*k-1-f.get(t,r,i,c,e)===n*v*k+s*k+o?1:0;if(0===l)continue;u+=S.get(t,r,i,c,e)*l}}}E.set(u,t,n,r,s,e)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}};const wd={kernelName:r.OV7,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:i,input:o,output:a}=e,u=o;ie([o,a],"maxPoolGrad");const{filterSize:c,strides:l,pad:h,dimRoundingMode:d}=s,f=r.Wap.computePool2DInfo(u.shape,c,l,1,h,d),p=n.data.get(u.dataId).values,m=(0,r.f3b)(f.outShape,u.dtype,Sl(p,u.shape,u.dtype,f).values),b=f.strideHeight,y=f.strideWidth,g=f.dilationHeight,x=f.dilationWidth,w=f.effectiveFilterHeight,v=f.effectiveFilterWidth,k=v-1-f.padInfo.left,$=w-1-f.padInfo.top,N=(0,r.f3b)(u.shape,"float32"),C=n.data.get(i.dataId).values,E=(0,r.f3b)(i.shape,"float32",C);for(let t=0;t<f.batchSize;++t)for(let e=0;e<f.inChannels;++e)for(let n=0;n<f.inHeight;++n)for(let r=0;r<f.inWidth;++r){const s=n-$,i=r-k;let o=0;for(let n=0;n<w;n+=g){const r=(s+n)/b;if(!(r<0||r>=f.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=x){const a=(i+s)/y;if(a<0||a>=f.outWidth||Math.floor(a)!==a)continue;const u=w*v-1-m.get(t,r,a,e)===n*v+s?1:0;if(0===u)continue;o+=E.get(t,r,a,e)*u}}N.set(o,t,n,r,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const vd={kernelName:r.vFR,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:i,strides:o,pad:a,includeBatchInIndex:u}=e,c=n;ie(s,"MaxPoolWithArgmax");const l=c.data.get(s.dataId).values,h=r.Wap.computePool2DInfo(s.shape,i,o,[1,1],a),[d,f]=function(t,e,n,s,i){const o=El(t,0,n,r.D5U.e3(e),i,"max"),a=Sl(t,e,n,i,!0,s);return[o.values,a.values]}(l,s.shape,s.dtype,u,h),p=c.write(d,h.outShape,s.dtype),m=c.write(f,h.outShape,s.dtype);return[{dataId:p,shape:h.outShape,dtype:s.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}};function kd(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{axis:o,keepDims:a}=s;let u;ie(i,"sum"),u="bool"===i.dtype?be({inputs:{x:i},backend:n,attrs:{dtype:"int32"}}):de({inputs:{x:i},backend:n});const c=u.shape.length,l=r.D5U.EC(o,u.shape),h=r.Wap.getAxesPermutation(l,c);let d=l,f=u;null!=h&&(f=yn({inputs:{x:u},backend:n,attrs:{perm:h}}),d=r.Wap.getInnerMostAxes(d.length,c)),r.Wap.assertAxesAreInnerMostDims("sum",d,f.shape.length);const[p,m]=r.Wap.computeOutAndReduceShapes(f.shape,d);let b=he(n,p,r.Wap.upcastType(f.dtype,"int32"));const y=r.D5U.NA(m),g=n.data.get(b.dataId).values,x=n.data.get(f.dataId).values;for(let t=0;t<g.length;++t){const e=t*y;let n=0;for(let t=0;t<y;++t)n+=x[e+t];g[t]=n}if(a){const t=b;b=el({inputs:{x:b},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(b.shape,l)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(u),null!=h&&n.disposeIntermediateTensorInfo(f),b}const $d={kernelName:r.GBy,backendName:"cpu",kernelFunc:kd};const Nd={kernelName:r.q2K,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{axis:o,keepDims:a}=s,u=r.D5U.EC(o,i.shape),c=r.Wap.computeOutAndReduceShapes(i.shape,u)[1],l=r.D5U.NA(c),h=[],d=n.makeTensorInfo([],"float32",new Float32Array([l]));h.push(d);const f=be({inputs:{x:i},backend:n,attrs:{dtype:"float32"}});h.push(f);const p=Sh({inputs:{a:f,b:d},backend:n});h.push(p);const m=kd({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:a}});return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),m}};const Cd={kernelName:r.c17,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{axis:o,keepDims:a}=s;ie(i,"min");const u=r.D5U.EC(o,i.shape);let c=u;const l=r.Wap.getAxesPermutation(c,i.shape.length);let h=i;null!=l&&(h=yn({inputs:{x:i},backend:n,attrs:{perm:l}}),c=r.Wap.getInnerMostAxes(c.length,i.shape.length)),r.Wap.assertAxesAreInnerMostDims("min",c,h.shape.length);const[d,f]=r.Wap.computeOutAndReduceShapes(h.shape,c),p=r.D5U.NA(f),m=r.D5U.wT(r.D5U.NA(d),h.dtype),b=n.data.get(h.dataId).values;for(let t=0;t<m.length;++t){const e=t*p;let n=b[e];for(let t=0;t<p;++t){const r=b[e+t];r<n&&(n=r)}m[t]=n}null!=l&&n.disposeIntermediateTensorInfo(h);const y=n.makeTensorInfo(d,h.dtype,m);if(a){const t=el({inputs:{x:y},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(d,u)}});return n.disposeIntermediateTensorInfo(y),t}return y}};const Ed={kernelName:r.jQs,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{paddings:o,mode:a}=s;ie(i,"mirrorPad");const u=o.map(((t,e)=>t[0]+i.shape[e]+t[1])),c=o.map((t=>t[0])),l=o.map(((t,e)=>t[0]+i.shape[e])),h="reflect"===a?0:1,d=n.data.get(i.dataId).values,f=i.shape.length,p=r.D5U.e3(i.shape),m=r.D5U.NA(u),b=u.length,y=r.D5U.e3(u),g=r.D5U.WP(i.dtype,m);for(let t=0;t<m;t++){let e=r.D5U.NE(t,b,y);for(let t=0;t<b;t++)e[t]<c[t]?e[t]=2*c[t]-e[t]-h:e[t]>=l[t]&&(e[t]=2*(l[t]-1)-e[t]+h);e=e.map(((t,e)=>t-c[e]));const n=r.D5U.qy(e,f,p);g[t]=d[n]}return{dataId:n.write(g,u,i.dtype),shape:u,dtype:i.dtype}}},Sd=ue(((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})),Ad=ge(r.Vbg,Sd),Rd={kernelName:r.Vbg,backendName:"cpu",kernelFunc:Ad};var Td=n(6377);function Od(t){const{inputs:e,backend:n,attrs:s}=t,{logits:i}=e,{dim:o}=s,a=i.shape.length;let u=o;if(-1===u&&(u=a-1),u!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${u}`);const c=r.D5U.EC([u],i.shape),l=md({inputs:{x:i},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),h=r.Wap.expandShapeToKeepDim(l.shape,c),d=el({inputs:{x:l},backend:n,attrs:{shape:h}}),f=_n({inputs:{a:i,b:d},backend:n}),p=_e({inputs:{x:f},backend:n}),m=kd({inputs:{x:p},backend:n,attrs:{axis:c,keepDims:!1}}),b=el({inputs:{x:m},backend:n,attrs:{shape:h}}),y=Sh({inputs:{a:p,b},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),y}const Id={kernelName:r.Gcp,backendName:"cpu",kernelFunc:Od};const Fd={kernelName:r.NZg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{logits:i}=e,{numSamples:o,seed:a,normalized:u}=s;ie(i,"multinomial");const c=u?i:Od({inputs:{logits:i},backend:n,attrs:{dim:-1}}),l=c.shape[0],h=c.shape[1],d=n.data.get(c.dataId).values,f=[l,o],p=r.D5U.wT(r.D5U.NA(f),"int32");for(let t=0;t<l;++t){const e=t*h,n=new Float32Array(h-1);n[0]=d[e];for(let t=1;t<n.length;++t)n[t]=n[t-1]+d[e+t];const r=Td.alea(a.toString()),s=t*o;for(let t=0;t<o;++t){const e=r();p[s+t]=n.length;for(let r=0;r<n.length;r++)if(e<n[r]){p[s+t]=r;break}}}return u||n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(f,"int32",p)}},_d=r.GDt.GP;const Md={kernelName:r.uv1,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u}=r;ie(s,"NonMaxSuppression");const c=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,{selectedIndices:h}=_d(c,l,o,a,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Dd=r.GDt.qP;const Ld={kernelName:r.cye,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:c}=r;ie(s,"NonMaxSuppressionPadded");const l=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:f}=Dd(l,h,o,a,u,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},Pd=r.GDt.pA;const Vd={kernelName:r.W0H,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u,softNmsSigma:c}=r;ie(s,"NonMaxSuppressionWithScore");const l=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,d=o,f=a,p=u,m=c,{selectedIndices:b,selectedScores:y}=Pd(l,h,d,f,p,m);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};const zd={kernelName:r.we_,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{indices:i}=e,{depth:o,onValue:a,offValue:u}=s;ie(i,"oneHot");const c=r.D5U.NA(i.shape),l=new Float32Array(c*o);l.fill(u);const h=n.data.get(i.dataId).values;for(let t=0;t<c;++t)h[t]>=0&&h[t]<o&&(l[t*o+h[t]]=a);return n.makeTensorInfo([...i.shape,o],"int32",l)}};function Bd(t){const{inputs:e,backend:n}=t,{x:r}=e;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const t=pe({inputs:{input:r},backend:n}),e=Bd({inputs:{x:t},backend:n}),s=Vl({inputs:{input:r},backend:n}),i=Bd({inputs:{x:s},backend:n}),o=ce({inputs:{real:e,imag:i},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}return Fh({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Wd={kernelName:r.RuY,backendName:"cpu",kernelFunc:Bd};const Ud={kernelName:r.qWM,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const e=pe({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r}),i=Vl({inputs:{input:s},backend:r}),o=Bd({inputs:{x:i},backend:r}),a=ce({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),a}return Fh({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function Gd(t){const{inputs:e,backend:n,attrs:s}=t,{axis:i}=s;if(1===e.length)return Nh({inputs:{input:e[0]},backend:n,attrs:{dim:i}});const o=e[0].shape,a=e[0].dtype;e.forEach((t=>{r.D5U.k5(o,t.shape,"All tensors passed to stack must have matching shapes"),r.D5U.hu(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],c=Bl({inputs:e.map((t=>{const e=Nh({inputs:{input:t},backend:n,attrs:{dim:i}});return u.push(e),e})),backend:n,attrs:{axis:i}});return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}const jd={kernelName:r.QiL,backendName:"cpu",kernelFunc:Gd};const Hd={kernelName:r.lyA,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{paddings:o,constantValue:a}=s;ie(i,"pad");const u=o.map(((t,e)=>t[0]+i.shape[e]+t[1])),c=o.map((t=>t[0])),l=n.data.get(i.dataId).values,h=r.D5U.NA(i.shape),d=i.shape.length,f=r.D5U.e3(i.shape),p=r.D5U.NA(u),m=u.length,b=r.D5U.e3(u),y=r.D5U.WP(i.dtype,p);0!==a&&y.fill(a);for(let t=0;t<h;t++){const e=r.D5U.NE(t,d,f).map(((t,e)=>t+c[e]));y[r.D5U.qy(e,m,b)]=l[t]}return{dataId:n.write(y,u,i.dtype),shape:u,dtype:i.dtype}}},qd=ue(((t,e)=>Math.pow(t,e))),Xd=ge(r.pe_,qd),Jd={kernelName:r.pe_,backendName:"cpu",kernelFunc:Xd};const Yd={kernelName:r.e6w,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:s,dtype:i,step:o}=n,a=vn(r,s,o,i);return e.makeTensorInfo([a.length],i,a)}},Kd=Se(r.$HU,(t=>1/t)),Qd={kernelName:r.$HU,backendName:"cpu",kernelFunc:Kd};const Zd={kernelName:r._Yw,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:i}=e,{alignCorners:o,halfPixelCenters:a,size:u}=s;ie(i,"resizeBilinear");const c=r.D5U.e3(i.shape),[l,h]=u,[d,f,p,m]=i.shape,b=n.data.get(i.dataId).values,y=new Float32Array(r.D5U.NA([d,l,h,m])),g=[o&&l>1?f-1:f,o&&h>1?p-1:p],x=[o&&l>1?l-1:l,o&&h>1?h-1:h];let w=0;const v=g[0]/x[0],k=g[1]/x[1];for(let t=0;t<d;t++)for(let e=0;e<l;e++){let n;n=a?v*(e+.5)-.5:v*e;const r=Math.max(0,Math.floor(n)),s=n-r,i=Math.min(f-1,Math.ceil(n)),o=t*c[0]+r*c[1],u=t*c[0]+i*c[1];for(let t=0;t<h;t++){let e;e=a?k*(t+.5)-.5:k*t;const n=Math.max(0,Math.floor(e)),r=e-n,i=Math.min(p-1,Math.ceil(e)),l=o+n*c[2],h=u+n*c[2],d=o+i*c[2],f=u+i*c[2];for(let t=0;t<m;t++){const e=b[l+t],n=b[h+t],i=e+(b[d+t]-e)*r,o=i+(n+(b[f+t]-n)*r-i)*s;y[w++]=o}}}return n.makeTensorInfo([d,l,h,m],"float32",y)}};const tf={kernelName:r.zbQ,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:i,dy:o}=e,{alignCorners:a}=s;ie([o,i],"resizeBilinearGrad");const u=r.D5U.e3(i.shape),[c,l,h,d]=i.shape,[,f,p]=o.shape,m=new Float32Array(c*l*h*d),b=[a&&f>1?l-1:l,a&&p>1?h-1:h],y=[a&&f>1?f-1:f,a&&p>1?p-1:p],g=b[0]/y[0],x=b[1]/y[1],w=n.data.get(o.dataId).values;let v=0;for(let t=0;t<c;t++){const e=t*u[0];for(let t=0;t<f;t++){const n=t*g,r=Math.floor(n),s=Math.min(Math.ceil(n),l-1),i=e+r*u[1],o=e+s*u[1],a=n-r,c=1-a;for(let t=0;t<p;t++){const e=t*x,n=Math.floor(e),r=Math.min(Math.ceil(e),h-1),s=e-n,l=1-s,f=i+n*u[2],p=i+r*u[2],b=o+n*u[2],y=o+r*u[2],g=c*l,k=c*s,$=a*l,N=a*s;for(let t=0;t<d;t++){const e=w[v++];m[f+t]+=e*g,m[p+t]+=e*k,m[b+t]+=e*$,m[y+t]+=e*N}}}}return n.makeTensorInfo([c,h,l,d],"float32",m)}};const ef={kernelName:r.dpD,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:i}=e,{alignCorners:o,halfPixelCenters:a,size:u}=s;ie(i,"resizeNearestNeighbor");const c=r.D5U.e3(i.shape),[l,h]=u,[d,f,p,m]=i.shape,b=n.data.get(i.dataId).values,y=new Float32Array(d*l*h*m),g=[o&&l>1?f-1:f,o&&h>1?p-1:p],x=[o&&l>1?l-1:l,o&&h>1?h-1:h],w=g[0]/x[0],v=g[1]/x[1];let k=0;for(let t=0;t<d;t++){const e=t*c[0];for(let t=0;t<l;t++){const n=a?w*(t+.5):w*t;let r=Math.min(f-1,o?Math.round(n):Math.floor(n));a&&(r=Math.max(0,r));const s=e+r*c[1];for(let t=0;t<h;t++){const e=a?v*(t+.5):v*t;let n=Math.min(p-1,o?Math.round(e):Math.floor(e));a&&(n=Math.max(0,n));const r=s+n*c[2];for(let t=0;t<m;t++){const e=b[r+t];y[k++]=e}}}}return n.makeTensorInfo([d,l,h,m],i.dtype,y)}};const nf={kernelName:r.Hmb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:i,dy:o}=e,{alignCorners:a}=s;ie([o,i],"resizeNearestNeighborGrad");const u=r.D5U.e3(i.shape),c=r.D5U.e3(o.shape),[l,h,d,f]=i.shape,[,p,m]=o.shape,b=new Float32Array(l*h*d*f),y=n.data.get(o.dataId).values,g=[a&&p>1?h-1:h,a&&m>1?d-1:d],x=[a&&p>1?p-1:p,a&&m>1?m-1:m],w=g[0]/x[0],v=g[1]/x[1],k=1/w,$=1/v,N=2*Math.ceil(k)+2,C=2*Math.ceil($)+2;for(let t=0;t<l;t++){const e=t*u[0];for(let t=0;t<h;t++){const n=e+t*u[1],r=Math.floor(t*k),s=Math.floor(r-N/2);for(let r=0;r<d;r++){const i=n+r*u[2],o=Math.floor(r*$),l=Math.floor(o-C/2);for(let n=0;n<f;n++){let o=0;for(let i=0;i<N;i++){const u=i+s;if(u<0||u>=p)continue;const f=e+u*c[1],b=u*w;if(t===Math.min(h-1,a?Math.round(b):Math.floor(b)))for(let t=0;t<C;t++){const e=t+l;if(e<0||e>=m)continue;const s=f+e*c[2],i=e*v;r===Math.min(d-1,a?Math.round(i):Math.floor(i))&&(o+=y[s+n])}}b[i+n]=o}}}}return n.makeTensorInfo(i.shape,i.dtype,b)}};const rf={kernelName:r.mKl,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{dims:o}=s;ie(i,"reverse");const a=i.shape.length,u=r.D5U.EC(o,i.shape);if(0===a)return de({inputs:{x:i},backend:n});const c=new r.YDk(i.shape,i.dtype),l=n.bufferSync(i);for(let t=0;t<c.size;t++){const e=c.indexToLoc(t),n=e.slice();u.forEach((t=>n[t]=i.shape[t]-1-n[t])),c.set(l.get(...n),...e)}return n.makeTensorInfo(c.shape,c.dtype,c.values)}},sf={kernelName:r.b9H,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:i,fillValue:o,center:a}=e,u=n,c=r.D5U.WP(s.dtype,r.D5U.NA(s.shape)),[l,h,d,f]=s.shape,[p,m]=r.Wap.getImageCenter(a,h,d),b=Math.sin(i),y=Math.cos(i),g=u.data.get(s.dataId).values;for(let t=0;t<l;t++){const e=t*d*h*f;for(let t=0;t<h;t++){const n=t*(d*f);for(let r=0;r<d;r++){const s=r*f;for(let i=0;i<f;i++){const a=[l,t,r,i],u=a[2],x=a[1];let w=(u-p)*y-(x-m)*b,v=(u-p)*b+(x-m)*y;w=Math.round(w+p),v=Math.round(v+m);let k=o;if("number"!=typeof o&&(k=3===i?255:o[i]),w>=0&&w<d&&v>=0&&v<h){k=g[e+v*(d*f)+w*f+i]}c[e+n+s+i]=k}}}}return{dataId:u.write(c,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},of=Se(r.e07,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1})),af={kernelName:r.e07,backendName:"cpu",kernelFunc:of};function uf(t,e,n,s,i,o,a,u,c,l){const h=[s/i,i],d=t.values,f=e.values;if(0===s)return(0,r.f3b)(n,e.dtype);const p=(0,r.f3b)(h,e.dtype);p.values.fill(c);for(let t=0;t<o;t++){const r=[];let o=0;for(let e=0;e<a;e++){const n=d[t*a+e];r.push(n),o+=n*u[e]}if(o<0||o>=s/i)throw new Error(`Invalid indices: ${r} does not index into ${n}`);for(let n=0;n<i;n++)l?p.values[o*i+n]+=f[t*i+n]:p.values[o*i+n]=0===e.rank?f[0]:f[t*i+n]}return p}const cf={kernelName:r.xQA,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{indices:i,updates:o}=e,{shape:a}=s,{sliceRank:u,numUpdates:c,sliceSize:l,strides:h,outputSize:d}=r.Wap.calculateShapes(o,i,a),f=uf(n.bufferSync(i),n.bufferSync(o),a,d,l,c,u,h,0,!0);return n.makeTensorInfo(a,f.dtype,f.values)}};const lf={kernelName:r.PhF,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:s,t:i,e:o}=e;ie([s,i,o],"select");const a=s.shape.length,u=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,l=n.data.get(o.dataId).values,h=(0,r.x8V)(i.dtype,o.dtype),d=r.D5U.wT(r.D5U.NA(i.shape),h);let f=0;const p=0===a||a>1||1===i.shape.length?1:r.D5U.NA(i.shape.slice(1));for(let t=0;t<u.length;t++)for(let e=0;e<p;e++)1===u[t]?d[f++]=c[t]:d[f++]=l[t];return n.makeTensorInfo(i.shape,h,d)}},hf=r.Wap.SELU_SCALEALPHA,df=r.Wap.SELU_SCALE,ff=Se(r.oFR,(t=>t>=0?df*t:hf*(Math.exp(t)-1))),pf={kernelName:r.oFR,backendName:"cpu",kernelFunc:ff},mf=Se(r.a5O,(t=>1/(1+Math.exp(-t)))),bf={kernelName:r.a5O,backendName:"cpu",kernelFunc:mf},yf=Se(r.i5y,(t=>t<0?-1:t>0?1:0)),gf={kernelName:r.i5y,backendName:"cpu",kernelFunc:yf},xf=Se(r.RQH,(t=>Math.sin(t))),wf={kernelName:r.RQH,backendName:"cpu",kernelFunc:xf},vf=Se(r.wYB,(t=>Math.sinh(t))),kf={kernelName:r.wYB,backendName:"cpu",kernelFunc:vf},$f=Math.log(1.1920928955078125e-7)+2,Nf=Se(r.MRv,(t=>{const e=t>-$f,n=t<$f,r=Math.exp(t);let s;return s=n?r:e?t:Math.log(1+r),s})),Cf={kernelName:r.MRv,backendName:"cpu",kernelFunc:Nf};const Ef={kernelName:r.TQc,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{blockShape:o,paddings:a}=s;ie([i],"spaceToBatchND");const u=r.D5U.NA(o),c=[[0,0]];c.push(...a);for(let t=1+o.length;t<i.shape.length;++t)c.push([0,0]);const l=Hd.kernelFunc({inputs:{x:i},backend:n,attrs:{paddings:c,constantValue:0}}),h=r.Wap.getReshaped(l.shape,o,u,!1),d=r.Wap.getPermuted(h.length,o.length,!1),f=r.Wap.getReshapedPermuted(l.shape,o,u,!1),p=el({inputs:{x:l},backend:n,attrs:{shape:h}}),m=yn({inputs:{x:p},backend:n,attrs:{perm:d}}),b=el({inputs:{x:m},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),b}};const Sf={kernelName:r.D2d,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:i,sparseValues:o,defaultValue:a}=e,{outputShape:u}=s,{sliceRank:c,numUpdates:l,sliceSize:h,strides:d,outputSize:f}=r.Wap.calculateShapes(o,i,u),p=uf(n.bufferSync(i),n.bufferSync(o),u,f,h,l,c,d,n.data.get(a.dataId).values[0],!1);return n.makeTensorInfo(u,p.dtype,p.values)}};const Af={kernelName:r.L8s,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{numOrSizeSplits:o,axis:a}=s,u=r.D5U.EC(a,i.shape)[0],c=r.Wap.prepareSplitSize(i,o,u),l=new Array(i.shape.length).fill(0),h=i.shape.slice();return c.map((t=>{const e=[...h];e[u]=t;const r=En({inputs:{x:i},backend:n,attrs:{begin:l,size:e}});return l[u]+=t,r}))}},Rf=Se(r.FKq,(t=>Math.sqrt(t))),Tf={kernelName:r.FKq,backendName:"cpu",kernelFunc:Rf},Of={kernelName:r.bK0,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;ie(n,"square");const s=r.data.get(n.dataId).values,i=new Float32Array(s.length);for(let t=0;t<s.length;++t){const e=s[t];i[t]=e*e}return{dataId:r.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},If=Se(r.h8e,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),Ff={kernelName:r.h8e,backendName:"cpu",kernelFunc:If};const _f={kernelName:r.jQk,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{begin:o,end:a,strides:u,beginMask:c,endMask:l,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:f}=s;ie(i,"stridedSlice");const{nonStrided:p,$begin:m,$strides:b,size:y,newShape:g,outShape:x}=r.kuN.sliceInfo(i.shape,o,a,u,c,l,h,d,f),w=el({inputs:{x:i},backend:n,attrs:{shape:g}});let v;if(p){const t=En({inputs:{x:w},backend:n,attrs:{begin:m,size:y}});v=el({inputs:{x:t},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(t)}else if(x.some((t=>0===t)))v=n.makeTensorInfo(x,i.dtype,[]);else{const t=On(x,n.bufferSync(w),b,m);v=n.makeTensorInfo(t.shape,t.dtype,t.values)}const k=el({inputs:{x:v},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),k}},Mf=Se(r.sEM,(t=>Math.tan(t))),Df={kernelName:r.sEM,backendName:"cpu",kernelFunc:Mf},Lf=Se(r.MIZ,(t=>Math.tanh(t))),Pf={kernelName:r.MIZ,backendName:"cpu",kernelFunc:Lf};const Vf={kernelName:r.n9L,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:i}=r;ie(s,"tile");const o=Dn(n.bufferSync(s),i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}};const zf={kernelName:r.cWu,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:i,sorted:o}=r;ie(s,"topk");const a=n.data.get(s.dataId).values,[u,c]=Ln(a,s.shape,s.dtype,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}};const Bf={kernelName:r.kpP,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:i}=e;ie(i,"unique");const o=r.data.get(i.dataId).values,{outputValues:a,outputShape:u,indices:c}=Pn(o,s,i.shape,i.dtype);return[r.makeTensorInfo(u,i.dtype,a),r.makeTensorInfo([c.length],"int32",c)]}};const Wf={kernelName:r.ToN,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:i}=r;i<0&&(i+=s.shape.length);const o=s.shape.length,a=s.shape[i],u=new Array(o-1);let c=0;for(let t=0;t<o;t++)t!==i&&(u[c++]=s.shape[t]);const l=new Array(o).fill(0),h=s.shape.slice();h[i]=1;const d=new Array(a);for(let t=0;t<d.length;t++){l[i]=t;const e=En({inputs:{x:s},backend:n,attrs:{begin:l,size:h}});d[t]=el({inputs:{x:e},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(e)}return d}};const Uf={kernelName:r.Qvg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i,segmentIds:o}=e,{numSegments:a}=s;ie(i,"unsortedSegmentSum");const u=[],c=[],l=i.shape.length-o.shape.length;let h=o;for(let t=0;t<l;++t){const e=Nh({inputs:{input:h},backend:n,attrs:{dim:t+1}});h=e,c.push(e)}for(let t=0;t<a;++t){const e=r.D5U.hr(t,"int32"),s=n.makeTensorInfo([],"int32",e),o=ph({inputs:{a:s,b:h},backend:n}),a=be({inputs:{x:o},backend:n,attrs:{dtype:"float32"}}),l=cn({inputs:{a,b:i},backend:n}),d=kd({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});u.push(d),c.push(s),c.push(o),c.push(a),c.push(l),c.push(d)}const d=Gd({inputs:u,backend:n,attrs:{axis:0}});return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),d}},Gf=[il,ae,al,cl,$e,ll,hl,dl,fl,pl,bl,gl,wl,$l,Cl,Rl,Tl,Ol,Il,sl,Fl,_l,Ml,ye,Oe,Ll,le,Pl,Wl,jl,Hl,Gl,Xl,Jl,ql,Kl,Zl,th,eh,nh,rh,ih,oh,ah,uh,ch,hh,lh,Ah,Gc,dh,mh,$h,Me,Ch,Pe,Ih,_h,Mh,Be,Ph,Vh,zh,Bh,Wh,je,jh,fe,Hh,zl,Xh,Yh,Qh,Hc,Xe,ed,nd,Qe,sd,ad,cd,dd,fd,pd,nn,yd,gd,xd,wd,vd,bd,Nd,Cd,on,Ed,Rd,Fd,ln,dn,Md,Ld,Vd,mn,zd,Ud,jd,Hd,Jd,Jc,wn,Yd,me,Qd,Kc,Zc,nl,Zd,tf,ef,nf,rf,sf,af,Nn,cf,lf,pf,bf,gf,wf,kf,Sn,Id,Cf,Ef,Sf,Af,Tf,Of,Tn,Ff,_f,Mn,$d,Df,Pf,Vf,zf,gn,Bf,Wf,Uf,Wd];for(const t of Gf)(0,r.wCN)(t);let jf;function Hf(){return null==jf&&(jf=(0,r.y3$)().epsilon()),jf}class qf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,qf.prototype)}}class Xf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Xf.prototype)}}class Jf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Jf.prototype)}}class Yf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Yf.prototype)}}class Kf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Kf.prototype)}}Error;function Qf(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function Zf(t,e){if(!t)throw new Kf(e)}function tp(t,e){let n=0;for(const r of t)r===e&&n++;return n}function ep(t){return 1===t.length?t[0]:t}function np(t){return Array.isArray(t)?t:[t]}function rp(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function sp(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}let ip={};function op(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function ap(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>ap(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?ap(e):t[n]=e.value)}}}function up(t,e={},n={},r="object",s=!1){if("string"==typeof t){const s=t;let i;if(s in n)i=n[s];else if(s in ip)i=ip[s];else if(i=e[s],null==i)throw new Jf(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=t;if(null==i.className||null==i.config)throw new Jf(`${r}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const o=i.className;let a,u;if(o in n?[a,u]=n[o]:o in ip?[a,u]=ip.className:o in e&&([a,u]=e[o]),null==a)throw new Jf(`Unknown ${r}: ${o}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const t={};for(const e of Object.keys(ip))t[e]=ip[e];for(const e of Object.keys(n))t[e]=n[e];i.config.customObjects=t;const e=Object.assign({},ip);for(const t of Object.keys(n))ip[t]=n[t];ap(i.config);const r=u(a,i.config,n,s);return ip=Object.assign({},e),r}{const t=Object.assign({},ip);for(const t of Object.keys(n))ip[t]=n[t];const e=new a(i.config);return ip=Object.assign({},t),e}}}function cp(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function lp(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function hp(t){if(null==t)throw new Jf(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function dp(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new Jf(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function fp(t,e,n=0,r=1/0){return Zf(n>=0),Zf(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every((t=>typeof t===e))}function pp(t,e){Array.isArray(t)?(r.D5U.hu(t.length>0,(()=>`${e} is unexpectedly an empty array.`)),t.forEach(((t,n)=>pp(t,`element ${n+1} of ${e}`)))):r.D5U.hu(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got ${mp(t)}.`))}function mp(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>mp(t))).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function bp(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function yp(t,e){return(0,r.lub)((()=>r._b3(r.Smz(r.dC7(t,t),e,!0))))}class gp extends r.m7h.iV{getConfig(){return{}}}class xp extends gp{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return(0,r.lub)((()=>{const e=yp(t,this.axis),n=r.iUl(e,0,this.maxValue);return r.dC7(t,r.hiC(n,r.IHx(Hf(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}xp.className="MaxNorm",r.m7h.ax(xp);class wp extends gp{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return(0,r.lub)((()=>r.hiC(t,r.IHx(Hf(),yp(t,this.axis)))))}getConfig(){return{axis:this.axis}}}wp.className="UnitNorm",r.m7h.ax(wp);class vp extends gp{apply(t){return r.UYe(t)}}vp.className="NonNeg",r.m7h.ax(vp);class kp extends gp{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return(0,r.lub)((()=>{const e=yp(t,this.axis),n=r.IHx(r.dC7(this.rate,r.iUl(e,this.minValue,this.maxValue)),r.dC7(1-this.rate,e));return r.dC7(t,r.hiC(n,r.IHx(Hf(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}kp.className="MinMaxNorm",r.m7h.ax(kp);const $p={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Np(t){return op(t)}function Cp(t,e={}){return up(t,r.m7h.U3.getMap().classNameMap,e,"constraint")}function Ep(t){if(null==t)return null;if("string"==typeof t){return Cp({className:t in $p?$p[t]:t,config:{}})}return t instanceof gp?t:Cp(t)}const Sp=["channelsFirst","channelsLast"],Ap=["nearest","bilinear"],Rp=["valid","same","causal"],Tp=["max","avg"],Op=["sum","mul","concat","ave"],Ip=new Map;function Fp(t){dp(Sp,"DataFormat",t)}function _p(t){dp(Rp,"PaddingMode",t)}function Mp(t){dp(Tp,"PoolMode",t)}const Dp=[];function Lp(t,e){Dp.push(t);try{const t=e();return Dp.pop(),t}catch(t){throw Dp.pop(),t}}function Pp(t){if(!Bp(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===Dp.length?"":Dp.join("/")+"/")+t}function Vp(t){if(!Bp(t))throw new Error("Not a valid tensor name: '"+t+"'");Ip.has(t)||Ip.set(t,0);const e=Ip.get(t);if(Ip.set(t,Ip.get(t)+1),e>0){const n=`${t}_${e}`;return Ip.set(n,1),n}return t}const zp=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Bp(t){return!!t.match(zp)}function Wp(t){return t===parseInt(t.toString(),10)}function Up(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let s=e;s<n;++s)r*=t[s];return r}function Gp(t){return t=Array.isArray(t)?new Float32Array(t):t,(0,r.RRF)(t)}function jp(t){return r.VV$(Gp(t)).dataSync()[0]}function Hp(t){return r.Fp7(Gp(t)).dataSync()[0]}function qp(t,e){if(e<t)throw new Jf(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Xp(t,e){return t.asType(e)}function Jp(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function Yp(t,e,n){return(0,r.lub)((()=>{switch(t.rank){case 1:return r.jZU(t,e,n);case 2:return r.SmN(t,[e,0],[n,t.shape[1]]);case 3:return r.CnO(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return r.p0P(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return r.tPi(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return r.tPi(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new Jf(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Kp(t,e,n){return(0,r.lub)((()=>{switch(t.rank){case 1:return r.jZU(t,e,n);case 2:return r.SmN(t,[0,e],[t.shape[0],n]);case 3:return r.CnO(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return r.p0P(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new Jf(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Qp(t,e,n,s){return(0,r.lub)((()=>{switch(t.rank){case 1:return r.jZU(t,e,n);case 2:switch(s){case 1:return Yp(t,e,n);case 2:return Kp(t,e,n);default:throw new Jf(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Yp(t,e,n);case 2:return r.CnO(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return Kp(t,e,n);default:throw new Jf(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Yp(t,e,n);case 2:return r.p0P(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return r.p0P(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return Kp(t,e,n);default:throw new Jf(`The axis is not within the rank of the tensor ${s}`)}default:throw new Jf(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Zp(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),r.zoF(t,e)}function tm(t,e){switch(t.rank){case 1:return r.gME([t,e]);case 2:return r.Izb([t,e],0);case 3:return r.MNy([t,e],0);case 4:return r.ZaL([t,e],0);default:throw new Jf(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function em(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new Jf(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return r.Gg6(t,e)}function nm(t,e=0,n=1,s,i){return r.nGf(t,e,n,s,i)}function rm(t,e,n,s){if(t.rank<2||e.rank<2)throw new Yf(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3){if(t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new Yf(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`)}if(2===t.rank&&2===e.rank){const i=!1,o=!1;return r.imm.OI({a:t,b:e,transposeA:i,transposeB:o,bias:s?om(t.rank,s,"channelsLast"):null,activation:n})}{const i=t.shape.slice(),o=i.pop();t=t.reshape([-1,o]);const a=e.shape.slice(),u=a.pop(),c=a.pop(),l=[...a,u],h=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=e.transpose(h).reshape([c,-1]);const d=[...i,...l],f=!1,p=!1;return r.imm.OI({a:t,b:e,transposeA:f,transposeB:p,bias:s?om(t.rank,s,"channelsLast"):null,activation:n}).reshape(d)}}function sm(t,e,n){return(0,r.lub)((()=>(e=Array.isArray(e)?(0,r.RRF)(e,"int32"):e.toInt(),r.Iqj(t,e,n))))}function im(t){return r.dC7(t,t)}function om(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new Jf(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1,1]):e.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,1,r[0]]):e.reshape([1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1]):e.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,r[0]]):e.reshape([1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1]):e.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,r[0]]):e.reshape([1].concat(r))}else if(t<3)return e;throw new Jf(`Unsupported input rank by biasAdd: ${e.rank}`)}function am(t,e,n){return(0,r.lub)((()=>(null==n&&(n="channelsLast"),Fp(n),t.add(om(t.rank,e,n)))))}function um(t,e,n,s){return(0,r.lub)((()=>r.rvX(t,e,n,s)))}function cm(t,e,n=!1){return n?t():e()}const lm=["fanIn","fanOut","fanAvg"],hm=["normal","uniform","truncatedNormal"];class dm extends r.m7h.iV{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class fm extends dm{apply(t,e){return(0,r.lls)(t,e)}}fm.className="Zeros",r.m7h.ax(fm);class pm extends dm{apply(t,e){return(0,r.iUs)(t,e)}}pm.className="Ones",r.m7h.ax(pm);class mm extends dm{constructor(t){if(super(),"object"!=typeof t)throw new Jf(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new Jf(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return(0,r.lub)((()=>(0,r.dC7)((0,r.iD$)(this.value),(0,r.iUs)(t,e))))}getConfig(){return{value:this.value}}}mm.className="Constant",r.m7h.ax(mm);class bm extends dm{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return(0,r.LGj)(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}bm.className="RandomUniform",r.m7h.ax(bm);class ym extends dm{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Yf(`randomNormal does not support dType ${e}.`);return nm(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ym.className="RandomNormal",r.m7h.ax(ym);class gm extends dm{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Yf(`truncatedNormal does not support dType ${e}.`);return(0,r.Xu6)(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}gm.className="TruncatedNormal",r.m7h.ax(gm);class xm extends dm{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return(0,r.lub)((()=>{if(2!==t.length||t[0]!==t[1])throw new Jf("Identity matrix initializer can only be used for 2D square matrices.");return(0,r.dC7)(this.gain,(0,r.iyy)(t[0]))}))}getConfig(){return{gain:this.gain}}}xm.className="Identity",r.m7h.ax(xm);class wm extends dm{constructor(t){if(super(),t.scale<0)throw new Jf(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,dp(lm,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){dp(hm,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(Fp(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=Up(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=Up(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=Up(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),s=n[0],i=n[1];let o=this.scale;if("fanIn"===this.mode?o/=Math.max(1,s):"fanOut"===this.mode?o/=Math.max(1,i):o/=Math.max(1,(s+i)/2),"normal"===this.distribution){const n=Math.sqrt(o);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Yf(`${this.getClassName()} does not support dType ${e}.`);return(0,r.Xu6)(t,0,n,e,this.seed)}{const n=Math.sqrt(3*o);return(0,r.LGj)(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}wm.className="VarianceScaling",r.m7h.ax(wm);class vm extends wm{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return wm.className}}vm.className="GlorotUniform",r.m7h.ax(vm);class km extends wm{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return wm.className}}km.className="GlorotNormal",r.m7h.ax(km);class $m extends wm{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return wm.className}}$m.className="HeNormal",r.m7h.ax($m);class Nm extends wm{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return wm.className}}Nm.className="HeUniform",r.m7h.ax(Nm);class Cm extends wm{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return wm.className}}Cm.className="LeCunNormal",r.m7h.ax(Cm);class Em extends wm{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return wm.className}}Em.className="LeCunNormal",r.m7h.ax(Em);class Sm extends dm{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new Yf("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return(0,r.lub)((()=>{if(t.length<2)throw new Yf("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=nm(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=r.$r2.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),(0,r.dC7)(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Sm.className="Orthogonal",r.m7h.ax(Sm);const Am={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Rm(t,e={}){return up(t,r.m7h.U3.getMap().classNameMap,e,"initializer")}function Tm(t){return op(t)}function Om(t){if("string"==typeof t){const e=t in Am?Am[t]:t;if("GlorotNormal"===e)return new km;if("GlorotUniform"===e)return new vm;if("HeNormal"===e)return new $m;if("HeUniform"===e)return new Nm;if("LeCunNormal"===e)return new Cm;if("LeCunUniform"===e)return new Em;{const t={};return t.className=e,t.config={},Rm(t)}}return t instanceof dm?t:Rm(t)}let Im=0;function Fm(){return Im++}const _m={};function Mm(t=""){return t in _m||(_m[t]=0),_m[t]+=1,t+_m[t].toString()}function Dm(t){return Array.isArray(t)&&Array.isArray(t[0])}function Lm(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Pm(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new Jf(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function Vm(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new Jf(`Expected exactly 1 Shape; got ${t.length}`)}return t}function zm(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}const Bm="Variable";class Wm{constructor(t,e="float32",n="Variable",s=!0,i=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Fm(),n=null==n?Bm:n,this.originalName=Pp(n),this.name=Vp(this.originalName),this.trainable_=s,this.constraint=i,this.val=r.VD$(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function Um(t){return t.map((t=>t.read()))}function Gm(t){t.forEach((t=>{t[0].write(t[1])}))}class jm{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Hm{constructor(t,e,n,r,s,i,o){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=o,this.id=Fm(),null!=i&&(this.originalName=Pp(i),this.name=Vp(this.originalName)),this.rank=e.length}}let qm=0;class Xm{constructor(t,e){this.callArgs=e,this.id=qm++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Jm=0;class Ym extends r.m7h.iV{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Jm++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=rp(t)+"_"+Mm(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new Xf(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new Jf(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return ep(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return ep(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new qf(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new qf(`Layer ${this.name} is not connected, no input to return.`);return ep(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new qf(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new qf(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ep(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=np(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=np(this.inputSpec);if(t.length!==e.length)throw new Jf(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const r=t[n],s=e[n];if(null==s)continue;const i=r.rank;if(null!=s.ndim&&i!==s.ndim)throw new Jf(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(null!=s.maxNDim&&i>s.maxNDim)throw new Jf(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(null!=s.minNDim&&i<s.minNDim)throw new Jf(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new Jf(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const e in s.axes){const r=Number(e),i=s.axes[e],o=r>=0?t[r]:t[t.length+r];if(null!=i&&-1===[i,null].indexOf(o))throw new Jf(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const e=s.shape[t],i=r.shape[t];if(null!=e&&null!=i&&e!==i)throw new Jf(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=np(t);let r=!0;for(const t of n)if(!(t instanceof Hm)){r=!1;break}let s=!0;for(const t of n)if(t instanceof Hm){s=!1;break}if(r===s)throw new Jf("Arguments to apply() must be all SymbolicTensors or all Tensors");return Lp(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of np(t))e.push(n.shape);this.build(ep(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let r=this.call(t,e);const s=np(r),i=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),i.push(t);if(r=ep(i),null!=this.activityRegularizer)throw new Yf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=np(t);const e=[];for(const n of t)e.push(n.shape);return ep(e)}(t),r=this.computeOutputShape(n);let s;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Hm(i,n,this,np(t),e,this.name,r))):new Hm(i,r,this,np(t),e,this.name),this.addInboundNode(t,s,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new Yf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new qf(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new qf(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Xf(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return zm(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Um(t?this.trainableWeights:this.weights)}setWeights(t){(0,r.lub)((()=>{const e=this.weights;if(e.length!==t.length)throw new Jf(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],s=Um(e);for(let i=0;i<s.length;++i){const o=s[i],a=e[i],u=t[i];if(!r.D5U.cO(o.shape,u.shape))throw new Jf(`Layer weight shape ${o.shape} not compatible with provided weight shape ${u.shape}`);n.push([a,u])}Gm(n)}))}addWeight(t,e,n,r,s,i,o){if(-1!==this._addedWeightNames.indexOf(t))throw new Jf(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Om("zeros"));const a=r.apply(e,n),u=new Wm(a,n,t,i,o);return a.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==i&&(i=!0),i?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=np(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,r,s,i,o=null){const a=np(t);e=np(e),n=np(n),r=np(r),s=Lm(s),i=Lm(i);const u=[],c=[],l=[];for(const t of a)u.push(t.sourceLayer),c.push(t.nodeIndex),l.push(t.tensorIndex);new Xm({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:l,inputTensors:a,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:i},o);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function Km(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=Km(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of r)-1===e.indexOf(t)&&e.push(t)}return e}}}class Qm extends Ym{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:Mm("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new Jf("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new Jf("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new Jf("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new Hm(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Xm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new Jf(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function Zm(t){if(null==t)return;const e=[],n=[],s=[];for(const r in t){const i=t[r];if("number"!=typeof i){const t=i;e.push(t.data()),n.push(r),s.push(t)}}if(e.length>0){const i=await Promise.all(e);for(let e=0;e<i.length;++e)t[n[e]]=i[e][0];(0,r.B90)(s)}}function tb(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var eb;Qm.className="InputLayer",r.m7h.ax(Qm),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(eb||(eb={}));class nb{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class rb{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class sb extends nb{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const s=e[t];if("number"==typeof s)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+s*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const i=(0,r.lub)((()=>(0,r.IHx)(this.totals[t],(0,r.dC7)(s,n))));this.totals[t]=i,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:(0,r.lub)((()=>{const n=(0,r.dC7)((0,r.hiC)(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),(0,r.CnY)(e[t])})))}}class ib extends nb{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const s=this.history[r];for(let i=0;i<s.length;++i)if("number"!=typeof s[i]){const o=s[i];t.push(o.data()),e.push(r),n.push(i)}}const r=await Promise.all(t);for(let t=0;t<r.length;++t){this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=r[t][0]}}}class ob extends nb{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");r.D5U.hj(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,s=r.D5U.zO();return(...i)=>{const o=r.D5U.zO();return o-s<e||(s=o,n=t(...i)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const s=[];null!=this.yield&&(await Zm(n),s.push(this.yield(t,e,n))),s.push((0,r.glt)()),await Promise.all(s)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await Zm(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await Zm(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push((0,r.glt)()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await Zm(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await Zm(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push((0,r.glt)()):r.D5U.hj(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await Zm(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await Zm(t),await this.trainEnd(t))}}function ab(t,e){if(null==t&&(t={}),t instanceof nb)return[t];if(Array.isArray(t)&&t[0]instanceof nb)return t;return np(t).map((t=>new ob(t,e)))}class ub{constructor(){}static registerCallbackConstructor(t,e){r.D5U.hu(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),ub.checkForDuplicate(e),null==ub.constructors[t]&&(ub.constructors[t]=[]),ub.constructors[t].push(e)}static checkForDuplicate(t){for(const e in ub.constructors){ub.constructors[+e].forEach((e=>{if(e===t)throw new Jf("Duplicate callback constructor.")}))}}static clear(){ub.constructors={}}static createCallbacks(t){const e=[];for(const n in ub.constructors){const r=+n;t>=r&&e.push(...ub.constructors[r])}return e.map((t=>new t))}}function cb(t,e,n,r,s,i,o,a,u){const c=new ib,l=[new sb,...ub.createCallbacks(e)];null!=t&&l.push(...t),l.push(c);const h=new rb(l);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:i,batchSize:o,verbose:e,doValidation:a,metrics:u}),{callbackList:h,history:c}}function lb(t,e={},n=!1){return up(t,r.m7h.U3.getMap().classNameMap,e,"layer",n)}function hb(t,e){return(0,r.lub)((()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=r.Smz(im(t),e,!0),s=r.hlL(n.shape,Hf()),i=r._b3(r.gWQ(n,s));return r.hiC(t,i)}))}function db(t,e){return(0,r.lub)((()=>r.J69(im(r.luU(e,t)),-1)))}function fb(t,e){return(0,r.lub)((()=>r.J69(r.WnP(r.luU(e,t)),-1)))}function pb(t,e){return(0,r.lub)((()=>{const n=r.luU(t,e),s=r.iUl(r.WnP(t),Hf(),Number.MAX_VALUE),i=r.WnP(r.hiC(n,s));return r.dC7(100,r.J69(i,-1))}))}function mb(t,e){return(0,r.lub)((()=>{const n=r.iUl(e,Hf(),Number.MAX_VALUE),s=r.cM7(r.IHx(1,n)),i=r.iUl(t,Hf(),Number.MAX_VALUE),o=r.cM7(r.IHx(1,i));return r.J69(im(r.luU(s,o)),-1)}))}function bb(t,e,n=!1){return(0,r.lub)((()=>{if(n)e=r.XAC(e);else{const t=r.Smz(e,e.shape.length-1,!0);e=r.hiC(e,t)}return e=r.iUl(e,Hf(),1-Hf()),r.W76(r.Smz(r.dC7(t.toFloat(),r.cM7(e)),e.shape.length-1))}))}function yb(t,e,n=!1){return(0,r.lub)((()=>{const s=r.GWj(function(t){const e=[Up(t.shape)];return t.reshape(e)}(t)).toInt(),i=(e=r.iUl(e,Hf(),1-Hf())).shape;return bb(r.lfX(s,i[i.length-1]).reshape(i),e,n)}))}function gb(t,e){return(0,r.lub)((()=>{let n;return n=r.iUl(e,Hf(),1-Hf()),n=r.cM7(r.hiC(n,r.luU(1,n))),r.J69(function(t,e){if(!r.D5U.cO(t.shape,e.shape))throw new Jf(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return(0,r.lub)((()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())}))}(t,n),-1)}))}function xb(t,e){return(0,r.lub)((()=>{const n=r.iUl(t,Hf(),1),s=r.iUl(e,Hf(),1);return r.Smz(r.dC7(t,r.cM7(r.hiC(n,s))),-1)}))}function wb(t,e){return(0,r.lub)((()=>{const n=hb(t,-1),s=hb(e,-1),i=r.dC7(n,s);return r.W76(r.Smz(i,-1))}))}ub.constructors={};const vb={meanSquaredError:db,meanAbsoluteError:fb,meanAbsolutePercentageError:pb,meanSquaredLogarithmicError:mb,squaredHinge:function(t,e){return(0,r.lub)((()=>{const n=r.gWQ(0,r.luU(1,r.dC7(t,e)));return r.J69(im(n),-1)}))},hinge:function(t,e){return(0,r.lub)((()=>{const n=r.gWQ(0,r.luU(1,r.dC7(t,e)));return r.J69(n,-1)}))},categoricalHinge:function(t,e){return(0,r.lub)((()=>{const n=r.Smz(r.dC7(t,e),-1),s=r.Fp7(r.dC7(r.luU(1,t),e),-1);return r.gWQ(0,r.IHx(1,r.luU(s,n)))}))},logcosh:function(t,e){return(0,r.lub)((()=>{const n=Math.log(2),s=r.luU(e,t),i=r.luU(r.IHx(s,r.Wvh(r.dC7(-2,s))),n);return r.J69(i,-1)}))},categoricalCrossentropy:bb,sparseCategoricalCrossentropy:yb,binaryCrossentropy:gb,kullbackLeiblerDivergence:xb,poisson:function(t,e){return(0,r.lub)((()=>{const n=r.cM7(r.IHx(Hf(),e));return r.J69(r.luU(e,r.dC7(t,n)),-1)}))},cosineProximity:wb};function kb(t){if("string"==typeof t){if(t in vb)return vb[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Jf(e)}return t}function $b(t,e){return(0,r.lub)((()=>{const n=r.dC7(.5,r.JpU(e)),s=Xp(r.pjt(e,n),t.dtype);return r.J69(r.DgJ(t,s),-1)}))}function Nb(t,e){return(0,r.lub)((()=>Xp(r.DgJ(r.NqF(t,-1),r.NqF(e,-1)),"float32")))}function Cb(t,e){return(0,r.lub)((()=>r.HvI(t.equal(1),e.equal(1)).sum().cast("float32")))}function Eb(t,e){return gb(t,e)}function Sb(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),r.DgJ(t,e).asType("float32")}const Ab=bb,Rb=yb,Tb={binaryAccuracy:$b,categoricalAccuracy:Nb,precision:function(t,e){return(0,r.lub)((()=>{const n=Cb(t,e),s=function(t,e){return(0,r.lub)((()=>r.HvI(t.equal(0),e.equal(1)).sum().cast("float32")))}(t,e),i=n.add(s);return r.arb(r.pjt(i,0),n.div(i),0).cast("float32")}))},categoricalCrossentropy:Ab,sparseCategoricalCrossentropy:Rb,mse:db,MSE:db,mae:fb,MAE:fb,mape:pb,MAPE:pb,cosine:wb};function Ob(t){if("string"==typeof t&&t in Tb)return Tb[t];if("string"!=typeof t&&null!=t)return t;throw new Jf(`Unknown metric ${t}`)}function Ib(t){if(Zf(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(vb))if(vb[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Tb))if(Tb[n]===t){e=n;break}return void 0!==e?e:t.name}}const Fb=1048576;function _b(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Mb(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>Fb&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Mb(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!Mb(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Mb(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function Db(t,e,n,r=console.log){const s=function(t){let e=!0;const n=[],r=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}r.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),i=["Layer (type)","Output shape","Param #"];let o;if(s?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!s){i.push("Receives inputs"),o=[];for(const e in t.nodesByDepth)o.push(...t.nodesByDepth[e])}r("_".repeat(e)),Lb(i,n,r),r("=".repeat(e));const a=t.layers;for(let t=0;t<a.length;++t)s?Pb(a[t],n,r):Vb(a[t],n,o,r),r((t===a.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const u=function(t){let e;e=null!=t.collectedTrainableWeights?zm(t.collectedTrainableWeights):zm(t.trainableWeights);return e}(t),c=zm(t.nonTrainableWeights);r(`Total params: ${u+c}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${c}`),r("_".repeat(e))}function Lb(t,e,n=console.log){let r="";for(let n=0;n<t.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=t[n],r=r.slice(0,e[n]),r+=" ".repeat(e[n]-r.length);n(r)}function Pb(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}Lb([`${t.name} (${t.getClassName()})`,r,t.countParams().toString()],e,n)}function Vb(t,e,n,r){let s;try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}const i=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,r=e.nodeIndices[t],s=e.tensorIndices[t];i.push(`${n}[${r}][${s}]`)}const o=t.name,a=t.getClassName(),u=0===i.length?"":i[0];Lb([`${o} (${a})`,s,t.countParams().toString(),u],e,r);for(let t=1;t<i.length;++t)Lb(["","","",i[t]],e,r)}function zb(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function Bb(t,e){if(null===t)return null;if("string"==typeof t)return sp(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];zb(e,s,r)?n.push(r):n.push(Bb(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=sp(n);e[t]=Bb(r,t)}}return e}}function Wb(t,e){if(null==t)return null;if("string"==typeof t)return rp(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];zb(e,s,r)?n.push(r):n.push(Wb(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n],s=rp(n);e[s]="name"!==n&&"className"!==n||"string"!=typeof r?Wb(r,n):r}return e}}class Ub{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Ub)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new Jf(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return(0,r.pju)(e,t.dtype)}catch(n){throw new Jf(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Hm){if(null==this.id2Value[t.id])throw new Jf(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new Jf(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Hm){if(null==this.id2Value[t.id])throw new Jf(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new Jf(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&(0,r.B90)(this.id2Mask)}}const Gb={},jb={};function Hb(t,e,n,s){const i=null!=n&&n.training,o=Array.isArray(t),a=o?t:[t],u=a.map((t=>t.name)),c=[],l=e.names();for(const t of u)-1!==l.indexOf(t)?c.push(e.getValue(t)):c.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const h=u.join(",")+"|"+e.names().join(",");let d,f;if(null==Gb[h]){const t=function(t,e){r.D5U.hu(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===t.length){const r=Xb(t[0],e);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const i of t){const{sorted:t,recipientMap:o}=Xb(i,e);for(const e of t)r.has(e.name)||(n.push(e),r.add(e.name));for(const t in o)null==s[t]&&(s[t]=new Set),o[t].forEach((e=>s[t].add(e)))}}return{sorted:n,recipientCounts:qb(s)}}(a,e);d=t.sorted,f=t.recipientCounts,Gb[h]=d,jb[h]=f}d=Gb[h],f={},i||Object.assign(f,jb[h]);const p=new Ub(e);for(let t=0;t<d.length;++t){if(null!=s){const t=(0,r.sq6)().numTensors;t>s.maxNumTensors&&(s.maxNumTensors=t),t<s.minNumTensors&&(s.minNumTensors=t)}const o=d[t],a=o.sourceLayer;if(a instanceof Qm)continue;const l=[],h=[],m=[];let b=!1;for(const t of o.inputs){const n=p.getValue(t),r=p.getMask(t);l.push(n),h.push(r),null!=r&&(b=!0),i||(f[t.name]--,0!==f[t.name]||e.hasKey(t)||-1!==u.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||m.push(n))}b&&((n=n||{}).mask=h[0]);const y=np(a.apply(l,n));let g=null;a.supportsMasking&&(g=a.computeMask(l,h));const x=Jb(o),w=Array.isArray(x)?x:[x];for(let t=0;t<w.length;++t){p.hasKey(w[t])||p.add(w[t],y[t],Array.isArray(g)?g[0]:g);const e=u.indexOf(w[t].name);-1!==e&&(c[e]=y[t])}i||(0,r.B90)(m)}return p.disposeMasks(),o?c:c[0]}function qb(t){const e={};for(const n in t)e[n]=t[n].size;return e}function Xb(t,e){const n=new Set,r=[],s={};for(const t of e.names())n.add(t);const i=[],o=[];for(i.push(t);i.length>0;){const t=i[i.length-1];if(n.has(t.name)){i.pop();continue}const e=o[o.length-1]===i.length-1;if(0===t.inputs.length||e)i.pop(),r.push(t),n.add(t.name),e&&o.pop();else{o.push(i.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||i.push(e)}}return{sorted:r,recipientMap:s}}function Jb(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class Yb extends Ym{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=Mm(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],lp(this.inputs).length!==this.inputs.length)throw new Jf(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((t=>t.name))}`);lp(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((t=>t.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;Zf(0===n,"input layer has >1 nodes"),Zf(0===r,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof Qm))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},r={},s={},i={},o=[],a=(t,e,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=t.sourceLayer,s=t.nodeIndex,u=t.tensorIndex);const c=r.inboundNodes[s];if(-1!==n.indexOf(c))throw new Xf(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(c))return;this.containerNodes.add(Yb.nodeKey(r,s)),r.id in i||(i[r.id]=Object.keys(i).length),-1===n.indexOf(c)&&n.push(c);const l=c.inboundLayers.length;for(let t=0;t<l;t++){const r=c.inputTensors[t],s=c.inboundLayers[t],i=c.nodeIndices[t],o=c.tensorIndices[t];a(r,e,n,s,i,o)}for(e.push(c);n.indexOf(c)>=0;)n.splice(n.indexOf(c),1);o.push(c)},u=[],c=[];for(const t of this.outputs)a(t,u,c);const l=o.slice().reverse();for(const t of l){n[t.id]=t,t.id in e||(e[t.id]=0);let i=e[t.id];const o=null==r[t.outboundLayer.id]?0:r[t.outboundLayer.id];i=Math.max(i,o),r[t.outboundLayer.id]=i,s[t.outboundLayer.id]=t.outboundLayer,e[t.id]=i;for(let r=0;r<t.inboundLayers.length;r++){const s=t.inboundLayers[r],o=t.nodeIndices[r],a=s.inboundNodes[o],u=null==e[a.id]?0:e[a.id];e[a.id]=Math.max(i+1,u),n[a.id]=a}}const h={};for(const t in e){const r=e[t];r in h||(h[r]=[]),h[r].push(n[t])}const d={};for(const t in r){const e=r[t];e in d||(d[e]=[]),d[e].push(s[t])}let f=Object.keys(d).map((t=>parseInt(t,10))).sort(cp);this.layers=[];for(const t of f){const e=d[t];e.sort(((t,e)=>{const n=i[t.id],r=i[e.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof Yb&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,f=Object.keys(h).map((t=>parseInt(t,10))).sort(cp);const p=this.inputs.slice(),m=[];for(const t of f)for(const e of h[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===p.indexOf(n))throw new Xf(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)p.push(t);m.push(t.name)}}this.nodesByDepth=h;const b=this.layers.map((t=>t.name));for(const t of b){const e=b.filter((e=>e===t)).length;if(1!==e)throw new Xf(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(b))}this.outboundNodes=[],this.inboundNodes=[],new Xm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new Jf("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new Jf(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,r++}const s=[];for(const r in t){let i=r;if(null==n[r]){const t=r.split("/");i=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[i])s.push([n[i],t[r]]);else if(e)throw new Jf(`Provided weight data has no target variable: ${r}`);delete n[i]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new Jf(`${t.length} of ${r} weights are not set: ${t}`)}Gm(s)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 2.8.3",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=Wb(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return(0,r.lub)((()=>{t=np(t);const n=new Ub;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return Hb(this.outputs,n,e)}))}computeMask(t,e){return(0,r.lub)((()=>{let n;return t=np(t),n=null==e?Qf(null,t.length):np(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=Lm(t);if(e.length!==this.inputLayers.length)throw new Jf(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const r=this.inputLayers[t],s=e[t];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(cp);if(r.length>1)for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const r=[];for(let e=0;e<t.inboundLayers.length;e++){const s=t.inboundLayers[e],i=t.nodeIndices[e],o=t.tensorIndices[e],a=n[`${s.name}_${i}_${o}`];r.push(a)}const s=Lm(e.computeOutputShape(ep(r))),i=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++){n[`${e.name}_${i}_${t}`]=s[t]}}}const s=[],i=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],r=this.outputLayersTensorIndices[t],s=`${e.name}_${n}_${r}`;i.push(s)}for(let t=0;t<i.length;t++){const e=i[t];Zf(e in n),s.push(n[e])}return ep(s)}runInternalGraph(t,e){null==e&&(e=Qf(null,t.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],i=t[r],o=e[r];n[s.id]=[i,o]}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(cp);for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,i=new Array;for(const t of r)t.id in n&&i.push(n[t.id]);if(i.length===r.length){let r,o,a,u,c={};if(null!=t.callArgs&&(c=t.callArgs),1===i.length){const[t,n]=i[0];null==c.mask&&(c.mask=n),a=np(e.call(t,c)),u=np(e.computeMask(t,n)),r=[t],o=[n]}else r=i.map((t=>t[0])),o=i.map((t=>t[1])),null==c.mask&&(c.mask=o),a=np(e.call(r,c)),u=np(e.computeMask(r,o));if(e.activityRegularizer)throw new Yf("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],r=a[t],i=u[t];n[e.id]=[r,i]}}}}const s=[],i=[],o=[];for(const t of this.outputs){Zf(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,r]=n[t.id];o.push(e.shape),s.push(e),i.push(r)}return[s,i,o]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof Yb?1:0;for(let r=0;r<t.inboundNodes.length;r++){const s=Yb.nodeKey(t,r);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new Jf(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new Jf("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new Jf(`No such layer: ${t}`)}calculateLosses(){return(0,r.lub)((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=Yb.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const r=t.getClassName(),s=t.getConfig(),i=[];for(let n=0;n<t.inboundNodes.length;n++){const r=t.inboundNodes[n],s=Yb.nodeKey(t,n);let o={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),o=r.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),o={}}if(r.inboundLayers.length>0){const t=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],i=r.nodeIndices[n],a=r.tensorIndices[n];let u=e[Yb.nodeKey(s,i)];null==u&&(u=0),t.push([s.name,u,a,o])}i.push(t)}}}const o={};o.name=t.name,o.className=r,o.config=s,o.inboundNodes=i,n.push(o)}t.layers=n;const r=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],s=this.inputLayersNodeIndices[t],i=Yb.nodeKey(n,s);if(!this.containerNodes.has(i))continue;let o=e[i];null==o&&(o=0);const a=this.inputLayersTensorIndices[t];r.push([n.name,o,a])}t.inputLayers=r;const s=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],r=this.outputLayersNodeIndices[t],i=Yb.nodeKey(n,r);if(!this.containerNodes.has(i))continue;let o=e[i];null==o&&(o=0);const a=this.outputLayersTensorIndices[t];s.push([n.name,o,a])}return t.outputLayers=s,t}static fromConfig(t,e,n={},r=!1){const s={},i={};function o(t,e){t.name in i?i[t.name].push(e):i[t.name]=[e]}function a(t,e){const n=[];let r;for(const i of e){const a=i[0],u=i[1],c=i[2];if(r=null==i[3]?{}:i[3],!(a in s))return void o(t,e);const l=s[a];if(l.inboundNodes.length<=u)return void o(t,e);const h=l.inboundNodes[u];n.push(h.outputTensors[c])}n.length>0&&t.apply(ep(n),r)}function u(t){const n=t.name,i=lb(t,null!=e.customObjects?e.customObjects:{});i.setFastWeightInitDuringBuild(r),s[n]=i;t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new Jf(`Corrupted configuration, expected array for nodeData: ${t}`);o(i,t)}))}const c=e.name,l=e.layers;for(const t of l)u(t);for(;!hp(i);)for(const t of l){const e=s[t.name];if(e.name in i){const t=i[e.name];delete i[e.name];for(const n of t)a(e,n)}}const h=[],d=[],f=e.inputLayers;for(const t of f){const e=t[0],n=t[1],r=t[2];Zf(e in s);const i=s[e].inboundNodes[n].outputTensors;h.push(i[r])}const p=e.outputLayers;for(const t of p){const e=t[0],n=t[1],r=t[2];Zf(e in s);const i=s[e].inboundNodes[n].outputTensors;d.push(i[r])}return new t({inputs:h,outputs:d,name:c})}get stateful(){if(this._stateful)throw new Jf("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){(0,r.lub)((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function Kb(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}function Qb(t,e){return Kb(t,e,"classWeight")}async function Zb(t,e,n,s){if(null!=e||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=(0,r.lub)((()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await e.data());(0,r.B90)(e);const i=[];return s.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);i.push(n[t])})),(0,r.RRF)(i,"float32")}return null}function ty(t,e){return(0,r.dC7)(t,e)}function ey(t,e){let n,s;const i=e;n=i.xs,s=i.ys,r.D5U.hu(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`));const o=ny("input",t.inputNames,n),a=ny("output",t.outputNames,s),u=o[0].shape[0];r.D5U.hu(o.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`)),r.D5U.hu(a.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`));for(let e=0;e<o.length;e++)r.D5U.hu(o[e].shape[0]===u,(()=>`Batch size mismatch: input ${t.inputNames[e]} has ${o[e].shape[0]}; expected  ${u} based on input ${t.inputNames[0]}.`));for(let e=0;e<a.length;e++)r.D5U.hu(a[e].shape[0]===u,(()=>`Batch size mismatch: output ${t.outputNames[e]} has ${a[e].shape[0]}; expected  ${u} based on input ${t.inputNames[0]}.`));return{xs:o,ys:a}}function ny(t,e,n){if(n instanceof r.esB)return[n];if(Array.isArray(n))return r.D5U.hu(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const r=[];for(const s of e){if(null==n[s])throw new Jf(`The feature data generated by the dataset lacks the required ${t} key '${s}'.`);r.push(n[s])}return r}}async function ry(t,e,n){const s=null!=n.batchesPerEpoch;if(r.D5U.hu(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),r.D5U.hu(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),r.D5U.hu(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),r.D5U.hu(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),r.D5U.hu(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const i=null!=n.validationData;let o,a;if(i)if(sy(n.validationData))r.D5U.hu(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const t=function(t){if(3===t.length)throw new Yf("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);o=t.xs,a=t.ys}const u=t.makeTrainFunction(),c=t.getDedupedMetricsNames();let l;l=i?c.slice().concat(c.map((t=>"val_"+t))):c.slice();const h=ab(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:f,history:p}=cb(h,d,n.epochs,null,null,function(t,e){let n=null;null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size);return n}(e,n),null,i,l);f.setModel(t),t.history=p,await f.onTrainBegin(),t.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,b=await e.iterator();for(;m<n.epochs;){const l={};await f.onEpochBegin(m);let h=0,d=0;for(s||(b=await e.iterator());!s||h<n.batchesPerEpoch;){const e=await b.next();if(s&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${h} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:s,ys:i}=ey(t,e.value),o={};o.batch=d,o.size=s[0].shape[0],await f.onBatchBegin(d,o);const a=[];if(null!=n.classWeight){const e=Qb(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)a.push(await Zb(i[t],null,e[t]))}const l=s.concat(i).concat(a),p=u(l);r.B90(l);for(let t=0;t<c.length;++t){const e=c[t],n=p[t];o[e]=n,r.CnY(n)}await f.onBatchEnd(d,o),tb(o),d++,h++}if(s?h>=n.batchesPerEpoch:e.done){if(i){let e;e=sy(n.validationData)?np(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):np(t.evaluate(o,a,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)l[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(await f.onEpochEnd(m,l),m++,t.stopTraining_)break}return await f.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function sy(t){return"function"==typeof t.iterator}function iy(t){r.D5U.hu(t>0&&Number.isInteger(t),(()=>`batchSize is required to be a positive integer, but got ${t}`))}function oy(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>Yp(t,e,n-e))):Yp(t,e,n-e)}function ay(t,e){return r.lub((()=>null==t?null:Array.isArray(t)?t.map((t=>ay(t,e))):sm(t,"int32"===e.dtype?e:e.toInt())))}function uy(t,e){const n=[];let r=0,s=null;for(;r<t;)s=r+e,s>=t&&(s=t),n.push([r,s]),r=s;return n}async function cy(t,e,n,s={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let i,o,a,u,c,l,h;t.isTraining=!0;try{const d=null==s.batchSize?32:s.batchSize;iy(d);const f=!1,p=await t.standardizeUserData(e,n,s.sampleWeight,s.classWeight,f,d);i=p[0],o=p[1],h=p[2];let m,b=!1;if(null!=s.validationData&&s.validationData.length>0){if(b=!0,2!==s.validationData.length)throw 3===s.validationData.length?new Yf("validationData including sample weights is not supported yet."):new Jf(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);a=s.validationData[0],u=s.validationData[1];const e=!0,n=await t.standardizeUserData(a,u,null,null,e,d);c=n[0],l=n[1],m=c.concat(l)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){b=!0;const t=Math.floor(i[0].shape[0]*(1-s.validationSplit)),e=i[0].shape[0];c=oy(i,t,e),i=oy(i,0,t),l=oy(o,t,e),o=oy(o,0,t),m=c.concat(l)}else null!=s.validationSteps&&(b=!0);const y=i.concat(o).concat(h);t.checkTrainableWeightsConsistency();const g=t.makeTrainFunction(),x=t.getDedupedMetricsNames();let w,v;b?(t.makeTestFunction(),w=t.testFunction,v=x.slice().concat(x.map((t=>"val_"+t)))):(w=null,m=[],v=x.slice());const k=ab(s.callbacks,s.yieldEvery);return await async function(t,e,n,s,i,o,a,u,c,l,h,d,f,p,m){null==i&&(i=32),null==o&&(o=1),null==h&&(h=!0),null==f&&(f=0);let b=!1;if(null!=c&&null!=l&&(b=!0),null!=m&&(b=!0,null==p))throw new Jf("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const y=t.checkNumSamples(n,i,p,"steps_per_epoch");let g;null!=y&&(g=qp(0,y)),null==a&&(a=1);const{callbackList:x,history:w}=cb(u,a,o,f,y,p,i,b,d);x.setModel(t),t.history=w,await x.onTrainBegin(),t.stopTraining_=!1;for(let a=f;a<o;++a){await x.onEpochBegin(a);const o={};if(null!=p)throw new Yf("stepsPerEpoch mode is not implemented yet.");{if("batch"===h)throw new Yf("batch shuffling is not implemneted yet");h&&r.D5U.TV(g);const a=(0,r.RRF)(g),u=uy(y,i);for(let h=0;h<u.length;++h){const d={};if(await x.onBatchBegin(h,d),r.lub((()=>{const f=u[h][0],p=u[h][1],m=Yp(a,f,p-f);d.batch=h,d.size=p-f;const y=ay(n,m),g=e(y);for(let t=0;t<s.length;++t){const e=s[t],n=g[t];d[e]=n,r.CnY(n)}if(h===u.length-1&&b){const e=t.testLoop(c,l,i);for(let t=0;t<s.length;++t){const n=s[t],i=e[t];r.CnY(i),o["val_"+n]=i}}})),await x.onBatchEnd(h,d),tb(d),t.stopTraining_)break}a.dispose()}if(await x.onEpochEnd(a,o),t.stopTraining_)break}return await x.onTrainEnd(),await t.history.syncData(),t.history}(t,g,y,x,d,s.epochs,s.verbose,k,w,m,s.shuffle,v,s.initialEpoch,null,null)}finally{t.isTraining=!1,hy(i,e),hy(o,n),hy(c,a),hy(l,u),null!=h&&r.B90(h)}}function ly(t){const e=[];t instanceof r.esB&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(Jp(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function hy(t,e){if(null==t)return;const n=[];if(e instanceof r.esB)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const r=e[t];n.push(r.id)}const s=[];if(t instanceof r.esB)-1===n.indexOf(t.id)&&s.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&s.push(t)}));else if(null!=t)for(const e in t){const r=t[e];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((t=>{t.isDisposed||t.dispose()}))}function dy(t){return Array.isArray(t)}function fy(t){return!function(t){return t instanceof r.esB}(t)&&!dy(t)}function py(t,e,n,r=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(dy(t)&&t.length>0)e=!0;else if(fy(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new Jf(`Error when checking model ${s} expected no data, but got ${t}`)}return[]}if(null==t)return e.map((t=>null));let i;if(fy(t)){t=t,i=[];for(const n of e){if(null==t[n])throw new Jf(`No data provided for "${n}". Need data for each key in: ${e}`);i.push(t[n])}}else if(dy(t)){if((t=t).length!==e.length)throw new Jf(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);i=t}else{if(t=t,e.length>1)throw new Jf(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);i=[t]}if(i=ly(i),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const o=i[t];if(o.shape.length!==n[t].length)throw new Jf(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape ${o.shape}`);for(let i=0;i<n[t].length;++i){if(0===i&&!r)continue;const a=o.shape[i],u=n[t][i];if(null!=u&&u>=0&&a!==u)throw new Jf(`Error when checking ${s}: expected ${e[t]} to have shape [${n[t]}], but got array with shape [${o.shape}].`)}}return i}function my(t,e,n,r=!0,s=""){let i;if(Array.isArray(t)){if(t.length!==e.length)throw new Jf(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);i=t}else{if(e.length>1)throw new Jf(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);i=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const o=i[t];if(o.shape.length!==n[t].length)throw new Jf(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let i=0;i<n[t].length;++i){if(0===i&&!r)continue;const a=o.shape[i],u=n[t][i];if(null!=u&&u!==a)throw new Jf(`Error when checking ${s}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}class by extends Yb{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new Jf("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Db(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>r.p_j.adagrad(.01),Adadelta:()=>r.p_j.adadelta(1,.95,Hf()),Adam:()=>r.p_j.adam(.001,.9,.999,Hf()),Adamax:()=>r.p_j.adamax(.002,.9,.999,Hf(),0),RMSProp:()=>r.p_j.rmsprop(.001,.9,0,Hf()),SGD:()=>r.p_j.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new Jf(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof r.gaJ))throw new Jf("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new Jf(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>kb(t)))}else{const n=kb(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new Jf(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(kb(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Lp("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const s=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),i=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};Lp("metric",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;(e=>{let n,r,s;for(const o of e){if("string"==typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const e=this.internalOutputShapes[t];let i;1===e[e.length-1]||this.lossFunctions[t]===gb?-1!==["accuracy","acc"].indexOf(o)?r=$b:-1!==["crossentropy","ce"].indexOf(o)&&(r=Eb):this.lossFunctions[t]===yb?-1!==["accuracy","acc"].indexOf(o)?r=Sb:-1!==["crossentropy","ce"].indexOf(o)&&(r=Rb):-1!==["accuracy","acc"].indexOf(o)?r=Nb:-1!==["crossentropy","ce"].indexOf(o)&&(r=Ab),-1!==["accuracy","acc"].indexOf(o)?i="acc":-1!==["crossentropy","ce"].indexOf(o)&&(i="ce"),s=r,n=""+i}else{const t=Ob(o);s=t,n=""+Ib(o)}let e;Lp(n,(()=>{e=s})),i(t,n,e)}})(s[t])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;iy(r);const s=this.standardizeUserDataXY(t,e,!0,r);try{const i=s[0].concat(s[1]);this.makeTestFunction();const o=this.testFunction;return ep(this.testLoop(o,i,r,n.verbose,n.steps))}finally{hy(s[0],t),hy(s[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const s=null!=(n=n||{}).batches,i=t.testFunction;let o=[];if(n.verbose>0)throw new Yf("Verbose mode is not implemented yet.");r.D5U.hu(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const a="function"==typeof e.next?e:await e.iterator();let u=0,c=0;for(;!s||c<n.batches;){const e=await a.next();if(o=r.lub((()=>{if(e.value){const{xs:n,ys:s}=ey(t,e.value),a=n.concat(s),l=r.lub((()=>i(a)));if(r.B90(a),0===c)for(let t=0;t<l.length;++t)o.push((0,r.iD$)(0));const h=a[0].shape[0];for(let t=0;t<l.length;++t){const e=l[t],n=o[t];o[t]=r.lub((()=>r.IHx(o[t],r.dC7(h,e)))),c>0&&r.B90(n)}r.B90(l),u+=h,++c}return o})),e.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<o.length;++t){const e=o[t];o[t]=r.hiC(o[t],u),r.B90(e)}return ep(o)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let s;if(null!=n){if(s=null,null!=e)throw new Jf(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new Jf(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return s}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new Jf("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),s=n?e:[e],i=this.retrieveSymbolicTensors(s),o=new Ub;if(t instanceof r.esB&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new Jf(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)o.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new Jf(`No value is provided for the model's input ${e.name}`);o.add(e,n)}const a=Hb(i,o);return n?a:a[0]}retrieveSymbolicTensors(t){const e=Qf(null,t.length);let n=t.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],i=s.map((t=>t.name));for(let r=0;r<t.length;++r){const o=i.indexOf(t[r]);if(-1!==o&&(e[r]=s[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,r)=>{null==e&&n.push(t[r])})),new Jf(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return r.lub((()=>{const s=this.checkNumSamples(t);if(n)throw new Yf("Verbose predictLoop() is not implemented yet.");const i=uy(s,e),o=this.outputs.map((t=>[]));for(let e=0;e<i.length;++e){r.lub((()=>{const n=i[e][0],r=i[e][1],s=oy(t,n,r),o=[];if(Array.isArray(s))for(let t=0;t<s.length;++t)o.push({key:this.inputs[t],value:s[t]});else o.push({key:this.inputs[0],value:s});const a=new Ub(o);return Hb(this.outputs,a)})).forEach(((t,e)=>o[e].push(t)))}return ep(o.map((t=>r.zoF(t,0))))}))}predict(t,e={}){const n=ly(t);my(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return iy(r),this.predictLoop(n,r)}finally{hy(n,t)}}predictOnBatch(t){my(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,s){if(null==this.optimizer_)throw new Xf("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===yb?i.push(e.slice(0,e.length-1).concat([1])):i.push(e)}if(function(t,e,n){const s=lp(t.map((t=>t.shape[0])));s.sort();const i=lp(e.map((t=>t.shape[0])));if(i.sort(),s.length>1)throw new Jf(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((t=>t.shape)))}`);if(i.length>1)throw new Jf(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((t=>t.shape)))}`);if(s.length>0&&i.length>0&&!r.D5U.cO(s,i))throw new Jf(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${i[0]} target sample(s).`)}(t=py(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=py(e,this.feedOutputNames,i,!1,"target")),function(t,e,n){const r=[db,gb,bb];for(let s=0;s<t.length;++s){const i=t[s],o=e[s],a=n[s];if(null!=o){if(o===bb&&1===i.shape[i.shape.length-1])throw new Jf(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(o)){const t=i.shape.slice(1),e=a.slice(1);for(let n=0;n<t.length;++n){const r=t[n],s=e[n];if(null!=s&&r!==s)throw new Jf(`A target Tensor with shape ${i.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&t[0].shape[0]%s!=0)throw new Jf(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,s=!0,i){const[o,a]=this.standardizeUserDataXY(t,e,s,i);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const t=Qb(r,this.outputNames);u=[];for(let e=0;e<t.length;++e)u.push(await Zb(a[e],null,t[e]))}return[o,a,u]}testLoop(t,e,n,s=0,i){return r.lub((()=>{const o=this.checkNumSamples(e,n,i,"steps"),a=[];if(s>0)throw new Yf("Verbose mode is not implemented yet.");if(null!=i)throw new Yf("steps mode in testLoop() is not implemented yet");{const s=uy(o,n),i=(0,r.RRF)(qp(0,o));for(let n=0;n<s.length;++n){const o=s[n][0],u=s[n][1],c=Yp(i,o,u-o),l=ay(e,c),h=t(l);if(0===n)for(let t=0;t<h.length;++t)a.push((0,r.iD$)(0));for(let t=0;t<h.length;++t){const e=h[t];a[t]=r.IHx(a[t],r.dC7(u-o,e))}}for(let t=0;t<a.length;++t)a[t]=r.hiC(a[t],o)}return a}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let s=r;if(tp(t,r)>1){s+=`_${tp(t.slice(0,n),r)}`}e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),o=[],a=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const a=new Ub(t),u=Hb(this.outputs,a,{training:!0});let c;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(s[t],u[t]);null!=i[t]&&(n=ty(n,i[t]));const o=r.J69(n);e.push(o),c=0===t?n:r.IHx(c,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],i=this.metricsTensors[t][1];n=r.J69(e(s[i],u[i]))}r.CnY(n),o.push(n)}return c=r.J69(c),this.calculateLosses().forEach((t=>{c=r.IHx(c,t)})),c}),!0,a)].concat(o)}}makeTestFunction(){this.testFunction=t=>r.lub((()=>{const e=[];let n;const s=t.slice(0,this.inputs.length),i=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let t=0;t<this.inputs.length;++t)o.push({key:this.inputs[t],value:s[t]});const a=new Ub(o),u=Hb(this.outputs,a);for(let t=0;t<this.lossFunctions.length;++t){const s=this.lossFunctions[t],o=r.J69(s(i[t],u[t]));n=0===t?o:r.IHx(n,o),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],s=this.metricsTensors[t][1],o=r.J69(n(i[s],u[s]));e.push(o)}return e}))}async fit(t,e,n={}){return cy(this,t,e,n)}async fitDataset(t,e){return ry(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),s=n[0],i=n[1],o=this.makeTrainFunction()(s.concat(i)),a=[];for(const t of o){const e=await t.data();a.push(e[0])}return r.B90(o),ep(a)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let t=0;t<r.length;++t)n&&!r[t].trainable||e.push({name:r[t].originalName,tensor:s[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=r.sq6().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-r.sq6().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=rp(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>rp(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=rp(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[rp(Ib(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>rp(Ib(t))));{const t={};for(const e in this.metrics)t[e]=rp(Ib(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=lb(Bb(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=sp(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>sp(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=sp(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map((t=>sp(t)));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=sp(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"==typeof t){const e=r.io.yB(t);if(0===e.length)throw new Jf(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Jf(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Jf("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await r.io.yz(this.getNamedWeights(e)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v2.8.3",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:i}=await r.io.yz(await this.optimizer.getWeights(),t);n.specs.push(...i),n.data=r.io.JY([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;_b(this.userDefinedMetadata,this.name,t),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=n.data,s.weightSpecs=n.specs,t.save(s)}setUserDefinedMetadata(t){_b(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}by.className="Model",r.m7h.ax(by);class yy extends by{}yy.className="Functional",r.m7h.ax(yy);class gy extends by{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:Mm("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new Jf(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof gy||t instanceof by;let n;if(e){if(n=t,1!==n.outputs.length)throw new Jf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Jf("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new Jf("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new Jf("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new Qm({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new Jf(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new Jf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=Km(this.outputs[0])}this.inboundNodes=[],new Xm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Qf(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Vm(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new by({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new Xf("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new Xf("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new Xf("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new Xf("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},s=!1){let i,o={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new Jf("Legacy serialization format not supported yet.");i=e}else r.D5U.hu(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),i=e.layers,delete e.layers,o=e;const a=new t(o);if(!(a instanceof gy))throw new Yf(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const t of i){const e=lb(t,void 0,s);s&&e.setFastWeightInitDuringBuild(!0),a.add(e)}return a}set stopTraining(t){if(null==this.model)throw new Jf("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new Jf("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}gy.className="Sequential",r.m7h.ax(gy);class xy extends r.m7h.iV{getConfig(){return{}}}class wy extends xy{apply(t,e=1){return function(t,e=1){if(1!==e)throw new Yf(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return r.pyx(t)}(t,e)}}wy.className="elu",r.m7h.ax(wy);class vy extends xy{apply(t){return r.U8D(t)}}vy.className="selu",r.m7h.ax(vy);class ky extends xy{apply(t){return r.UYe(t)}}ky.className="relu",r.m7h.ax(ky);class $y extends xy{apply(t){return(0,r.lub)((()=>r.LTh(6,r.UYe(t))))}}$y.className="relu6",r.m7h.ax($y);class Ny extends xy{apply(t){return t}}Ny.className="linear",r.m7h.ax(Ny);class Cy extends xy{apply(t){return r.XD2(t)}}Cy.className="sigmoid",r.m7h.ax(Cy);class Ey extends xy{apply(t){return function(t){return(0,r.lub)((()=>{const e=r.IHx(.5,r.dC7(.2,t));return r.iUl(e,0,1)}))}(t)}}Ey.className="hardSigmoid",r.m7h.ax(Ey);class Sy extends xy{apply(t){return r.Wvh(t)}}Sy.className="softplus",r.m7h.ax(Sy);class Ay extends xy{apply(t){return function(t){return(0,r.lub)((()=>r.hiC(t,r.WnP(t).add(1))))}(t)}}Ay.className="softsign",r.m7h.ax(Ay);class Ry extends xy{apply(t){return r.AEp(t)}}Ry.className="tanh",r.m7h.ax(Ry);class Ty extends xy{apply(t,e=-1){return r.XAC(t,e)}}Ty.className="softmax",r.m7h.ax(Ty);class Oy extends xy{apply(t,e=-1){return r.CmS(t,e)}}Oy.className="logSoftmax",r.m7h.ax(Oy);class Iy extends xy{apply(t,e=1){return(0,r.lub)((()=>r.XD2(t.mul(e)).mul(t)))}}function Fy(t){return t.getClassName()}function _y(t,e={}){return up(t,r.m7h.U3.getMap().classNameMap,e,"activation")}function My(t){if(null==t){const t={className:"linear",config:{}};return _y(t)}if("string"==typeof t){const e={};return e.className=t,e.config={},_y(e)}return t instanceof xy?t:_y(t)}function Dy(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}Iy.className="swish",r.m7h.ax(Iy);class Ly extends r.m7h.iV{}class Py extends Ly{constructor(t){super(),Dy(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return(0,r.lub)((()=>{let e=(0,r.lls)([1]);return this.hasL1&&(e=(0,r.IHx)(e,(0,r.Smz)(r.dC7(this.l1,(0,r.WnP)(t))))),this.hasL2&&(e=(0,r.IHx)(e,(0,r.Smz)(r.dC7(this.l2,im(t))))),e.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Py.className="L1L2",r.m7h.ax(Py);const Vy={l1l2:"L1L2"};function zy(t){return op(t)}function By(t,e={}){return up(t,r.m7h.U3.getMap().classNameMap,e,"regularizer")}function Wy(t){if(null==t)return null;if("string"==typeof t){return By({className:t in Vy?Vy[t]:t,config:{}})}return t instanceof Ly?t:By(t)}class Uy extends Ym{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=Pm(t);let n=(0,r.UYe)(t);return null!=this.maxValue&&(n=(0,r.iUl)(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Uy.className="ReLU",r.m7h.ax(Uy);class Gy extends Ym{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Pm(t);return(0,r.hi7)(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Gy.className="LeakyReLU",r.m7h.ax(Gy);class jy extends Ym{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Om(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Wy(t.alphaRegularizer),this.alphaConstraint=Ep(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new Jf(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Vm(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new jm({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=Pm(t),(0,r.AL3)(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Tm(this.alphaInitializer),alphaRegularizer:zy(this.alphaRegularizer),alphaConstraint:Np(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}jy.className="PReLU",r.m7h.ax(jy);class Hy extends Ym{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new Yf(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Pm(t);return(0,r.pyx)(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Hy.className="ELU",r.m7h.ax(Hy);class qy extends Ym{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=Pm(t);return n.mul(Xp(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}qy.className="ThresholdedReLU",r.m7h.ax(qy);class Xy extends Ym{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Ty).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=Pm(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Jy(t,e,n){if("number"==typeof t)return Qf(t,e);if(t.length!==e)throw new Jf(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let r=0;r<e;++r){const s=t[r];if(!Wp(s))throw new Jf(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${s}`)}return t}function Yy(t,e,n,r,s=1){if(null==t)return t;let i;return i="same"===n?t:t-(e+(e-1)*(s-1))+1,Math.floor((i+r-1)/r)}function Ky(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+Hp([n-e,0]);else{if("same"!==r)throw new Jf(`Unsupport padding mode: ${r}.`);t*=e}return t}function Qy(t,e){return(0,r.lub)((()=>(Fp(e),"channelsFirst"===e?r.p4s(t,[0,2,3,1]):t)))}function Zy(t,e){return(0,r.lub)((()=>(Fp(e),"channelsFirst"===e?r.p4s(t,[0,2,3,4,1]):t)))}function tg(t,e,n,s=1,i="valid",o,a=1){return(0,r.lub)((()=>{if(null==o&&(o="channelsLast"),Fp(o),3!==t.shape.length)throw new Jf(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new Jf(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Jf(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===o&&(t=r.p4s(t,[0,2,1])),"causal"===i)throw new Yf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let u=r.PAt(t,e,s,"same"===i?"same":"valid","NWC",a);return null!=n&&(u=am(u,n)),u}))}function eg(t,e,n,s=[1,1],i="valid",o,a,u=null){return(0,r.lub)((()=>{if(null==o&&(o="channelsLast"),Fp(o),3!==t.rank&&4!==t.rank)throw new Jf(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new Jf(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let c=Qy(t,o);if("causal"===i)throw new Yf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=r.imm.Te({x:c,filter:e,strides:s,pad:"same"===i?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:u}),"channelsFirst"===o&&(c=r.p4s(c,[0,3,1,2])),c}))}function ng(t,e,n,s=[1,1,1],i="valid",o,a){return(0,r.lub)((()=>{if(null==o&&(o="channelsLast"),Fp(o),4!==t.rank&&5!==t.rank)throw new Jf(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new Jf(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let u=Zy(t,o);if("causal"===i)throw new Yf("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return u=r.pdZ(u,e,s,"same"===i?"same":"valid","NDHWC",a),null!=n&&(u=am(u,n)),"channelsFirst"===o&&(u=r.p4s(u,[0,4,1,2,3])),u}))}Xy.className="Softmax",r.m7h.ax(Xy);class rg extends Ym{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",rg.verifyArgs(e),this.rank=t,pp(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Yf(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Jy(e.kernelSize,t,"kernelSize"),this.strides=Jy(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,_p(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Fp(this.dataFormat),this.activation=My(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Om(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ep(e.biasConstraint),this.biasRegularizer=Wy(e.biasRegularizer),this.activityRegularizer=Wy(e.activityRegularizer),this.dilationRate=Jy(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Jf(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Jf(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Jf(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(Zf("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!fp(t.kernelSize,"number",1,3))throw new Jf(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Fy(this.activation),useBias:this.useBias,biasInitializer:Tm(this.biasInitializer),biasRegularizer:zy(this.biasRegularizer),activityRegularizer:zy(this.activityRegularizer),biasConstraint:Np(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class sg extends rg{constructor(t,e){super(t,e),this.kernel=null,sg.verifyArgs(e),this.filters=e.filters,pp(this.filters,"filters"),this.kernelInitializer=Om(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ep(e.kernelConstraint),this.kernelRegularizer=Wy(e.kernelRegularizer)}build(t){t=Vm(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Jf(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return(0,r.lub)((()=>{let e;t=Pm(t);const n=null==this.bias?null:this.bias.read(),r=bp(this.activation.getClassName());if(null!=r&&2===this.rank)e=eg(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=tg(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=eg(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Yf("convolutions greater than 3D are not implemented yet.");e=ng(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=Vm(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const r=Yy(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(r)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Tm(this.kernelInitializer),kernelRegularizer:zy(this.kernelRegularizer),kernelConstraint:Np(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new Jf(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class ig extends sg{constructor(t){super(2,t),ig.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!fp(t.kernelSize,"number",1,2))throw new Jf(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}ig.className="Conv2D",r.m7h.ax(ig);class og extends sg{constructor(t){super(3,t),og.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new Jf(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}og.className="Conv3D",r.m7h.ax(og);class ag extends ig{constructor(t){if(super(t),this.inputSpec=[new jm({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Jf(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=Vm(t)).length)throw new Jf("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Jf("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new jm({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return r.lub((()=>{let e=Pm(t);if(4!==e.shape.length)throw new Jf(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,s=n[0];let i,o;"channelsFirst"===this.dataFormat?(i=2,o=3):(i=1,o=2);const a=n[i],u=n[o],c=this.kernelSize[0],l=this.kernelSize[1],h=this.strides[0],d=this.strides[1],f=[s,Ky(a,h,c,this.padding),Ky(u,d,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=r.p4s(e,[0,2,3,1]));let p=r.bc(e,this.kernel.read(),f,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=r.p4s(p,[0,3,1,2])),null!=this.bias&&(p=am(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(t){const e=(t=Vm(t)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const i=this.kernelSize[0],o=this.kernelSize[1],a=this.strides[0],u=this.strides[1];return e[n]=this.filters,e[r]=Ky(e[r],a,i,this.padding),e[s]=Ky(e[s],u,o,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}ag.className="Conv2DTranspose",r.m7h.ax(ag);class ug extends sg{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new Jf("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new Jf("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new Jf(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Om(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Wy(e.depthwiseRegularizer),this.depthwiseConstraint=Ep(e.depthwiseConstraint),this.pointwiseInitializer=Om(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Wy(e.pointwiseRegularizer),this.pointwiseConstraint=Ep(e.pointwiseConstraint)}build(t){if((t=Vm(t)).length<this.rank+2)throw new Jf(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new Jf(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let t=0;t<this.rank;++t)s.push(1);s.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new jm({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return(0,r.lub)((()=>{let e;if(t=Pm(t),1===this.rank)throw new Yf("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=r.p4s(t,[0,2,3,1])),e=r.U_I(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=am(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=r.p4s(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Tm(this.depthwiseInitializer),t.pointwiseInitializer=Tm(this.pointwiseInitializer),t.depthwiseRegularizer=zy(this.depthwiseRegularizer),t.pointwiseRegularizer=zy(this.pointwiseRegularizer),t.depthwiseConstraint=Np(this.depthwiseConstraint),t.pointwiseConstraint=Np(this.pointwiseConstraint),t}}ug.className="SeparableConv";class cg extends ug{constructor(t){super(2,t)}}cg.className="SeparableConv2D",r.m7h.ax(cg);class lg extends sg{constructor(t){super(1,t),lg.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!fp(t.kernelSize,"number",1,1))throw new Jf(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}lg.className="Conv1D",r.m7h.ax(lg);class hg extends Ym{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return(0,r.lub)((()=>{if(t=Pm(t),"channelsLast"===this.dataFormat){const e=Qp(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Qp(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=Qp(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Qp(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}hg.className="Cropping2D",r.m7h.ax(hg);class dg extends Ym{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Fp(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,dp(Ap,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return r.lub((()=>{let e=Pm(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=r.p4s(e,[0,2,3,1]);const t=this.size[0]*n[2],s=this.size[1]*n[3],i="nearest"===this.interpolation?e.resizeNearestNeighbor([t,s]):e.resizeBilinear([t,s]);return r.p4s(i,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?e.resizeNearestNeighbor([t,r]):e.resizeBilinear([t,r])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}dg.className="UpSampling2D",r.m7h.ax(dg);class fg extends rg{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Om(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ep(t.depthwiseConstraint),this.depthwiseRegularizer=Wy(t.depthwiseRegularizer)}build(t){if((t=Vm(t)).length<4)throw new Jf(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new Jf(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return(0,r.lub)((()=>{let e=function(t,e,n=[1,1],s="valid",i,o){return(0,r.lub)((()=>{null==i&&(i="channelsLast"),Fp(i);let a=Qy(t,i);if(4!==t.rank)throw new Jf(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new Jf(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=r.B10(a,e,n,"same"===s?"same":"valid","NHWC",o),"channelsFirst"===i&&(a=r.p4s(a,[0,3,1,2])),a}))}(t=Pm(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=am(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=Vm(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=Yy(e,this.kernelSize[0],this.padding,this.strides[0]),i=Yy(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,s,i]:[t[0],s,i,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Tm(this.depthwiseInitializer),t.depthwiseRegularizer=zy(this.depthwiseRegularizer),t.depthwiseConstraint=Np(this.depthwiseRegularizer),t}}function pg(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new Jf("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function s(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function mg(t,e,n,s=!1,i,o,a=!1,u=!1){return r.lub((()=>{const c=e.shape.length;if(c<3)throw new Jf(`Input should be at least 3D, but is ${c}D.`);const l=[1,0].concat(qp(2,c));if(e=r.p4s(e,l),null!=o)throw new Yf("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=i&&((i=i.asType("bool").asType("float32")).rank===c-1&&(i=r.dt4(i,-1)),i=r.p4s(i,l)),s&&(e=r.GYS(e,0),null!=i&&(i=r.GYS(i,0)));const h=[];let d,f=n;const p=e.shape[0],m=r.HHK(e);let b,y;null!=i&&(b=r.HHK(i));for(let e=0;e<p;++e){const n=m[e],s=r.lub((()=>t(n,f)));if(null==i)d=s[0],f=s[1];else{const t=r.lub((()=>{const t=b[e],n=r.JpU(t).sub(t);return{output:s[0].mul(t).add(f[0].mul(n)),newStates:f.map(((e,r)=>s[1][r].mul(t).add(e.mul(n))))}}));d=t.output,f=t.newStates}u&&h.push(d)}if(u){const t=1;y=r.knu(h,t)}return[d,y,f]}))}fg.className="DepthwiseConv2D",r.m7h.ax(fg);class bg extends Ym{constructor(t){let e;if(super(t),null==t.cell)throw new Jf("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new Ng({cells:t.cell}):t.cell,null==e.stateSize)throw new Jf("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new jm({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return qp(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null))}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Dm(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return r.lub((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new Yf("Constants support is not implemented in RNN yet.");Dm(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new jm({shape:[e,null,...n]});const s=[t[0]].concat(t.slice(2));let i;if(this.cell.build(s),i=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!r.D5U.cO(this.stateSpec.map((t=>t.shape[t.shape.length-1])),i))throw new Jf(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map((t=>new jm({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){(0,r.lub)((()=>{if(!this.stateful)throw new qf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Jf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>r.lls([n,t]))):this.states_=[r.lls([n,this.cell.stateSize])];else if(null==t)r.B90(this.states_),null!=this.keptStates&&(r.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>r.lls([n,t]))):this.states_[0]=r.lls([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Jf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):r.B90(this.states_);for(let e=0;e<this.states_.length;++e){const s=t[e],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,o=[n,i];if(!r.D5U.cO(s.shape,o))throw new Jf(`State ${e} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${s.shape}`);this.states_[e]=s}}this.states_=this.states_.map((t=>r.CnY(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=pg(t,n,r,this.numConstants);t=s.inputs,n=s.initialState,r=s.constants;let i=[],o=[];if(null!=n){e.initialState=n,i=i.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new jm({shape:t.shape}));o=o.concat(this.stateSpec)}null!=r&&(e.constants=r,i=i.concat(r),this.numConstants=r.length);if(i[0]instanceof Hm){const n=[t].concat(i),r=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=r;const a=super.apply(n,e);return this.inputSpec=s,a}return super.apply(t,e)}call(t,e){return(0,r.lub)((()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let s=null==e?null:e.initialState;t=Pm(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new Jf(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:r},a=mg(((t,e)=>{const n=this.cell.call([t].concat(e),o);return[n[0],n.slice(1)]}),t,s,this.goBackwards,n,null,this.unroll,this.returnSequences),u=a[0],c=a[1],l=a[2];this.stateful&&this.resetStates(l,r);const h=this.returnSequences?c:u;return this.returnState?[h].concat(l):h}))}getInitialState(t){return(0,r.lub)((()=>{let e=r.lls(t.shape);return e=r.Smz(e,[1,2]),e=Jp(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?em(e,[1,t]):e)):this.cell.stateSize>1?[em(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===bg.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const r=lb(e.cell,n);return new t(Object.assign(e,{cell:r}))}}bg.className="RNN",r.m7h.ax(bg);class yg extends Ym{}class gg extends yg{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,pp(this.units,"units"),this.activation=My(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Om(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Om(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Om(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Wy(t.kernelRegularizer),this.recurrentRegularizer=Wy(t.recurrentRegularizer),this.biasRegularizer=Wy(t.biasRegularizer),this.kernelConstraint=Ep(t.kernelConstraint),this.recurrentConstraint=Ep(t.recurrentConstraint),this.biasConstraint=Ep(t.biasConstraint),this.dropout=jp([1,Hp([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=jp([1,Hp([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Vm(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return(0,r.lub)((()=>{if(2!==(t=t).length)throw new Jf(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const s=null!=e.training&&e.training;let i;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Cg({ones:()=>r.JpU(t),rate:this.dropout,training:s})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Cg({ones:()=>r.JpU(n),rate:this.recurrentDropout,training:s}));const o=this.dropoutMask,a=this.recurrentDropoutMask;i=rm(null!=o?r.dC7(t,o):t,this.kernel.read()),null!=this.bias&&(i=am(i,this.bias.read())),null!=a&&(n=r.dC7(n,a));let u=r.IHx(i,rm(n,this.recurrentKernel.read()));return null!=this.activation&&(u=this.activation.apply(u)),[u,u]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Fy(this.activation),useBias:this.useBias,kernelInitializer:Tm(this.kernelInitializer),recurrentInitializer:Tm(this.recurrentInitializer),biasInitializer:Tm(this.biasInitializer),kernelRegularizer:zy(this.kernelRegularizer),recurrentRegularizer:zy(this.recurrentRegularizer),biasRegularizer:zy(this.biasRegularizer),activityRegularizer:zy(this.activityRegularizer),kernelConstraint:Np(this.kernelConstraint),recurrentConstraint:Np(this.recurrentConstraint),biasConstraint:Np(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}gg.className="SimpleRNNCell",r.m7h.ax(gg);class xg extends bg{constructor(t){t.cell=new gg(t),super(t)}call(t,e){return(0,r.lub)((()=>{null!=this.cell.dropoutMask&&(r.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,i=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:i})}))}static fromConfig(t,e){return new t(e)}}xg.className="SimpleRNN",r.m7h.ax(xg);class wg extends yg{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new Jf("GRUCell does not support reset_after parameter set to true.");this.units=t.units,pp(this.units,"units"),this.activation=My(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=My(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Om(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Om(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Om(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Wy(t.kernelRegularizer),this.recurrentRegularizer=Wy(t.recurrentRegularizer),this.biasRegularizer=Wy(t.biasRegularizer),this.kernelConstraint=Ep(t.kernelConstraint),this.recurrentConstraint=Ep(t.recurrentConstraint),this.biasConstraint=Ep(t.biasConstraint),this.dropout=jp([1,Hp([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=jp([1,Hp([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Vm(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return(0,r.lub)((()=>{if(2!==(t=t).length)throw new Jf(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let s=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Cg({ones:()=>r.JpU(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Cg({ones:()=>r.JpU(s),rate:this.recurrentDropout,training:n,count:3}));const i=this.dropoutMask,o=this.recurrentDropoutMask;let a,u,c;0<this.dropout&&this.dropout<1&&(t=r.dC7(t,i[0]));let l=rm(t,this.kernel.read());this.useBias&&(l=am(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=r.dC7(s,o[0]));const h=this.recurrentKernel.read(),[d,f]=r.Vl2(h,[2*this.units,this.units],h.rank-1),p=rm(s,d),[m,b,y]=r.Vl2(l,3,l.rank-1),[g,x]=r.Vl2(p,2,p.rank-1);a=this.recurrentActivation.apply(r.IHx(m,g)),u=this.recurrentActivation.apply(r.IHx(b,x));const w=rm(r.dC7(u,s),f);c=this.activation.apply(r.IHx(y,w));const v=r.IHx(r.dC7(a,s),r.dC7(r.IHx(1,r.W76(a)),c));return[v,v]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Fy(this.activation),recurrentActivation:Fy(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Tm(this.kernelInitializer),recurrentInitializer:Tm(this.recurrentInitializer),biasInitializer:Tm(this.biasInitializer),kernelRegularizer:zy(this.kernelRegularizer),recurrentRegularizer:zy(this.recurrentRegularizer),biasRegularizer:zy(this.biasRegularizer),activityRegularizer:zy(this.activityRegularizer),kernelConstraint:Np(this.kernelConstraint),recurrentConstraint:Np(this.recurrentConstraint),biasConstraint:Np(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}wg.className="GRUCell",r.m7h.ax(wg);class vg extends bg{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new wg(t),super(t)}call(t,e){return(0,r.lub)((()=>{null!=this.cell.dropoutMask&&(r.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,i=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:i})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}vg.className="GRU",r.m7h.ax(vg);class kg extends yg{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,pp(this.units,"units"),this.activation=My(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=My(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Om(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Om(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Om(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Wy(t.kernelRegularizer),this.recurrentRegularizer=Wy(t.recurrentRegularizer),this.biasRegularizer=Wy(t.biasRegularizer),this.kernelConstraint=Ep(t.kernelConstraint),this.recurrentConstraint=Ep(t.recurrentConstraint),this.biasConstraint=Ep(t.biasConstraint),this.dropout=jp([1,Hp([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=jp([1,Hp([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Vm(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends dm{apply(e,r){const s=t.apply([n]),i=(new pm).apply([n]),o=t.apply([2*n]);return tm(tm(s,i),o)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return(0,r.lub)((()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new Jf(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let s=t[1];const i=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Cg({ones:()=>r.JpU(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Cg({ones:()=>r.JpU(s),rate:this.recurrentDropout,training:n,count:4}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let u,c,l,h;0<this.dropout&&this.dropout<1&&(t=r.dC7(t,o[0]));let d=rm(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=r.dC7(s,a[0])),d=r.IHx(d,rm(s,this.recurrentKernel.read())),this.useBias&&(d=am(d,this.bias.read()));const[f,p,m,b]=r.Vl2(d,4,d.rank-1);u=this.recurrentActivation.apply(f),c=this.recurrentActivation.apply(p),l=r.IHx(r.dC7(c,i),r.dC7(u,this.activation.apply(m))),h=this.recurrentActivation.apply(b);const y=r.dC7(h,this.activation.apply(l));return[y,y,l]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Fy(this.activation),recurrentActivation:Fy(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Tm(this.kernelInitializer),recurrentInitializer:Tm(this.recurrentInitializer),biasInitializer:Tm(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:zy(this.kernelRegularizer),recurrentRegularizer:zy(this.recurrentRegularizer),biasRegularizer:zy(this.biasRegularizer),activityRegularizer:zy(this.activityRegularizer),kernelConstraint:Np(this.kernelConstraint),recurrentConstraint:Np(this.recurrentConstraint),biasConstraint:Np(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}kg.className="LSTMCell",r.m7h.ax(kg);class $g extends bg{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new kg(t),super(t)}call(t,e){return(0,r.lub)((()=>{null!=this.cell.dropoutMask&&(r.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,i=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:i})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}$g.className="LSTM",r.m7h.ax($g);class Ng extends yg{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return(0,r.lub)((()=>{let n=(t=t).slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let i;for(let o=0;o<this.cells.length;++o){const a=this.cells[o];n=r[o],i=0===o?[t[0]].concat(n):[i[0]].concat(n),i=a.call(i,e),s.push(i.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[i[0]].concat(n)}))}build(t){let e;Dm(t)&&(t=t[0]),t=t,this.cells.forEach(((n,r)=>{Lp(`RNNCell_${r}`,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const r=[];for(const t of e.cells)r.push(lb(t,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Um(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,s=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}Gm(e)}}function Cg(t){const{ones:e,rate:n,training:s=!1,count:i=1}=t,o=()=>um(e(),n),a=()=>cm(o,e,s);if(!i||i<=1)return r.CnY(a().clone());return Array(i).fill(void 0).map(a).map((t=>r.CnY(t.clone())))}Ng.className="StackedRNNCells",r.m7h.ax(Ng);var Eg=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]])}return n};class Sg extends bg{constructor(t){if(t.unroll)throw new Yf("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Yf("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new jm({ndim:5})]}call(t,e){return r.lub((()=>{if(null!=this.cell.dropoutMask&&(r.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new Jf("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,s=null==e?null:e.training,i=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:i})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return r.lub((()=>{const{stateSize:e}=this.cell,n=t.shape,s=this.computeSingleOutputShape(n),i=[s[0],...s.slice(2)],o=r.lls(i);return Array.isArray(e)?Array(e.length).fill(o):[o]}))}resetStates(t,e=!1){r.lub((()=>{if(!this.stateful)throw new qf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),i=[s[0],...s.slice(2)];if(null==n[0])throw new Jf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>r.lls(i))):this.states_=[r.lls(i)];else if(null==t)r.B90(this.states_),null!=this.keptStates&&(r.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>r.lls(i))):this.states_[0]=r.lls(i);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Jf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):r.B90(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],s=i;if(!r.D5U.cO(n.shape,s))throw new Jf(`State ${e} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>r.CnY(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:s,strides:i,dilationRate:o}=this.cell,a="channelsFirst"===e,u=t[a?3:2],c=t[a?4:3],l=Yy(u,r[0],s,i[0],o[0]),h=Yy(c,r[1],s,i[1],o[1]);return[...t.slice(0,2),...a?[n,l,h]:[l,h,n]]}}Sg.className="ConvRNN2D";class Ag extends kg{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:s,dataFormat:i,dilationRate:o}=t;super(Object.assign({},t,{units:e})),this.filters=e,pp(this.filters,"filters"),this.kernelSize=Jy(n,2,"kernelSize"),this.kernelSize.forEach((t=>pp(t,"kernelSize"))),this.strides=Jy(r||1,2,"strides"),this.strides.forEach((t=>pp(t,"strides"))),this.padding=s||"valid",_p(this.padding),this.dataFormat=i||"channelsLast",Fp(this.dataFormat),this.dilationRate=Jy(o||1,2,"dilationRate"),this.dilationRate.forEach((t=>pp(t,"dilationRate")))}build(t){var e;t=Vm(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new Jf(`The channel dimension of the input should be defined. Found ${t[n]}`);const s=t[n],i=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;t=new((e=class extends dm{apply(t,e){return Zp([n.apply([s]),r.iUs([s]),n.apply([2*s])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return r.lub((()=>{if(3!==t.length)throw new Jf(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,s=t[0],i=t[1],o=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Cg({ones:()=>r.JpU(s),rate:this.dropout,training:n,count:4}));const a=this.dropoutMask,u=(t,e,n)=>e&&e[n]?r.dC7(e[n],t):t;let c=u(s,a,0),l=u(s,a,1),h=u(s,a,2),d=u(s,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Cg({ones:()=>r.JpU(i),rate:this.recurrentDropout,training:n,count:4}));const f=this.recurrentDropoutMask;let p=u(i,f,0),m=u(i,f,1),b=u(i,f,2),y=u(i,f,3);const[g,x,w,v]=r.Vl2(this.kernel.read(),4,3),[k,$,N,C]=this.useBias?r.Vl2(this.bias.read(),4):[null,null,null,null];c=this.inputConv(c,g,k,this.padding),l=this.inputConv(l,x,$,this.padding),h=this.inputConv(h,w,N,this.padding),d=this.inputConv(d,v,C,this.padding);const[E,S,A,R]=r.Vl2(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,E),m=this.recurrentConv(m,S),b=this.recurrentConv(b,A),y=this.recurrentConv(y,R);const T=this.recurrentActivation.apply(r.IHx(c,p)),O=this.recurrentActivation.apply(r.IHx(l,m)),I=r.IHx(r.dC7(O,o),r.dC7(T,this.activation.apply(r.IHx(h,b)))),F=r.dC7(this.recurrentActivation.apply(r.IHx(d,y)),this.activation.apply(I));return[F,F,I]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=Eg(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,s){const i=r.Tek(t,e,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?am(i,n,this.dataFormat):i}recurrentConv(t,e){return r.Tek(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Ag.className="ConvLSTM2DCell",r.m7h.ax(Ag);class Rg extends Sg{constructor(t){const e=new Ag(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Rg.className="ConvLSTM2D",r.m7h.ax(Rg);class Tg extends Ym{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return(0,r.lub)((()=>{this.invokeCallHook(t,e);const n=Pm(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return cm((()=>um(n,this.rate,r,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Tg.className="Dropout",r.m7h.ax(Tg);class Og extends Tg{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Og.className="SpatialDropout1D",r.m7h.ax(Og);class Ig extends Ym{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,pp(this.units,"units"),this.activation=My(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Om(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Om(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ep(t.kernelConstraint),this.biasConstraint=Ep(t.biasConstraint),this.kernelRegularizer=Wy(t.kernelRegularizer),this.biasRegularizer=Wy(t.biasRegularizer),this.activityRegularizer=Wy(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Vm(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Vm(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return(0,r.lub)((()=>{this.invokeCallHook(t,e);const n=Pm(t),r=bp(this.activation.getClassName());let s;return null!=r?s=rm(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=rm(n,this.kernel.read()),null!=this.bias&&(s=am(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const t={units:this.units,activation:Fy(this.activation),useBias:this.useBias,kernelInitializer:Tm(this.kernelInitializer),biasInitializer:Tm(this.biasInitializer),kernelRegularizer:zy(this.kernelRegularizer),biasRegularizer:zy(this.biasRegularizer),activityRegularizer:zy(this.activityRegularizer),kernelConstraint:Np(this.kernelConstraint),biasConstraint:Np(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Ig.className="Dense",r.m7h.ax(Ig);class Fg extends Ym{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Vm(t);for(const e of t.slice(1))if(null==e)throw new Jf(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Up(t,1)]}call(t,e){return(0,r.lub)((()=>{this.invokeCallHook(t,e);let n=Pm(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new Jf(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],Up(t.shape,1)];return t.reshape(e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Fg.className="Flatten",r.m7h.ax(Fg);class _g extends Ym{constructor(t){super(t),this.supportsMasking=!0,this.activation=My(t.activation)}call(t,e){return(0,r.lub)((()=>{this.invokeCallHook(t,e);const n=Pm(t);return this.activation.apply(n)}))}getConfig(){const t={activation:Fy(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}_g.className="Activation",r.m7h.ax(_g);class Mg extends Ym{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return(0,r.lub)((()=>function(t,e){return(0,r.lub)((()=>{if(2!==t.shape.length)throw new Jf(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return em(Jp(t,1),[1,e,1])}))}(t=Pm(t),this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Mg.className="RepeatVector",r.m7h.ax(Mg);class Dg extends Ym{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let s=1,i=null;for(let t=0;t<r.length;++t){const e=r[t];if(this.isUnknown(e)){if(null!==i)throw new Jf("Can only specifiy one unknown dimension.");i=t}else s*=e}const o=Up(t);if(null!==i){if(0===s||o%s!=0)throw new Jf(n);r[i]=o/s}else if(o!==s)throw new Jf(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return(0,r.lub)((()=>{this.invokeCallHook(t,e);const n=Pm(t),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Dg.className="Reshape",r.m7h.ax(Dg);class Lg extends Ym{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=qp(1,t.dims.length+1);if(!r.D5U.cO(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new jm({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Vm(t)).slice();return this.dims.forEach(((n,r)=>{e[r+1]=t[n]})),e}call(t,e){return(0,r.p4s)(Pm(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Lg.className="Permute",r.m7h.ax(Lg);class Pg extends Ym{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=Pm(t);return(0,r.YjB)((0,r.Quu)(n,this.maskValue),-1)}call(t,e){return(0,r.lub)((()=>{this.invokeCallHook(t,e);const n=Pm(t),s=(0,r.YjB)((0,r.Quu)(n,this.maskValue),-1,!0);return n.mul(s.asType(n.dtype))}))}}Pg.className="Masking",r.m7h.ax(Pg);class Vg extends Ym{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(np(t.inputLength))}this.inputDim=t.inputDim,pp(this.inputDim,"inputDim"),this.outputDim=t.outputDim,pp(this.outputDim,"outputDim"),this.embeddingsInitializer=Om(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Wy(t.embeddingsRegularizer),this.activityRegularizer=Wy(t.activityRegularizer),this.embeddingsConstraint=Ep(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return(0,r.lub)((()=>this.maskZero?(t=Pm(t),(0,r.Quu)(t,(0,r.P84)(t))):null))}computeOutputShape(t){if(t=Vm(t),null==this.inputLength)return[...t,this.outputDim];const e=np(this.inputLength);if(e.length!==t.length-1)throw new Jf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let r=0;r<e.length;++r){const s=e[r],i=t[r+1];if(null!=s&&null!=i&&s!==i)throw new Jf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==s&&(e[n]=i),n++}}return[t[0],...e,this.outputDim]}call(t,e){return(0,r.lub)((()=>{this.invokeCallHook(t,e);let n=Pm(t);"int32"!==n.dtype&&(n=Xp(n,"int32"));return sm(this.embeddings.read(),n.as1D()).reshape(Vm(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Tm(this.embeddingsInitializer),embeddingsRegularizer:zy(this.embeddingsRegularizer),activityRegularizer:zy(this.activityRegularizer),embeddingsConstraint:Np(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}Vg.className="Embedding",r.m7h.ax(Vg);class zg extends Ym{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Yf}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const s=t[t.length-e.length+r],i=e[r];if(null==s||null==i||s<0||i<0)n.push(null);else if(1===s)n.push(i);else if(1===i)n.push(s);else{if(s!==i)throw new Jf("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Vm(t)]),(t=t).length<2)throw new Jf(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=lp(e),e.length>1)throw new Jf(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const r=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=t.map((t=>t.length));-1===t.indexOf(null)&&1===lp(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return(0,r.lub)((()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const r=Hp(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=Jp(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const s of t){const t=s.rank;if(null==t){const t=s.shape,i=t[0],o=t.slice(1).concat([i]);let a=s.reshape([i].concat(Up(t.slice(1))));a=r.p4s(a,[1,0]),a=a.reshape(o),e.push(a),n=!0}else if(t>1){const i=qp(1,t).concat([0]);e.push(r.p4s(s,i)),n=!0}else e.push(s)}let s=this.mergeFunction(e);const i=s.rank;if(n)if(null==i){const t=s.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));s=r.p4s(s.reshape([-1,e]),[1,0]).reshape(n)}else if(i>1){const t=[i-1].concat(qp(0,i-1));s=r.p4s(s,t)}return s}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const r=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=lp(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return r.lub((()=>{if(null==e)return null;if(!Array.isArray(e))throw new Jf("`mask` should be an Array");if(!Array.isArray(t))throw new Jf("`inputs` should be an Array");if(e.length!==t.length)throw new Jf(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:r.dt4(t,0))))[0];for(let t=1;t<e.length-1;++t)n=r.HvI(n,e[t]);return n}))}}class Bg extends zg{constructor(t){super(t)}mergeFunction(t){return(0,r.lub)((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=r.IHx(e,t[n]);return e}))}}Bg.className="Add",r.m7h.ax(Bg);class Wg extends zg{constructor(t){super(t)}mergeFunction(t){return(0,r.lub)((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=r.dC7(e,t[n]);return e}))}}Wg.className="Multiply",r.m7h.ax(Wg);class Ug extends zg{constructor(t){super(t)}mergeFunction(t){return(0,r.lub)((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=r.IHx(e,t[n]);return r.dC7(1/t.length,e)}))}}Ug.className="Average",r.m7h.ax(Ug);class Gg extends zg{constructor(t){super(t)}mergeFunction(t){return(0,r.lub)((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=r.gWQ(e,t[n]);return e}))}}Gg.className="Maximum",r.m7h.ax(Gg);class jg extends zg{constructor(t){super(t)}mergeFunction(t){return(0,r.lub)((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=r.LTh(e,t[n]);return e}))}}jg.className="Minimum",r.m7h.ax(jg);class Hg extends zg{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new Jf("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const s=t[e].slice();s.splice(this.axis,1);let i=!1;for(const t of n)if(r.D5U.cO(t,s)){i=!0;break}i||n.push(s)}if(n.length>1)throw new Jf("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return(0,r.lub)((()=>Zp(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new Jf("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[r]||null==t[r]){n[r]=null;break}n[r]+=t[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new Jf("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new Jf("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new Jf(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return r.lub((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const s=[];for(let n=0;n<t.length;++n)null==e[n]?s.push(r.JpU(t[n]).asType("bool")):e[n].rank<t[n].rank?s.push(r.dt4(e[n],-1)):s.push(e[n]);const i=r.zoF(s,this.axis);return r.$6P(i,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function qg(t,e){for(;t<0;)t+=e;return t}Hg.className="Concatenate",r.m7h.ax(Hg);class Xg extends zg{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){r.D5U.hu(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new Yf("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(e,n);if(e[s[0]]!==n[s[1]])throw new Jf(`Dimension incompatibility: ${e[s[0]]} !== ${n[s[1]]}`)}mergeFunction(t){if(2!==t.length)throw new Jf(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],s=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>qg(e,t[n].shape.length))):[qg(this.axes,n.shape.length),qg(this.axes,s.shape.length)],this.normalize&&(n=hb(n,e[0]),s=hb(s,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new Yf("batchDot is not implemented for tensors of 4D or higher rank yet");if(r.D5U.hu(t.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`)),r.D5U.hu(t.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new Yf("batchDot is not implemented for complex64-type Tensors yet.");const s=t.shape.length,i=e.shape.length;null==n&&(n=[s-1,i-2]);const o=n;return r.lub((()=>{let n,r;if(s>i){n=s-i;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(i>s){n=i-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)r=o[0]===o[1]?t.mul(e).sum(o[0]):t.transpose([1,0]).mul(e).sum(o[1]);else{const n=o[0]!==t.shape.length-1,s=o[1]===e.shape.length-1;r=t.matMul(e,n,s)}if(n>0){let t;t=s>i?s+i-3:s-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);r=r.squeeze(e)}return 1===r.shape.length&&(r=r.expandDims(1)),r}))}(n,s,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[qg(this.axes,t.length),qg(this.axes,e.length)],n}computeOutputShape(t){r.D5U.hu(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new Yf("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(e,n);e.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const i=e.concat(n);return 1===i.length&&i.push(1),i}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}Xg.className="Dot",r.m7h.ax(Xg);class Jg extends Ym{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return(0,r.lub)((()=>{this.invokeCallHook(t,e);const n=Pm(t);return cm((()=>nm(n.shape,0,this.stddev).add(n)),(()=>n),e.training||!1)}))}}Jg.className="GaussianNoise",r.m7h.ax(Jg);class Yg extends Ym{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return(0,r.lub)((()=>{this.invokeCallHook(t,e);const n=Pm(t);if(this.rate>0&&this.rate<1){return cm((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(nm(n.shape,1,t))}),(()=>n),e.training||!1)}return n}))}}Yg.className="GaussianDropout",r.m7h.ax(Yg);class Kg extends Ym{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Pm(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return(0,r.lub)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return cm((()=>{const e=Pm(t),s=-1.7580993408473766;let i=(0,r.brS)((0,r.LGj)(n),this.rate);i=Xp(i,"float32");const o=((1-this.rate)*(1+this.rate*s**2))**-.5,a=-o*s*this.rate;return e.mul(i).add(i.add(-1).mul(s)).mul(o).add(a)}),(()=>Pm(t)),e.training||!1)}return t}))}}function Qg(t,e,n,s,i,o=.001){let a;if(2===t.rank)a=r.Dxk(t,e,n,s,i,o);else if(3===t.rank)a=r.JY5(t,e,n,s,i,o);else{if(4!==t.rank)throw new Yf(`batchNormalization is not implemented for array of rank ${t.rank} yet`);a=r.p3b(t,e,n,s,i,o)}return a}function Zg(t,e,n,s,i=.001){return r.D5U.cO(s.slice().sort(),qp(0,t.rank-1))?function(t,e,n,s,i=.001){return(0,r.lub)((()=>{const o=r.Gi7(t,s),a=o.mean,u=o.variance;return[Qg(t,a,u,n,e,i),a,u]}))}(t,e,n,s,i):function(t,e,n,s,i=.001){return(0,r.lub)((()=>{const o=r.Gi7(t,s),a=o.mean,u=o.variance,c=[];for(const e of qp(0,t.rank))-1!==s.indexOf(e)?c.push(1):c.push(t.shape[e]);const l=a.reshape(c),h=u.reshape(c),d=null==e?null:e.reshape(c),f=null==n?null:n.reshape(c);return[Qg(t,l,h,f,d,i),a,u]}))}(t,e,n,s,i)}Kg.className="AlphaDropout",r.m7h.ax(Kg);class tx extends Ym{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Om(t.betaInitializer||"zeros"),this.gammaInitializer=Om(t.gammaInitializer||"ones"),this.movingMeanInitializer=Om(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Om(t.movingVarianceInitializer||"ones"),this.betaConstraint=Ep(t.betaConstraint),this.gammaConstraint=Ep(t.gammaConstraint),this.betaRegularizer=Wy(t.betaRegularizer),this.gammaRegularizer=Wy(t.gammaRegularizer)}build(t){t=Vm(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new Jf(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new jm({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return(0,r.lub)((()=>{const n=null!=e.training&&e.training,s=Pm(t),i=s.shape,o=i.length,a=qp(0,o),u=this.axis>=0?this.axis:this.axis+o;a.splice(u,1);const c=Qf(1,o);c[u]=i[u];const l=a.slice();l.sort();const h=!r.D5U.cO(l,qp(0,o).slice(0,o-1));if(!n)return(()=>{if(h){const t=this.movingMean.read().reshape(c),e=this.movingVariance.read().reshape(c),n=this.center?this.beta.read().reshape(c):null,r=this.scale?this.gamma.read().reshape(c):null;return Qg(s,t,e,n,r,this.epsilon)}return Qg(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[d,f,p]=Zg(s,this.gamma.read(),this.beta.read(),a,this.epsilon),m=(t,e,n)=>{r.lub((()=>{const r=1-n,s=t.read(),i=s.sub(e).mul(r);t.write(s.sub(i))}))};return(()=>{m(this.movingMean,f,this.momentum),m(this.movingVariance,p,this.momentum)})(),d}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Tm(this.betaInitializer),gammaInitializer:Tm(this.gammaInitializer),movingMeanInitializer:Tm(this.movingMeanInitializer),movingVarianceInitializer:Tm(this.movingVarianceInitializer),betaRegularizer:zy(this.betaRegularizer),gammaRegularizer:zy(this.gammaRegularizer),betaConstraint:Np(this.betaConstraint),gammaConstraint:Np(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}tx.className="BatchNormalization",r.m7h.ax(tx);class ex extends Ym{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Om(t.betaInitializer||"zeros"),this.gammaInitializer=Om(t.gammaInitializer||"ones"),this.betaRegularizer=Wy(t.betaRegularizer),this.gammaRegularizer=Wy(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Vm(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error(`Invalid axis: ${t}`);if(this.axis.length!==lp(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(t,e){const n=Pm(t),s=n.shape,i=s.length;return(0,r.lub)((()=>{let{mean:t,variance:e}=(0,r.Gi7)(n,this.axis,!0);const o=Qf(1,i);for(const t of this.axis)o[t]=s[t];const a=t=>null!=t&&t.shape.length!==i&&this.axis!==[i-1]?t.reshape(o):t;let u=a(this.gamma.read()),c=a(this.beta.read());const l=[],h=[];for(let t=0;t<i;++t)-1!==this.axis.indexOf(t)?(l.push(s[t]),h.push(1)):(l.push(1),h.push(s[t]));return t=t.tile(l),e=e.tile(l),u=u.tile(h),c=c.tile(h),Qg(n,t,e,c,u,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Tm(this.betaInitializer),gammaInitializer:Tm(this.gammaInitializer),betaRegularizer:zy(this.betaRegularizer),gammaRegularizer:zy(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}ex.className="LayerNormalization",r.m7h.ax(ex);class nx extends Ym{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new Jf(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new Jf(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new Jf(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new jm({ndim:4})]}computeOutputShape(t){let e,n;return t=Vm(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return(0,r.lub)((()=>function(t,e,n){return(0,r.lub)((()=>{if(4!==t.rank)throw new Jf(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==e&&(e=[[1,1],[1,1]]),2!==e.length||2!==e[0].length||2!==e[1].length)throw new Jf("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new Jf(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return s="channelsFirst"===n?[[0,0],[0,0],e[0],e[1]]:[[0,0],e[0],e[1],[0,0]],r.vku(t,s)}))}(Pm(t),this.padding,this.dataFormat)))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function rx(t,e,n,s,i,o){return(0,r.lub)((()=>{let a;Fp(i),Mp(o),_p(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==i&&(i="channelsLast"),null==o&&(o="max"),t=Qy(t,i);const u="same"===s?"same":"valid";return a="max"===o?r._sB(t,e,n,u):r.wS1(t,e,n,u),"channelsFirst"===i&&(a=r.p4s(a,[0,3,1,2])),a}))}function sx(t,e,n,s,i,o){return(0,r.lub)((()=>{let a;Fp(i),Mp(o),_p(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==i&&(i="channelsLast"),null==o&&(o="max"),t=Zy(t,i);const u="same"===s?"same":"valid";return a="max"===o?r.YQQ(t,e,n,u):r.uR5(t,e,n,u),"channelsFirst"===i&&(a=r.p4s(a,[0,4,1,2,3])),a}))}nx.className="ZeroPadding2D",r.m7h.ax(nx);class ix extends Ym{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new Jf(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(pp(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new Jf(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}pp(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,_p(this.padding),this.inputSpec=[new jm({ndim:3})]}computeOutputShape(t){const e=Yy((t=Vm(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return(0,r.lub)((()=>{this.invokeCallHook(t,e),t=Jp(Pm(t),2);const n=this.poolingFunction(Pm(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return r.L9e(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class ox extends ix{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Fp(s),_p(r),rx(t,e,n,r,s,"max")}}ox.className="MaxPooling1D",r.m7h.ax(ox);class ax extends ix{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Fp(s),_p(r),rx(t,e,n,r,s,"avg")}}ax.className="AveragePooling1D",r.m7h.ax(ax);class ux extends Ym{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new Jf(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];pp(this.poolSize,"poolSize"),pp(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Fp(this.dataFormat),_p(this.padding),this.inputSpec=[new jm({ndim:4})]}computeOutputShape(t){t=Vm(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=Yy(e,this.poolSize[0],this.padding,this.strides[0]),n=Yy(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return(0,r.lub)((()=>(this.invokeCallHook(t,e),this.poolingFunction(Pm(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class cx extends ux{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Fp(s),_p(r),rx(t,e,n,r,s,"max")}}cx.className="MaxPooling2D",r.m7h.ax(cx);class lx extends ux{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Fp(s),_p(r),rx(t,e,n,r,s,"avg")}}lx.className="AveragePooling2D",r.m7h.ax(lx);class hx extends Ym{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new Jf(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];pp(this.poolSize,"poolSize"),pp(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Fp(this.dataFormat),_p(this.padding),this.inputSpec=[new jm({ndim:5})]}computeOutputShape(t){t=Vm(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=Yy(e,this.poolSize[0],this.padding,this.strides[0]),n=Yy(n,this.poolSize[1],this.padding,this.strides[1]),r=Yy(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return(0,r.lub)((()=>(this.invokeCallHook(t,e),this.poolingFunction(Pm(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class dx extends hx{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Fp(s),_p(r),sx(t,e,n,r,s,"max")}}dx.className="MaxPooling3D",r.m7h.ax(dx);class fx extends hx{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Fp(s),_p(r),sx(t,e,n,r,s,"avg")}}fx.className="AveragePooling3D",r.m7h.ax(fx);class px extends Ym{constructor(t){super(t),this.inputSpec=[new jm({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Yf}}class mx extends px{constructor(t){super(t||{})}call(t,e){return(0,r.lub)((()=>{const e=Pm(t);return r.J69(e,1)}))}}mx.className="GlobalAveragePooling1D",r.m7h.ax(mx);class bx extends px{constructor(t){super(t||{})}call(t,e){return(0,r.lub)((()=>{const e=Pm(t);return r.Fp7(e,1)}))}}bx.className="GlobalMaxPooling1D",r.m7h.ax(bx);class yx extends Ym{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Fp(this.dataFormat),this.inputSpec=[new jm({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Yf}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class gx extends yx{call(t,e){return(0,r.lub)((()=>{const e=Pm(t);return"channelsLast"===this.dataFormat?r.J69(e,[1,2]):r.J69(e,[2,3])}))}}gx.className="GlobalAveragePooling2D",r.m7h.ax(gx);class xx extends yx{call(t,e){return(0,r.lub)((()=>{const e=Pm(t);return"channelsLast"===this.dataFormat?r.Fp7(e,[1,2]):r.Fp7(e,[2,3])}))}}xx.className="GlobalMaxPooling2D",r.m7h.ax(xx);class wx extends Ym{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=lb(e.layer,n);delete e.layer;const s={layer:r};return Object.assign(s,e),new t(s)}}class vx extends wx{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=Vm(t)).length<3)throw new Jf(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Vm(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return(0,r.lub)((()=>mg(((t,n)=>[Pm(this.layer.call(t,e)),[]]),t=Pm(t),[],!1,null,null,!1,!0)[1]))}}vx.className="TimeDistributed",r.m7h.ax(vx);class kx extends wx{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=lb(n),e.goBackwards=!0!==e.goBackwards;const r={};var s;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=lb(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,s=this.mergeMode,dp(Op,"BidirectionalMergeMode",s),t.weights)throw new Yf("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),e=s[0]):e=s[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):ep(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=pg(t,n,r,this.numConstants);if(t=s.inputs,n=s.initialState,r=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const i=[],o=[];if(null!=n){const t=n.length;if(t%2>0)throw new Jf("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,i.push(...n);const r=n.map((t=>new jm({shape:t.shape})));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),o.push(...r)}if(null!=r)throw new Yf("Support for constants in Bidirectional layers is not implemented yet.");const a=i[0]instanceof Hm;for(const t of i)if(t instanceof Hm!==a)throw new Jf("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(a){const n=[t].concat(i),r=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=r;const a=super.apply(n,e);return this.inputSpec=s,a}return super.apply(t,e)}call(t,e){return(0,r.lub)((()=>{const n=e.initialState;let s,i,o,a;if(null==n)s=this.forwardLayer.call(t,e),i=this.backwardLayer.call(t,e);else{const r=n.slice(0,n.length/2),o=n.slice(n.length/2);s=this.forwardLayer.call(t,Object.assign(e,{initialState:r})),i=this.backwardLayer.call(t,Object.assign(e,{initialState:o}))}return this.returnState&&(Array.isArray(s)&&(o=s.slice(1).concat(i.slice(1))),s=s[0],i=i[0]),this.returnSequences&&(i=r.GYS(i,1)),"concat"===this.mergeMode?a=Zp([s,i]):"sum"===this.mergeMode?a=r.IHx(s,i):"ave"===this.mergeMode?a=r.dC7(.5,r.IHx(s,i)):"mul"===this.mergeMode?a=r.dC7(s,i):null==this.mergeMode&&(a=[s,i]),this.returnState?null==this.mergeMode?a.concat(o):[a].concat(o):a}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Lp(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),Lp(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=lb(e.layer);if(delete e.layer,null!=e.numConstants)throw new Yf("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}kx.className="Bidirectional",r.m7h.ax(kx);function $x(t,e,n=new Map,r=new Set){if(null==t)return null;if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(Sx(t)){const s=Array.isArray(t)?[]:{};r.add(t);for(const i in t){const o=$x(t[i],e,n,r);s[i]=o}return r.delete(t),s}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,s.value),s.value}function Nx(t,e=Ex){return Cx(t,e)}function Cx(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(Sx(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const i in r){const r=Cx(t.map((t=>t[i])),e,n);s[i]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function Ex(t){return null===t?null:Sx(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function Sx(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof r.esB))}function Ax(t){return function(t,e){return $x(t,e)}(t,Rx)}function Rx(t){return t instanceof r.esB?{value:t.clone(),recurse:!1}:Sx(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}class Tx{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class Ox extends Tx{constructor(){super(Ox.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function Ix(t){return new Dx(t)}function Fx(t,e){return new qx(t,e)}Ox.INITIAL_CAPACITY=32;class _x{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new Ux(this,t)}filter(t){return new Bx(this,t)}map(t){return new Wx(this,t)}mapAsync(t){return new Gx(this,t)}serialMapAsync(t){return new Gx(this,t).serial()}flatmap(t){return new Hx(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new zx(this,t,e)}columnMajorBatch(t,e=!0,n=Ex){return this.rowMajorBatch(t,e).map((t=>Nx(t,n)))}concatenate(t,e){return new qx(new Mx([this,t]),e)}take(t){return t<0||null==t?this:new Vx(this,t)}skip(t){return t<0||null==t?this:new Px(this,t)}prefetch(t){return new Jx(this,t)}shuffle(t,e){return new Yx(this,t,e)}serial(){return new Lx(this)}}class Mx extends _x{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:Ax(t),done:!1}}}class Dx extends _x{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class Lx extends _x{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Px extends _x{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;r.B90(t.value)}return this.upstream.next()}}class Vx extends _x{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class zx extends _x{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class Bx extends _x{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;r.B90(t.value)}}}class Wx extends _x{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=r.piX.Vu(t.value),n=this.transform(t.value),s=r.piX.Vu(n);for(const t of e)r.piX.BC(t,s)||t.dispose();return{value:n,done:!1}}}class Ux extends _x{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class Gx extends _x{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=r.piX.Vu(t.value),n=await this.transform(t.value),s=r.piX.Vu(n);for(const t of e)r.piX.BC(t,s)||t.dispose();return{value:n,done:!1}}}class jx extends _x{constructor(){super(),this.outputQueue=new Ox,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Hx extends jx{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=r.piX.Vu(t.value),n=this.transform(t.value),s=r.piX.Vu(n);this.outputQueue.pushAll(n);for(const t of e)r.piX.BC(t,s)||t.dispose();return!0}}class qx extends _x{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}var Xx;!function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"}(Xx||(Xx={}));class Jx extends _x{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new Tx(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class Yx extends Jx{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=Td.alea(n||r.D5U.zO().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Kx{constructor(){this.size=null}batch(t,e=!0){const n=this;let s;return r.D5U.hu(t>0,(()=>`batchSize needs to be positive, but it is\n      ${t}`)),s=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),Qx((async()=>(await n.iterator()).columnMajorBatch(t,e,Zx)),s)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,Qx((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,Qx((async()=>(await e.iterator()).filter((e=>r.lub((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return Qx((async()=>(await e.iterator()).map((e=>r.lub((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return Qx((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return Qx((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,Qx((async()=>Fx(Ix((async()=>({value:await e.iterator(),done:!1}))).take(t))),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,Qx((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,i=Td.alea(e||r.D5U.zO().toString());return Qx((async()=>{let e=i.int32();return n&&(e+=i.int32()),(await s.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,Qx((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Qx(t,e=null){return new class extends Kx{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function Zx(t){if(null===t)return null;const e=t[0];if(null==(n=e)||null===(s=n)||"object"!=typeof s&&"function"!=typeof s||Array.isArray(n)||"object"==typeof n&&n instanceof r.esB||r.D5U.fU(n)){return{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof r.esB?r.knu(t):r.XeE(t)}(t),recurse:!1}}var n,s;return{value:null,recurse:!0}}Kx.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");r.jTM,s.gJ;var tw,ew;let nw;!function(t){t[t.float32=0]="float32",t[t.int32=1]="int32",t[t.bool=2]="bool",t[t.string=3]="string",t[t.complex64=4]="complex64"}(tw||(tw={})),function(t){t[t.linear=0]="linear",t[t.relu=1]="relu",t[t.relu6=2]="relu6",t[t.prelu=3]="prelu",t[t.leakyrelu=4]="leakyrelu"}(ew||(ew={}));const rw={kernelName:r.usg,backendName:"wasm",setupFunc:function(t){nw=t.wasm.cwrap(r.usg,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i,bias:o,preluActivationWeights:a}=e;if("float32"!==s.dtype||"float32"!==i.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:h}=r,d=n.dataIdMap.get(s.dataId).id,f=n.dataIdMap.get(i.dataId).id;let p=0;if(null!=o){const t=n.dataIdMap.get(o.dataId);if(1!==t.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${t.shape.length}.`);p=t.id}const m=null==a?0:n.dataIdMap.get(a.dataId).id,b=ew[l];if(null==b)throw new Error(`${l} activation not yet supported for FusedConv2D in the wasm backend.`);const y=u?s.shape[2]:s.shape[1],g=c?i.shape[1]:i.shape[2],x=s.shape[0],w=n.makeOutput([x,y,g],s.dtype),v=n.dataIdMap.get(w.dataId).id,k=new Uint8Array(new Int32Array(s.shape).buffer),$=new Uint8Array(new Int32Array(i.shape).buffer);return nw(d,k,s.shape.length,f,$,i.shape.length,u,c,b,p,m,h||0,v),w}};function sw(t){let e;return{kernelName:t,backendName:"wasm",setupFunc:function(n){e=n.wasm.cwrap(t,null,["number","number"])},kernelFunc:function(t){const{backend:n,inputs:{x:s}}=t,i=n.dataIdMap.get(s.dataId).id,o=n.makeOutput(s.shape,s.dtype),a=n.dataIdMap.get(o.dataId).id;return 0===r.D5U.NA(o.shape)||e(i,a),o}}}const iw=sw(r.SYM);function ow(t,e,n){let s;return{kernelName:t,backendName:"wasm",setupFunc:function(e){s=e.wasm.cwrap(t,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(i){const{backend:o,inputs:a}=i,{a:u,b:c}=a,l=o.dataIdMap.get(u.dataId).id,h=o.dataIdMap.get(c.dataId).id,d=null!=n?n:u.dtype,f=r.Wap.assertAndGetBroadcastShape(u.shape,c.shape),p=o.makeOutput(f,d);if(0===r.D5U.NA(f))return p;const m=new Uint8Array(new Int32Array(u.shape).buffer),b=new Uint8Array(new Int32Array(c.shape).buffer),y=o.dataIdMap.get(p.dataId).id,g=()=>s(l,m,u.shape.length,h,b,c.shape.length,tw[u.dtype],y);if(e&&"float32"===u.dtype)return g(),p;const x=r.Wap.getBroadcastDims(u.shape,f),w=r.Wap.getBroadcastDims(c.shape,f),v=x.every(((t,e)=>t===e)),k=w.every(((t,e)=>t===e));if(v&&k)return g(),p;throw new Error(`Broadcasting along outer dims is not yet supported for ${u.dtype} ${t}.`)}}}const aw=ow(r.mm_,!0);let uw;const cw={kernelName:r.Xze,backendName:"wasm",setupFunc:function(t){uw=t.wasm.cwrap(r.Xze,null,["array","number","number","number"])},kernelFunc:function(t){const{inputs:e,backend:n}=t,s=n.makeOutput(e[0].shape,e[0].dtype);if(0===r.D5U.NA(s.shape))return s;const i=e.map((t=>n.dataIdMap.get(t.dataId).id)),o=new Uint8Array(new Int32Array(i).buffer),a=n.dataIdMap.get(s.dataId).id;return uw(o,i.length,tw[s.dtype],a),s}};function lw(t){const{inputs:{x:e},backend:n}=t,r=n.makeOutput(e.shape,e.dtype),s=n.typedArrayFromHeap(e);return n.typedArrayFromHeap(r).set(s),r}const hw={kernelName:r.iJz,backendName:"wasm",kernelFunc:lw};let dw;function fw(t){const{inputs:e,backend:n,attrs:r}=t,[s,i]=function(t,e){const n=[],r=[];for(let s=0;s<t.length;++s)1!==t[s]&&n.push(t[s]),1!==t[e[s]]&&r.push(e[s]);for(let t=0;t<r.length;++t){let e=-1;for(let n=0;n<r.length;++n)r[n]>=t&&(-1===e||r[e]>r[n])&&(e=n);r[e]=t}return[n,r]}(e.x.shape,r.perm);let o=!0;for(let t=0;t<i.length;t++)i[t]!==t&&(o=!1);const a=function(t,e){const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];return n}(e.x.shape,r.perm),u={dataId:e.x.dataId,shape:s,dtype:e.x.dtype};if(o){const t=lw({inputs:e,backend:n});return t.shape=a,t}const c=n.makeOutput(a,u.dtype),l=n.dataIdMap.get(u.dataId).id,h=n.dataIdMap.get(c.dataId).id,d=new Uint8Array(new Int32Array(i).buffer),f=new Uint8Array(new Int32Array(u.shape).buffer);return dw(l,f,u.shape.length,tw[u.dtype],h,d,i.length),c}const pw={kernelName:r.G3Y,backendName:"wasm",kernelFunc:fw,setupFunc:function(t){dw=t.wasm.cwrap(r.G3Y,null,["number","array","number","number","number","array","number"])}};function mw(t,e,n){const s=t.shape,i=t.shape.length,o=r.D5U.EC(e,s);let a=o;const u=r.Wap.getAxesPermutation(a,i);let c=null,l=!1;if(null!=u){const e=new Array(i);for(let t=0;t<e.length;t++)e[t]=s[u[t]];a=r.Wap.getInnerMostAxes(a.length,i),c=fw({inputs:{x:t},attrs:{perm:u},backend:n});const o=n.dataIdMap.get(t.dataId).id;n.dataIdMap.get(c.dataId).id!==o&&(l=!0)}return{transposed:c,originalAxes:o,axes:a,inputWasTransposed:l}}let bw;const yw={kernelName:r.sJF,backendName:"wasm",kernelFunc:function(t){const{backend:e,inputs:n,attrs:s}=t,{axis:i}=s,{x:o}=n,a=e.dataIdMap.get(o.dataId).id;let u=a,c=o;const{transposed:l,axes:h,inputWasTransposed:d}=mw(o,i,e);if(d){const t=e.dataIdMap.get(l.dataId).id;t!==a&&(c=l,u=t)}const f=c.shape.slice(0,-1),p=e.makeOutput(f,"int32"),m=e.dataIdMap.get(p.dataId).id,b=r.D5U.NA(p.shape),y=c.shape[h[0]];return bw(u,tw[c.dtype],b,y,m),d&&e.disposeData(l.dataId),p},setupFunc:function(t){bw=t.wasm.cwrap(r.sJF,null,["number","number","number","number","number"])}};let gw;const xw={kernelName:r.JhU,backendName:"wasm",setupFunc:function(t){gw=t.wasm.cwrap(r.JhU,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,i=e.x,o=s.dataIdMap.get(i.dataId).id,{filterSize:a,strides:u,pad:c,dimRoundingMode:l}=n,h=r.Wap.computePool2DInfo(i.shape,a,u,1,c,l),d=h.filterHeight,f=h.filterWidth,p=h.padInfo.top,m=h.padInfo.right,b=h.padInfo.bottom,y=h.padInfo.left,g=h.strideHeight,x=h.strideWidth,w=h.inChannels;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);if(1!==h.dilationWidth||1!==h.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${h.dilationHeight}, ${h.dilationWidth}].`);const v=s.makeOutput(h.outShape,"float32"),k=s.dataIdMap.get(v.dataId).id;return gw(o,i.shape[0],i.shape[1],i.shape[2],d,f,p,m,b,y,g,x,w,k),v}};function ww(t){const{inputs:e,attrs:n}=t,{x:s}=e,{shape:i}=n,o=r.D5U.NA(s.shape),a=r.D5U.JZ(i,o);return r.D5U.hu(o===r.D5U.NA(a),(()=>`new shape: ${a}, old shape: ${s.shape}. New shape and old shape must have the same number of elements.`)),{dataId:s.dataId,shape:a,dtype:s.dtype}}const vw={kernelName:r.HZH,backendName:"wasm",kernelFunc:ww};let kw;const $w={kernelName:r.XLW,backendName:"wasm",setupFunc:function(t){kw=t.wasm.cwrap(r.XLW,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{a:i,b:o}=e,{transposeA:a,transposeB:u}=s;if("float32"!==i.dtype||"float32"!==o.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const c=i.shape.length,l=o.shape.length,h=a?i.shape[c-2]:i.shape[c-1],d=u?o.shape[l-1]:o.shape[l-2],f=a?i.shape[c-1]:i.shape[c-2],p=u?o.shape[l-2]:o.shape[l-1],m=i.shape.slice(0,-2),b=o.shape.slice(0,-2),y=r.D5U.NA(m),g=r.D5U.NA(b),x=y===g||1===y||1===g;r.D5U.hu(c>=2&&l>=2&&x,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${b}).`));const w=(y>g?i.shape.slice(0,-2):o.shape.slice(0,-2)).concat([f,p]);r.D5U.hu(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${i.shape} and ${o.shape} and transposeA=${a} and transposeB=${u} must match.`));const v=u?[g,p,d]:[g,d,p],k=ww({inputs:{x:i},backend:n,attrs:{shape:a?[y,h,f]:[y,f,h]}}),$=ww({inputs:{x:o},backend:n,attrs:{shape:v}}),N=n.dataIdMap.get(k.dataId).id,C=n.dataIdMap.get($.dataId).id,E=a?k.shape[2]:k.shape[1],S=u?$.shape[1]:$.shape[2],A=Math.max(y,g),R=n.makeOutput([A,E,S],k.dtype),T=n.dataIdMap.get(R.dataId).id,O=new Uint8Array(new Int32Array(k.shape).buffer),I=new Uint8Array(new Int32Array($.shape).buffer);return kw(N,O,k.shape.length,C,I,$.shape.length,a,u,T),R.shape=w,R}};function Nw(t){const{inputs:{x:e},attrs:{dtype:n},backend:r}=t,s=r.makeOutput(e.shape,n),i=r.typedArrayFromHeap(e);return r.typedArrayFromHeap(s).set(i),s}const Cw={kernelName:r.RFZ,backendName:"wasm",kernelFunc:Nw};let Ew;const Sw={kernelName:r.xnO,backendName:"wasm",setupFunc:function(t){Ew=t.wasm.cwrap(r.xnO,null,["number","number","number","number"])},kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{clipValueMin:i,clipValueMax:o}=r,a=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(s.shape,s.dtype),c=n.dataIdMap.get(u.dataId).id;return Ew(a,i,o,c),u}};function Aw(t){const{inputs:e,backend:n}=t,s=r.D5U.EC(t.attrs.axis,e[0].shape)[0];let i=r.Wap.computeOutShape(e.map((t=>t.shape)),s);const o=e.filter((t=>r.D5U.NA(t.shape)>0));if(1===o.length)return lw({inputs:{x:o[0]},backend:n});const a=n.makeOutput(i,e[0].dtype);if(0===r.D5U.NA(i))return a;const u=o.map((t=>t.shape));if(r.Wap.assertParamsConsistent(u,s),"string"===o[0].dtype){const t=o.map((t=>{const e=r.D5U.NA(t.shape.slice(s));return ww({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})})),u=t.map((t=>({vals:n.readSync(t.dataId),shape:t.shape})));i=r.Wap.computeOutShape(t.map((t=>t.shape)),1);const c=1===t[0].shape[0],l=function(t,e,n,s){const i=r.D5U.rQ(n,r.D5U.NA(e));if(s&&"string"!==n){let e=0;t.forEach((t=>{const n=r.D5U.NA(t.shape);i.set(t.vals,e),e+=n}))}else{let s=0;t.forEach((t=>{const o="string"===n?r.Wap.fromUint8ToStringArray(t.vals):t.vals;let a=0;for(let n=0;n<t.shape[0];++n){const r=n*e[1]+s;for(let e=0;e<t.shape[1];++e)i[r+e]=o[a++]}s+=t.shape[1]}))}return i}(u,i,e[0].dtype,c),h=r.Wap.computeOutShape(o.map((t=>t.shape)),s);a.shape=h;return n.dataIdMap.get(a.dataId).stringBytes=r.Wap.fromStringArrayToUint8(l),a}const c=r.D5U.NA(o[0].shape.slice(0,s));let l=0;const h=o.map((t=>{const e=r.D5U.NA(t.shape.slice(s));return l+=e,e})),d=o.map((t=>n.typedArrayFromHeap(t))),f=n.typedArrayFromHeap(a);for(let t=0;t<c;t++){let e=t*l;for(let n=0;n<d.length;n++){const r=h[n],s=t*r,i=d[n].subarray(s,s+r);f.set(i,e),e+=r}}return a}const Rw={kernelName:r.Eh3,backendName:"wasm",kernelFunc:Aw};let Tw;const Ow={kernelName:r.mhS,backendName:"wasm",setupFunc:function(t){Tw=t.wasm.cwrap(r.mhS,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{x:i,filter:o}=e,a=s.dataIdMap.get(i.dataId).id,u=s.dataIdMap.get(o.dataId).id,{strides:c,dilations:l,pad:h,dimRoundingMode:d,dataFormat:f}=n,p=r.Wap.convertConv2DDataFormat(f),m=r.Wap.computeConv2DInfo(i.shape,o.shape,c,l,h,d,!1,p),b=m.filterHeight,y=m.filterWidth,g=m.padInfo.top,x=m.padInfo.right,w=m.padInfo.bottom,v=m.padInfo.left,k=m.dilationHeight,$=m.dilationWidth,N=m.strideHeight,C=m.strideWidth,E=m.inChannels,S=m.outChannels,A="SAME"===m.padInfo.type?1:0;if("channelsLast"!==m.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${m.dataFormat}'. Please use 'channelsLast'.`);const R=s.makeOutput(m.outShape,"float32"),T=s.dataIdMap.get(R.dataId).id;return Tw(a,i.shape[0],i.shape[1],i.shape[2],u,b,y,g,x,w,v,A,k,$,N,C,E,S,T),R}};let Iw;const Fw={kernelName:r.wm,backendName:"wasm",setupFunc:function(t){Iw=t.wasm.cwrap(r.wm,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:s}=t,{dy:i,filter:o}=n,{strides:a,pad:u,dataFormat:c,dimRoundingMode:l,inputShape:h}=s,d=r.Wap.convertConv2DDataFormat(c),f=r.Wap.computeConv2DInfo(h,o.shape,a,1,u,l,!1,d),{batchSize:p,filterHeight:m,filterWidth:b,inChannels:y,inHeight:g,inWidth:x,outChannels:w,outHeight:v,outWidth:k,strideHeight:$,strideWidth:N}=f,C=m-1-f.padInfo.top,E=b-1-f.padInfo.left,S="channelsLast"===f.dataFormat,A=r.D5U.e3(f.inShape),R=r.D5U.e3(i.shape),[T,O,I]=r.D5U.e3(o.shape),F=A[0],_=S?A[1]:A[2],M=S?A[2]:1,D=S?1:A[1],L=R[0],P=S?R[1]:R[2],V=S?R[2]:1,z=S?1:R[1],B=e.makeOutput(f.inShape,"float32"),W=e.dataIdMap.get(B.dataId).id,U=e.dataIdMap.get(i.dataId).id,G=e.dataIdMap.get(o.dataId).id;return Iw(U,G,p,m,b,g,x,y,v,k,w,$,N,C,E,T,O,I,F,_,M,D,L,P,V,z,W),B}},_w=sw(r.mc4);var Mw;let Dw;!function(t){t[t.bilinear=0]="bilinear",t[t.nearest=1]="nearest"}(Mw||(Mw={}));const Lw={kernelName:r.VcC,backendName:"wasm",setupFunc:function(t){Dw=t.wasm.cwrap(r.VcC,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:r}=t,{method:s,extrapolationValue:i,cropSize:o}=r,{image:a,boxes:u,boxInd:c}=n,l=u.shape[0],[h,d]=o,f=[l,h,d,a.shape[3]];let p,m=e.dataIdMap.get(a.dataId);"float32"!==a.dtype&&(p=Nw({backend:e,inputs:{x:a},attrs:{dtype:"float32"}}),m=e.dataIdMap.get(p.dataId));const b=m.id,y=e.dataIdMap.get(u.dataId).id,g=e.dataIdMap.get(c.dataId).id,x=e.makeOutput(f,"float32"),w=e.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(a.shape).buffer);return Dw(b,y,g,l,v,h,d,Mw[s],i,w),null!=p&&e.disposeData(p.dataId),x}};let Pw;const Vw={kernelName:r.iHb,backendName:"wasm",setupFunc:function(t){Pw=t.wasm.cwrap(r.iHb,null,["number","number","number","number","number","number"])},kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{axis:o,exclusive:a,reverse:u}=s,c=i.shape.length;r.D5U.hu("float32"===i.dtype||"int32"===i.dtype,(()=>`cumsum does not support ${i.dtype} tensors in the WASM backend`));const l=r.Wap.getAxesPermutation([o],c);let h=i;null!==l&&(h=fw({inputs:{x:i},attrs:{perm:l},backend:n}));const d=r.Wap.getInnerMostAxes(1,c)[0];r.Wap.assertAxesAreInnerMostDims("cumsum",[d],c);const f=n.makeOutput(h.shape,h.dtype),p=h.shape[d],m=n.dataIdMap.get(h.dataId).id,b=n.dataIdMap.get(f.dataId).id;Pw(m,a?1:0,u?1:0,p,b,tw[i.dtype]);let y=f;if(null!==l){y=fw({inputs:{x:f},attrs:{perm:r.Wap.getUndoAxesPermutation(l)},backend:n}),n.disposeData(h.dataId),n.disposeData(f.dataId)}return y}};let zw;const Bw={kernelName:r.T0n,backendName:"wasm",setupFunc:function(t){zw=t.wasm.cwrap(r.T0n,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:s}=t,{x:i}=n,{blockSize:o,dataFormat:a}=s;r.D5U.hu(o>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${o}`));const u=i.shape[0],c="NHWC"===a?i.shape[1]:i.shape[2],l="NHWC"===a?i.shape[2]:i.shape[3],h="NHWC"===a?i.shape[3]:i.shape[1],d=c*o,f=l*o,p=h/(o*o),m="NHWC"===a?[u,d,f,p]:[u,p,d,f],b=e.makeOutput(m,"float32"),y=e.dataIdMap.get(i.dataId).id,g=new Uint8Array(new Int32Array(r.D5U.e3(i.shape)).buffer),x=new Uint8Array(new Int32Array(m).buffer),w=new Uint8Array(new Int32Array(r.D5U.e3(m)).buffer),v=e.dataIdMap.get(b.dataId).id;return zw(y,o,"NHWC"===a?1:0,g,i.shape.length-1,x,w,m.length,v),b}};let Ww;const Uw={kernelName:r.cie,backendName:"wasm",setupFunc:function(t){Ww=t.wasm.cwrap(r.cie,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{x:i,filter:o}=e,a=s.dataIdMap.get(i.dataId).id,u=s.dataIdMap.get(o.dataId).id,{strides:c,dilations:l,pad:h,dimRoundingMode:d}=n,f=null==l?[1,1]:l,p=r.Wap.computeConv2DInfo(i.shape,o.shape,c,f,h,d,!0),m=p.filterHeight,b=p.filterWidth,y=p.padInfo.top,g=p.padInfo.right,x=p.padInfo.bottom,w=p.padInfo.left,v=p.dilationHeight,k=p.dilationWidth,$=p.strideHeight,N=p.strideWidth,C=p.inChannels,E=p.outChannels,S="SAME"===p.padInfo.type?1:0;if("channelsLast"!==p.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);const A=s.makeOutput(p.outShape,"float32"),R=s.dataIdMap.get(A.dataId).id;return Ww(a,i.shape[0],i.shape[1],i.shape[2],u,m,b,y,g,x,w,S,v,k,$,N,C,E,R),A}},Gw=ow(r.hdR,!1,"bool"),jw=sw(r.NEP);function Hw(t){const{inputs:e,attrs:n,backend:s}=t,{input:i}=e,{dim:o}=n,a=i.shape.length,u=i.shape.slice();let c=o;return o<0&&(r.D5U.hu(-(a+1)<=o,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),c=a+o+1),u.splice(c,0,1),ww({inputs:{x:i},backend:s,attrs:{shape:u}})}const qw={kernelName:r.YFo,backendName:"wasm",kernelFunc:Hw};const Xw={kernelName:r.deh,backendName:"wasm",kernelFunc:function(t){const{attrs:{shape:e,value:n,dtype:r},backend:s}=t,i=s.makeOutput(e,r);return s.typedArrayFromHeap(i).fill(n),i}};let Jw;const Yw={kernelName:r.Uyb,backendName:"wasm",kernelFunc:function(t){const{inputs:e,backend:n}=t,{image:r}=e,s=n.makeOutput(r.shape,r.dtype),i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(s.dataId).id,[a,u,c,l]=r.shape;return Jw(i,a,u,c,l,o),s},setupFunc:function(t){Jw=t.wasm.cwrap(r.Uyb,null,["number","number","number","number","number","number"])}},Kw=sw(r.OR),Qw=ow(r.jeX,!1);let Zw;const tv={kernelName:r.sHE,backendName:"wasm",setupFunc:function(t){Zw=t.wasm.cwrap(r.sHE,null,["number","number","number","number","number","number","number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:s}=t,{varianceEpsilon:i}=s,{x:o,mean:a,variance:u,offset:c,scale:l}=n,h=e.dataIdMap.get(o.dataId).id,d=e.dataIdMap.get(a.dataId).id,f=e.dataIdMap.get(u.dataId).id,p=null!=c?e.dataIdMap.get(c.dataId).id:0,m=null!=l?e.dataIdMap.get(l.dataId).id:0,b=e.makeOutput(o.shape,o.dtype);if(0===r.D5U.NA(o.shape))return b;const y=e.dataIdMap.get(b.dataId).id;return Zw(h,d,f,p,m,i,y),b}};let ev;const nv={kernelName:r._V0,backendName:"wasm",setupFunc:function(t){ev=t.wasm.cwrap(r._V0,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{x:i,filter:o,bias:a,preluActivationWeights:u}=e,{strides:c,pad:l,dilations:h,dataFormat:d,dimRoundingMode:f,activation:p,leakyreluAlpha:m}=n,b=r.Wap.computeConv2DInfo(i.shape,o.shape,c,h,l,f),y=ew[p];if(null==y)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);const g=s.dataIdMap.get(i.dataId).id,x=s.dataIdMap.get(o.dataId).id,w=b.outChannels;let v=0;if(null!=a){const t=s.dataIdMap.get(a.dataId);if(1!==t.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${t.shape.length}.`);if(t.shape[0]!==w)throw new Error(`FusedConv2D bias shape (${t.shape}) does not match the number of output channels (${w})`);v=t.id}const k=b.filterHeight,$=b.filterWidth,N=b.padInfo.top,C=b.padInfo.right,E=b.padInfo.bottom,S=b.padInfo.left,A=b.dilationHeight,R=b.dilationWidth,T=b.strideHeight,O=b.strideWidth,I=b.inChannels,F="SAME"===b.padInfo.type?1:0,_=b.batchSize,M=b.inHeight,D=b.inWidth;if("NHWC"!==d)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const L=s.makeOutput(b.outShape,"float32"),P=s.dataIdMap.get(L.dataId).id,V=null==u?0:s.dataIdMap.get(u.dataId).id;return ev(g,_,M,D,x,k,$,v,N,C,E,S,F,A,R,T,O,I,w,y,V,m||0,P),L}};let rv;const sv={kernelName:r.luS,backendName:"wasm",setupFunc:function(t){rv=t.wasm.cwrap(r.luS,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{x:i,filter:o,bias:a,preluActivationWeights:u}=e,{strides:c,pad:l,dilations:h,dataFormat:d,dimRoundingMode:f,activation:p,leakyreluAlpha:m}=n,b=r.Wap.computeConv2DInfo(i.shape,o.shape,c,h,l,f,!0),y=ew[p];if(null==y)throw new Error(`${p} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const g=s.dataIdMap.get(i.dataId).id,x=s.dataIdMap.get(o.dataId).id,w=b.outChannels;let v=0;if(null!=a){const t=s.dataIdMap.get(a.dataId);if(1!==t.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${t.shape.length}.`);if(t.shape[0]!==w)throw new Error(`FusedDepthwiseConv2D bias shape (${t.shape}) does not match the number of output channels (${w})`);v=t.id}const k=b.filterHeight,$=b.filterWidth,N=b.padInfo.top,C=b.padInfo.right,E=b.padInfo.bottom,S=b.padInfo.left,A=b.dilationHeight,R=b.dilationWidth,T=b.strideHeight,O=b.strideWidth,I=b.inChannels,F="SAME"===b.padInfo.type?1:0,_=b.batchSize,M=b.inHeight,D=b.inWidth;if("NHWC"!==d)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const L=s.makeOutput(b.outShape,"float32"),P=s.dataIdMap.get(L.dataId).id,V=null==u?0:s.dataIdMap.get(u.dataId).id;return rv(g,_,M,D,x,k,$,v,N,C,E,S,F,A,R,T,O,I,w,y,V,m||0,P),L}};let iv;const ov={kernelName:r.q1x,backendName:"wasm",setupFunc:function(t){iv=t.wasm.cwrap(r.q1x,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(t){const{backend:e,inputs:n}=t,{params:s,indices:i}=n,[o,a,u,c]=r.DaI.V(s,i),l=e.makeOutput(o,s.dtype);if(0===a)return l;const h=i.shape,d=h[h.length-1],f=e.dataIdMap.get(s.dataId).id,p=e.dataIdMap.get(i.dataId).id,m=new Uint8Array(new Int32Array(c).buffer),b=e.dataIdMap.get(l.dataId).id;return iv(f,tw[s.dtype],p,a,d,u,m,b),l}};let av;const uv={kernelName:r.qi_,backendName:"wasm",setupFunc:function(t){av=t.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:s}=t,{x:i,indices:o}=n,{axis:a,batchDims:u}=s,c=r.D5U.EC(a,i.shape)[0],l=r.Wap.segment_util.collectGatherOpShapeInfo(i,o,c,u),h=ww({inputs:{x:i},attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]},backend:e}),d=r.D5U.NA(o.shape),f=ww({inputs:{x:o},attrs:{shape:[l.batchSize,d/l.batchSize]},backend:e}),p=[l.batchSize,l.outerSize,d/l.batchSize,l.sliceSize],m=e.makeOutput(p,i.dtype);if(0===r.D5U.NA(i.shape))return m;const b=h.shape.length-1,y=e.dataIdMap.get(h.dataId).id,g=e.dataIdMap.get(f.dataId).id,x=e.dataIdMap.get(m.dataId).id,w=new Uint8Array(new Int32Array(r.D5U.e3(h.shape)).buffer),v=new Uint8Array(new Int32Array(r.D5U.e3(p)).buffer);return av(y,tw[i.dtype],w,b,g,l.batchSize,v,x),m.shape=l.outputShape,m}},cv=ow(r.iZT,!1,"bool"),lv=ow(r.Acj,!1,"bool");let hv;const dv={kernelName:r.J$2,backendName:"wasm",setupFunc:function(t){hv=t.wasm.cwrap(r.J$2,null,["number","number","number"])},kernelFunc:function(t){const{inputs:{x:e},attrs:{alpha:n},backend:s}=t,i=s.dataIdMap.get(e.dataId).id,o=s.makeOutput(e.shape,e.dtype);if(0!==r.D5U.NA(e.shape)){const t=s.dataIdMap.get(o.dataId).id;hv(i,n,t)}return o}},fv=ow(r.vtC,!1,"bool"),pv=ow(r.CAk,!1,"bool"),mv=sw(r.ZbH),bv=ow(r.PYm,!1,"bool");let yv;const gv={kernelName:r.YoZ,backendName:"wasm",setupFunc:function(t){yv=t.wasm.cwrap(r.YoZ,null,["number, number, number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:s}=t,{reductionIndices:i,keepDims:o}=s,{x:a}=n;let u=e.dataIdMap.get(a.dataId).id,c=a;const{transposed:l,axes:h,originalAxes:d,inputWasTransposed:f}=mw(a,i,e);if(f){c=l,u=e.dataIdMap.get(l.dataId).id}const p=c.shape.length;r.Wap.assertAxesAreInnerMostDims("max",h,p);const[m,b]=r.Wap.computeOutAndReduceShapes(c.shape,h),y=r.D5U.NA(b),g=e.makeOutput(m,a.dtype);if(0!==r.D5U.NA(c.shape)){const t=e.dataIdMap.get(g.dataId).id;yv(u,y,t)}if(f&&e.disposeData(l.dataId),o){const t=r.Wap.expandShapeToKeepDim(g.shape,d);g.shape=t}return g}},xv=ow(r.BMI,!1);let wv;const vv={kernelName:r.mTV,backendName:"wasm",setupFunc:function(t){wv=t.wasm.cwrap(r.mTV,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,i=e.x,o=s.dataIdMap.get(i.dataId).id,{filterSize:a,strides:u,pad:c,dimRoundingMode:l}=n,h=r.Wap.computePool2DInfo(i.shape,a,u,1,c,l),d=h.filterHeight,f=h.filterWidth,p=h.padInfo.top,m=h.padInfo.right,b=h.padInfo.bottom,y=h.padInfo.left,g=h.dilationHeight,x=h.dilationWidth,w=h.strideHeight,v=h.strideWidth,k=h.inChannels,$=h.outChannels;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);const N=s.makeOutput(h.outShape,"float32"),C=s.dataIdMap.get(N.dataId).id;return wv(o,i.shape[0],i.shape[1],i.shape[2],d,f,p,m,b,y,g,x,w,v,k,$,C),N}};let kv;const $v={kernelName:r.q2K,backendName:"wasm",setupFunc:function(t){kv=t.wasm.cwrap(r.q2K,null,["number, number, number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:s}=t,{axis:i,keepDims:o}=s,{x:a}=n,u=e.dataIdMap.get(a.dataId).id;let c=u,l=a;const{transposed:h,axes:d,originalAxes:f,inputWasTransposed:p}=mw(a,i,e);let m=d;if(p){const t=e.dataIdMap.get(h.dataId).id;t!==u&&(l=h,c=t,m=r.Wap.getInnerMostAxes(m.length,l.shape.length))}r.Wap.assertAxesAreInnerMostDims("mean",m,l.shape.length);const[b,y]=r.Wap.computeOutAndReduceShapes(l.shape,m),g=r.D5U.NA(y);let x=l;"float32"!==l.dtype&&(x=Nw({backend:e,inputs:{x:l},attrs:{dtype:"float32"}}),c=e.dataIdMap.get(x.dataId).id);const w=e.makeOutput(b,"float32");if(0!==r.D5U.NA(l.shape)){const t=e.dataIdMap.get(w.dataId).id;kv(c,g,t)}if(p&&e.disposeData(h.dataId),o){const t=r.Wap.expandShapeToKeepDim(w.shape,f);w.shape=t}return"float32"!==l.dtype&&e.disposeData(x.dataId),w}};let Nv;const Cv={kernelName:r.c17,backendName:"wasm",setupFunc:function(t){Nv=t.wasm.cwrap(r.c17,null,["number, number, number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:s}=t,{axis:i,keepDims:o}=s,{x:a}=n,u=e.dataIdMap.get(a.dataId).id;let c=u,l=a;const{transposed:h,axes:d,originalAxes:f,inputWasTransposed:p}=mw(a,i,e);if(p){const t=e.dataIdMap.get(h.dataId).id;t!==u&&(l=h,c=t)}const m=l.shape.length;r.Wap.assertAxesAreInnerMostDims("min",d,m);const[b,y]=r.Wap.computeOutAndReduceShapes(l.shape,d),g=r.D5U.NA(y),x=e.makeOutput(b,l.dtype);if(0!==r.D5U.NA(l.shape)){const t=e.dataIdMap.get(x.dataId).id;Nv(c,g,t)}if(p&&e.disposeData(h.dataId),o){const t=r.Wap.expandShapeToKeepDim(x.shape,f);x.shape=t}return x}},Ev=ow(r.q8u,!1),Sv=ow(r.wYn,!0),Av=sw(r.kuV);function Rv(t,e){const n=new Int32Array(t.wasm.HEAPU8.buffer,e,4),r=n[0],s=n[1],i=n[2],o=n[3];return t.wasm._free(e),{pSelectedIndices:r,selectedSize:s,pSelectedScores:i,pValidOutputs:o}}let Tv;const Ov={kernelName:r.uv1,backendName:"wasm",setupFunc:function(t){Tv=t.wasm.cwrap(r.uv1,"number",["number","number","number","number","number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:r}=t,{iouThreshold:s,maxOutputSize:i,scoreThreshold:o}=r,{boxes:a,scores:u}=n,c=e.dataIdMap.get(a.dataId).id,l=e.dataIdMap.get(u.dataId).id,h=Tv(c,l,i,s,o),{pSelectedIndices:d,selectedSize:f,pSelectedScores:p,pValidOutputs:m}=Rv(e,h);return e.wasm._free(p),e.wasm._free(m),e.makeOutput([f],"int32",d)}};let Iv;const Fv={kernelName:r.cye,backendName:"wasm",setupFunc:function(t){Iv=t.wasm.cwrap(r.cye,"number",["number","number","number","number","number","bool"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:r}=t,{iouThreshold:s,maxOutputSize:i,scoreThreshold:o,padToMaxOutputSize:a}=r,{boxes:u,scores:c}=n,l=e.dataIdMap.get(u.dataId).id,h=e.dataIdMap.get(c.dataId).id,d=Iv(l,h,i,s,o,a),{pSelectedIndices:f,selectedSize:p,pSelectedScores:m,pValidOutputs:b}=Rv(e,d);return e.wasm._free(m),[e.makeOutput([p],"int32",f),e.makeOutput([],"int32",b)]}};let _v;const Mv={kernelName:r.W0H,backendName:"wasm",setupFunc:function(t){_v=t.wasm.cwrap(r.W0H,"number",["number","number","number","number","number","number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:r}=t,{iouThreshold:s,maxOutputSize:i,scoreThreshold:o,softNmsSigma:a}=r,{boxes:u,scores:c}=n,l=e.dataIdMap.get(u.dataId).id,h=e.dataIdMap.get(c.dataId).id,d=_v(l,h,i,s,o,a),{pSelectedIndices:f,selectedSize:p,pSelectedScores:m,pValidOutputs:b}=Rv(e,d);return e.wasm._free(b),[e.makeOutput([p],"int32",f),e.makeOutput([p],"float32",m)]}},Dv=ow(r.yQU,!1,"bool");let Lv;const Pv={kernelName:r.we_,backendName:"wasm",setupFunc:function(t){Lv=t.wasm.cwrap(r.we_,null,["number","number","number","number","number"])},kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{depth:i,onValue:o,offValue:a}=r,u=n.makeOutput([...s.shape,i],"int32"),c=n.dataIdMap.get(u.dataId).id,l=n.dataIdMap.get(s.dataId).id;return Lv(l,i,o,a,c),u}};const Vv={kernelName:r.qWM,backendName:"wasm",kernelFunc:function(t){const{inputs:{x:e},backend:n}=t,r=n.makeOutput(e.shape,e.dtype);return n.typedArrayFromHeap(r).fill(1),r}};const zv={kernelName:r.QiL,backendName:"wasm",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{axis:i}=s;if(1===e.length)return Hw({inputs:{input:e[0]},backend:n,attrs:{dim:i}});const o=e[0].shape,a=e[0].dtype;return e.forEach((t=>{r.D5U.k5(o,t.shape,"All tensors passed to stack must have matching shapes"),r.D5U.hu(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))})),Aw({inputs:e.map((t=>Hw({inputs:{input:t},backend:n,attrs:{dim:i}}))),backend:n,attrs:{axis:i}})}};let Bv;const Wv={kernelName:r.lyA,backendName:"wasm",kernelFunc:function(t){const{inputs:{x:e},backend:n,attrs:{paddings:r,constantValue:s}}=t,i=r.map(((t,n)=>t[0]+e.shape[n]+t[1])),o=n.dataIdMap.get(e.dataId).id,a=n.makeOutput(i,e.dtype),u=n.dataIdMap.get(a.dataId).id,c=new Uint8Array(new Int32Array(e.shape).buffer),l=r.map((t=>t[0])),h=r.map((t=>t[1])),d=new Uint8Array(new Int32Array(l).buffer),f=new Uint8Array(new Int32Array(h).buffer);return Bv(o,c,e.shape.length,tw[e.dtype],d,f,s,u),a},setupFunc:function(t){Bv=t.wasm.cwrap(r.lyA,null,["number","array","number","number","array","array","number","number"])}},Uv=ow(r.pe_,!1);let Gv;const jv={kernelName:r.o0g,backendName:"wasm",setupFunc:function(t){Gv=t.wasm.cwrap(r.o0g,null,["number","number","number"])},kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(s.dataId).id,a=n.makeOutput(r.shape,"float32"),u=n.dataIdMap.get(a.dataId).id;return Gv(i,o,u),a}};let Hv;const qv={kernelName:r.DlI,backendName:"wasm",setupFunc:function(t){Hv=t.wasm.cwrap(r.DlI,null,["number","number","number","number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:s}=t,{axis:i,keepDims:o}=s,{x:a}=n,u=e.dataIdMap.get(a.dataId).id;let c=u,l=a;const{transposed:h,axes:d,originalAxes:f,inputWasTransposed:p}=mw(a,i,e);let m=d;if(p){const t=e.dataIdMap.get(h.dataId).id;t!==u&&(l=h,c=t,m=r.Wap.getInnerMostAxes(m.length,l.shape.length))}r.Wap.assertAxesAreInnerMostDims("prod",m,l.shape.length);const[b,y]=r.Wap.computeOutAndReduceShapes(l.shape,m),g=r.D5U.NA(y),x=e.makeOutput(b,l.dtype);if(0!==r.D5U.NA(l.shape)){const t=e.dataIdMap.get(x.dataId).id;Hv(c,g,tw[x.dtype],t)}if(p&&e.disposeData(h.dataId),o){const t=r.Wap.expandShapeToKeepDim(x.shape,f);x.shape=t}return x}};const Xv={kernelName:r.e6w,backendName:"wasm",kernelFunc:t=>{const{backend:e,attrs:n}=t,{start:s,stop:i,step:o,dtype:a}=n,u=function(t,e,n,s){if(t===e||t<e&&n<0||e<t&&n>1)return r.D5U.wT(0,s);const i=Math.abs(Math.ceil((e-t)/n)),o=r.D5U.wT(i,s);e<t&&1===n&&(n=-1),o[0]=t;for(let t=1;t<o.length;t++)o[t]=o[t-1]+n;return o}(s,i,o,a),c=e.makeOutput([u.length],a);return e.typedArrayFromHeap(c).set(u),c}},Jv=ow(r.oHH,!0),Yv=sw(r.qkr),Kv=sw(r.SbG);let Qv;const Zv={kernelName:r._Yw,backendName:"wasm",setupFunc:function(t){Qv=t.wasm.cwrap(r._Yw,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:s}=t,{images:i}=n,{alignCorners:o,halfPixelCenters:a,size:u}=s,[c,l]=u,[h,d,f,p]=i.shape,m=[h,c,l,p];let b,y=e.dataIdMap.get(i.dataId);"float32"!==y.dtype&&(b=Nw({backend:e,inputs:{x:i},attrs:{dtype:"float32"}}),y=e.dataIdMap.get(b.dataId));const g=y.id,x=e.makeOutput(m,"float32");if(0===r.D5U.NA(i.shape))return x;const w=e.dataIdMap.get(x.dataId).id;return Qv(g,h,d,f,p,c,l,o?1:0,a?1:0,w),null!=b&&e.disposeData(b.dataId),x}};let tk;const ek={kernelName:r.mKl,backendName:"wasm",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:i}=e,{dims:o}=s,a=r.D5U.EC(o,i.shape);if(0===i.shape.length)return lw({inputs:{x:i},backend:n});const u=n.makeOutput(i.shape,i.dtype),c=n.dataIdMap.get(i.dataId).id,l=n.dataIdMap.get(u.dataId).id,h=new Uint8Array(new Int32Array(a).buffer),d=new Uint8Array(new Int32Array(i.shape).buffer);return tk(c,h,a.length,d,i.shape.length,l),ww({inputs:{x:u},attrs:{shape:i.shape},backend:n})},setupFunc:function(t){tk=t.wasm.cwrap(r.mKl,null,["number","array","number","array","number","number"])}};let nk;const rk={kernelName:r.b9H,backendName:"wasm",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{image:i}=e,{radians:o,fillValue:a,center:u}=s,c=n.makeOutput(i.shape,i.dtype),l=n.dataIdMap.get(i.dataId).id,h=n.dataIdMap.get(c.dataId).id,[d,f,p,m]=i.shape,[b,y]=r.Wap.getImageCenter(u,f,p),g="number"==typeof a?[a,a,a,0===a?0:255]:[...a,255],x=new Uint8Array(new Int32Array(g).buffer);return nk(l,d,f,p,m,o,b,y,x,g.length,h),c},setupFunc:function(t){nk=t.wasm.cwrap(r.b9H,null,["number","number","number","number","number","number","number","number","array","number","number"])}},sk=sw(r.e07),ik=sw(r.bV0);let ok;const ak={kernelName:r.xQA,backendName:"wasm",setupFunc:function(t){ok=t.wasm.cwrap(r.xQA,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:s}=t,{indices:i,updates:o}=n,{shape:a}=s,u=e.makeOutput(a,o.dtype);if(0===r.D5U.NA(a))return u;const{sliceRank:c,numUpdates:l,sliceSize:h,strides:d,outputSize:f}=r.yV1.SU(o,i,a),p=e.dataIdMap.get(i.dataId).id,m=e.dataIdMap.get(o.dataId).id,b=new Uint8Array(new Int32Array(d).buffer),y=e.dataIdMap.get(u.dataId).id;return ok(p,m,tw[o.dtype],c,l,h,b,f,y),u}};let uk;const ck={kernelName:r.PhF,backendName:"wasm",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:s,t:i,e:o}=e,a=n.dataIdMap.get(s.dataId).id,u=n.dataIdMap.get(i.dataId).id,c=n.dataIdMap.get(o.dataId).id,l=n.makeOutput(i.shape,i.dtype),h=n.dataIdMap.get(l.dataId).id,d=s.shape.length,f=i.shape.length,p=0===d||d>1||1===f?1:r.D5U.NA(i.shape.slice(1));return uk(a,u,c,p,h),l},setupFunc:function(t){uk=t.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}};let lk;const hk={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(t){lk=t.wasm.cwrap(r.a5O,null,["number","number"])},kernelFunc:function(t){const{backend:e,inputs:{x:n}}=t,s=e.dataIdMap.get(n.dataId).id,i=e.makeOutput(n.shape,n.dtype),o=e.dataIdMap.get(i.dataId).id;return 0===r.D5U.NA(i.shape)||lk(s,o),i}},dk=sw(r.RQH);function fk(t,e,n,s,i){const o=r.kuN.isSliceContinous(s,e,n),a=r.D5U.NA(n),u=r.D5U.e3(s);if(o){const n=r.kuN.computeFlatOffset(e,u);return"string"===i?t.slice(n,n+a):t.subarray(n,n+a)}const c="string"===i?r.Wap.fromUint8ToStringArray(t):t,l=(0,r.f3b)(s,i,c),h=(0,r.f3b)(n,i);for(let t=0;t<h.size;++t){const n=h.indexToLoc(t),r=n.map(((t,n)=>t+e[n]));h.set(l.get(...r),...n)}return"string"===i?r.Wap.fromStringArrayToUint8(h.values):h.values}r.p2w;function pk(t){const{inputs:{x:e},attrs:{begin:n,size:s},backend:i}=t,[o,a]=r.kuN.parseSliceParams(e,n,s),u=r.kuN.isSliceContinous(e.shape,o,a),c=i.readSync(e.dataId),l=i.makeOutput(a,e.dtype),h=r.D5U.e3(e.shape),d=i.dataIdMap.get(l.dataId);if(u){const t=r.kuN.computeFlatOffset(o,h);if("string"===e.dtype)d.stringBytes=c.slice(t,t+r.D5U.NA(a));else{i.typedArrayFromHeap(l).set(c.subarray(t,t+r.D5U.NA(a)))}return l}if("string"===e.dtype){const t=fk(c,o,a,e.shape,e.dtype);return d.stringBytes=t,l}const f=i.typedArrayFromHeap(l),p=e.shape.length;if(2===p)!function(t,e,n,r,s){let i=0;const o=r[0],a=r[1],u=o+s[0];for(let r=o;r<u;r++){const o=r*e+a;n.set(t.subarray(o,o+s[1]),i),i+=s[1]}}(c,h[0],f,o,a);else if(3===p)!function(t,e,n,r,s,i){let o=0;const a=s[0],u=s[1],c=s[2],l=a+i[0],h=u+i[1];for(let s=a;s<l;s++)for(let a=u;a<h;a++){const u=s*e+a*n+c;r.set(t.subarray(u,u+i[2]),o),o+=i[2]}}(c,h[0],h[1],f,o,a);else if(4===p)!function(t,e,n,r,s,i,o){let a=0;const u=i[0],c=i[1],l=i[2],h=u+o[0],d=c+o[1],f=l+o[2],p=i[3];for(let i=u;i<h;i++)for(let u=c;u<d;u++)for(let c=l;c<f;c++){const l=i*e+u*n+c*r+p;s.set(t.subarray(l,l+o[3]),a),a+=o[3]}}(c,h[0],h[1],h[2],f,o,a);else{const t=fk(c,o,a,e.shape,e.dtype);f.set(t)}return l}let mk;let bk;let yk;let gk;let xk;let wk;const vk=[iw,aw,cw,yw,xw,$w,Cw,Sw,Rw,Ow,Fw,_w,Lw,Vw,Bw,Uw,Gw,jw,qw,Xw,Yw,Kw,Qw,rw,tv,nv,sv,ov,uv,cv,lv,hw,dv,fv,pv,mv,bv,gv,xv,vv,$v,Cv,Ev,Sv,Av,Ov,Fv,Mv,Dv,Pv,Vv,zv,Wv,Uv,jv,qv,Xv,Jv,Yv,Kv,vw,Zv,ek,rk,ik,sk,ak,ck,hk,dk,{kernelName:r.p2w,backendName:"wasm",kernelFunc:pk},{kernelName:r.Gcp,backendName:"wasm",setupFunc:function(t){mk=t.wasm.cwrap(r.Gcp,null,["number","number","number","number"])},kernelFunc:function(t){const{backend:e,inputs:{logits:n},attrs:{dim:s}}=t,i=e.dataIdMap.get(n.dataId).id,o=e.makeOutput(n.shape,n.dtype),a=e.dataIdMap.get(o.dataId).id,u=n.shape[s],c=r.D5U.NA(n.shape)/u;return 0===r.D5U.NA(o.shape)||mk(i,a,u,c),o}},{kernelName:r.L8s,backendName:"wasm",kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{x:i}=e,{numOrSizeSplits:o,axis:a}=n,u=r.D5U.EC(a,i.shape)[0],c=r.Wap.prepareSplitSize(i,o,u),l=new Array(i.shape.length).fill(0),h=i.shape.slice();return c.map((t=>{const e=[...h];e[u]=t;const n=pk({inputs:{x:i},attrs:{begin:l,size:e},backend:s});return l[u]+=t,n}))}},sw(r.FKq),sw(r.bK0),ow(r._tC,!0),{kernelName:r.h8e,backendName:"wasm",setupFunc:function(t){bk=t.wasm.cwrap(r.h8e,null,["number","number","number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:r}=t,{alpha:s}=r,{x:i}=n,o=e.dataIdMap.get(i.dataId).id,a=e.makeOutput(i.shape,i.dtype),u=e.dataIdMap.get(a.dataId).id;return bk(o,s,u),a}},{kernelName:r.jQk,backendName:"wasm",setupFunc:function(t){yk=t.wasm.cwrap(r.jQk,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:s}=t,{x:i}=n;let{begin:o,end:a,strides:u}=s;null==u&&(u=new Array(o.length));const{beginMask:c,endMask:l,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:f}=s,p=r.Wap.slice_util.maskToAxes(h);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==h&&0!==d)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==h&&0!==f)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const m=i.shape.length-o.length,b=r.Wap.slice_util.maskToAxes(d),y=i.shape.slice();b.forEach((t=>{o[t]=0,a[t]=1,y.splice(t,0,1)}));const g=ww({inputs:{x:i},attrs:{shape:y},backend:e}),{begin:x,end:w,strides:v}=r.Wap.slice_util.getNormalizedAxes(g.shape,p,m,o,a,u,c,l,h);o=x,a=w,u=v;const k=r.Wap.slice_util.maskToAxes(f);k.forEach((t=>{a[t]=o[t]+1,u[t]=1}));const $=r.Wap.slice_util.computeOutShape(o,a,u),N=$.filter(((t,e)=>-1===k.indexOf(e)));if(u.every((t=>1===t))){return ww({inputs:{x:pk({inputs:{x:i},attrs:{begin:o,size:$},backend:e})},attrs:{shape:N},backend:e})}const C=e.makeOutput(N,"float32");if(!N.some((t=>0===t))){const t=e.dataIdMap.get(g.dataId).id,n=new Uint8Array(new Int32Array(r.D5U.e3(g.shape)).buffer),s=new Uint8Array(new Int32Array(o).buffer),i=new Uint8Array(new Int32Array(a).buffer),c=new Uint8Array(new Int32Array(u).buffer),l=new Uint8Array(new Int32Array(N).buffer),h=new Uint8Array(new Int32Array(r.D5U.e3(N)).buffer),d=e.dataIdMap.get(C.dataId).id;yk(t,n,g.shape.length,s,i,c,l,h,N.length,d)}return ww({inputs:{x:C},attrs:{shape:N},backend:e})}},ow(r.Tr8,!0),{kernelName:r.GBy,backendName:"wasm",setupFunc:function(t){gk=t.wasm.cwrap(r.GBy,null,["number, number, number"])},kernelFunc:function(t){const{backend:e,inputs:n,attrs:s}=t,{axis:i,keepDims:o}=s,{x:a}=n,u=e.dataIdMap.get(a.dataId).id;let c=u,l=a;const{transposed:h,axes:d,originalAxes:f,inputWasTransposed:p}=mw(a,i,e);let m=d;if(p){const t=e.dataIdMap.get(h.dataId).id;t!==u&&(l=h,c=t,m=r.Wap.getInnerMostAxes(m.length,l.shape.length))}r.Wap.assertAxesAreInnerMostDims("sum",m,l.shape.length);const[b,y]=r.Wap.computeOutAndReduceShapes(l.shape,m),g=r.D5U.NA(y),x=e.makeOutput(b,l.dtype);if(0!==r.D5U.NA(l.shape)){const t=e.dataIdMap.get(x.dataId).id;gk(c,g,t)}if(p&&e.disposeData(h.dataId),o){const t=r.Wap.expandShapeToKeepDim(x.shape,f);x.shape=t}return x}},sw(r.MIZ),{kernelName:r.n9L,backendName:"wasm",setupFunc:function(t){xk=t.wasm.cwrap(r.n9L,null,["number","array","number","array","number","number"])},kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,i=n.dataIdMap.get(s.dataId).id,{reps:o}=r,a=new Array(s.shape.length);for(let t=0;t<a.length;t++)a[t]=s.shape[t]*o[t];const u=new Uint8Array(new Int32Array(s.shape).buffer),c=new Uint8Array(new Int32Array(a).buffer),l=n.makeOutput(a,s.dtype),h=n.dataIdMap.get(l.dataId).id;return xk(i,u,s.shape.length,c,a.length,tw[l.dtype],h),l}},{kernelName:r.cWu,backendName:"wasm",setupFunc:function(t){wk=t.wasm.cwrap(r.cWu,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{k:s,sorted:i}=n,o=e.dataIdMap.get(r.dataId).id,a=new Uint8Array(new Int32Array(r.shape).buffer),u=r.shape.slice();u[u.length-1]=s;const c=e.makeOutput(u,r.dtype),l=e.dataIdMap.get(c.dataId).id,h=e.makeOutput(u,"int32"),d=e.dataIdMap.get(h.dataId).id;return wk(o,a,r.shape.length,tw[r.dtype],s,i,l,d),[c,h]}},pw,{kernelName:r.ToN,backendName:"wasm",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:i}=r;i<0&&(i+=s.shape.length);const o=s.shape[i],a=s.shape.length,u=new Array(a-1);let c=0;for(let t=0;t<a;t++)t!==i&&(u[c++]=s.shape[t]);const l=new Array(o),h=new Array(a).fill(0),d=s.shape.slice();d[i]=1;for(let t=0;t<l.length;t++)h[i]=t,l[t]=pk({inputs:{x:s},attrs:{begin:h,size:d},backend:n});return l.map((({dataId:t,dtype:e})=>({dataId:t,dtype:e,shape:u})))}},{kernelName:r.RuY,backendName:"wasm",kernelFunc:function(t){const{inputs:{x:e},backend:n}=t,r=n.makeOutput(e.shape,e.dtype);return n.typedArrayFromHeap(r).fill(0),r}}];for(const t of vk)(0,r.wCN)(t);const kk=(0,r.OBj)();kk.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),kk.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(kk.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(t){return!1}}));var $k=n(8349),Nk=n.n($k);var Ck=n(7234),Ek=n.n(Ck);class Sk extends r.Zuw{constructor(t){super(),this.wasm=t,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new r.JLz(this,(0,r.SRH)())}write(t,e,n){const r={};return this.move(r,t,e,n),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(t){const e=r.D5U.zO();t();return{kernelMs:r.D5U.zO()-e}}move(t,e,n,s){const i=this.dataIdNextNumber++;if("string"===s){const r=e;return void this.dataIdMap.set(t,{id:i,stringBytes:r,shape:n,dtype:s,memoryOffset:null})}const o=r.D5U.NA(n),a=o*r.D5U.bT(s),u=this.wasm._malloc(a);this.dataIdMap.set(t,{id:i,memoryOffset:u,shape:n,dtype:s}),this.wasm.tfjs.registerTensor(i,o,u),null!=e&&this.wasm.HEAPU8.set(new Uint8Array(e.buffer,e.byteOffset,a),u)}async read(t){return this.readSync(t)}readSync(t){const{memoryOffset:e,dtype:n,shape:s,stringBytes:i}=this.dataIdMap.get(t);if("string"===n)return i;return function(t,e){switch(e){case"float32":return new Float32Array(t);case"int32":return new Int32Array(t);case"bool":return new Uint8Array(t);default:throw new Error(`Unknown dtype ${e}`)}}(this.wasm.HEAPU8.slice(e,e+r.D5U.NA(s)*r.D5U.bT(n)).buffer,n)}disposeData(t){const e=this.dataIdMap.get(t);this.wasm._free(e.memoryOffset),this.wasm.tfjs.disposeData(e.id),this.dataIdMap.delete(t)}floatPrecision(){return 32}getMemoryOffset(t){return this.dataIdMap.get(t).memoryOffset}dispose(){this.wasm.tfjs.dispose(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(t,e,n){let s;if(null==n)s=this.write(null,t,e);else{s={};const i=this.dataIdNextNumber++;this.dataIdMap.set(s,{id:i,memoryOffset:n,shape:t,dtype:e});const o=r.D5U.NA(t);this.wasm.tfjs.registerTensor(i,o,n)}return{dataId:s,shape:t,dtype:e}}typedArrayFromHeap({shape:t,dtype:e,dataId:n}){const s=this.wasm.HEAPU8.buffer,{memoryOffset:i}=this.dataIdMap.get(n),o=r.D5U.NA(t);switch(e){case"float32":return new Float32Array(s,i,o);case"int32":return new Int32Array(s,i,o);case"bool":return new Uint8Array(s,i,o);default:throw new Error(`Unknown dtype ${e}`)}}}function Ak(t,e,n){if(null!=Ok)return Ok;let r="tfjs-backend-wasm.wasm";return t&&e?r="tfjs-backend-wasm-threaded-simd.wasm":t&&(r="tfjs-backend-wasm-simd.wasm"),null!=Fk&&null!=Fk[r]?Fk[r]:n+r}async function Rk(){const[t,e]=await Promise.all([(0,r.OBj)().getAsync("WASM_HAS_SIMD_SUPPORT"),(0,r.OBj)().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,s)=>{const i={};var o;let a;i.locateFile=(n,r)=>{if(n.endsWith(".worker.js")){const t=new Blob(['var threadInfoStruct=0;var selfThreadId=0;var parentThreadId=0;var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:selfThreadId})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["DYNAMIC_BASE"]=e.data.DYNAMIC_BASE;Module["DYNAMICTOP_PTR"]=e.data.DYNAMICTOP_PTR;Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}Module=WasmBackendModuleThreadedSimd(Module);postMessage({"cmd":"loaded"})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;threadInfoStruct=e.data.threadInfoStruct;Module["__register_pthread_ptr"](threadInfoStruct,0,0);selfThreadId=e.data.selfThreadId;parentThreadId=e.data.parentThreadId;var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["dynCall_ii"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){Atomics.store(Module["HEAPU32"],threadInfoStruct+4>>2,ex instanceof Module["ExitStatus"]?ex.status:-2);Atomics.store(Module["HEAPU32"],threadInfoStruct+0>>2,1);Module["_emscripten_futex_wake"](threadInfoStruct+0,2147483647);if(!(ex instanceof Module["ExitStatus"]))throw ex}}}else if(e.data.cmd==="cancel"){if(threadInfoStruct){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(threadInfoStruct){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?Ak(t,e,null!=Ik?Ik:r):r+n},Mk&&(i.instantiateWasm=(o=Ak(t,e,null!=Ik?Ik:""),(t,e)=>(r.D5U.he(o,{credentials:"same-origin"}).then((n=>{n.ok||t.env.a(`failed to load wasm binary file at '${o}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,t).then((t=>{e(t.instance)}))}))})),{}))),e&&t&&null==Ok?(a=Nk()(i),a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+Nk().toString()],{type:"text/javascript"})):a=Ek()(i);a.tfjs={init:a.cwrap("init",null,[]),registerTensor:a.cwrap("register_tensor",null,["number","number","number"]),disposeData:a.cwrap("dispose_data",null,["number"]),dispose:a.cwrap("dispose",null,[])};let u=!1;a.onRuntimeInitialized=()=>{u=!0,_k=!1,n({wasm:a})},a.onAbort=()=>{if(u)return;if(_k)return;_k=!0;s({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})}}))}const Tk=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"];let Ok=null,Ik=null,Fk={},_k=!1,Mk=!1;function Dk(t,e=!1){if(_k)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof t)Ik=t;else{Fk=t;const e=Tk.filter((t=>null==Fk[t]));if(e.length>0)throw new Error(`There were no entries found for the following binaries: ${e.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}Mk=e}(0,r.jqO)("wasm",(async()=>{const{wasm:t}=await Rk();return new Sk(t)}),2),Dk({"tfjs-backend-wasm.wasm":"/wasm/tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm":"/wasm/tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm":"/wasm/tfjs-backend-wasm-simd.wasm"});const Lk=n(9817);Dk({"tfjs-backend-wasm.wasm":"/wasm/tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm":"/wasm/tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm":"/wasm/tfjs-backend-wasm-threaded-simd.wasm"});let Pk=new class{constructor(t={}){this.inited=!1,this.lock=!1,this.model=null,this.options={onDetected:null},this.options=e(this.options,t),this.setup()}async setup(){this.model=await function(t,e){return void 0===t&&(t=V.mediapipeFacemesh),void 0===e&&(e={}),o(this,void 0,void 0,(function(){return a(this,(function(n){if(t===V.mediapipeFacemesh)return[2,_(e)];throw new Error(t+" is not a valid package name.")}))}))}(V.mediapipeFacemesh),this.inited=!0}async observe(t){if(this.inited&&!this.lock){const e=await this.model.estimateFaces({input:t,predictIrises:!1});let n=[];for(let t=0;t<e.length;t++){const r=e[t].boundingBox.topLeft,s=e[t].boundingBox.bottomRight,i=[s[0]-r[0],s[1]-r[1]];let o={x:r[0],y:r[1],width:i[0],height:i[1],landMarks:e[t].scaledMesh,annotation:e[t].annotations};n.push(o)}"function"==typeof this.options.onDetected&&this.options.onDetected(n)}}}({onDetected:t=>{postMessage({type:"face",action:"faceDetected",data:t})}}),Vk=new class{constructor(t={}){this.inited=!1,this.lock=!1,this.model=null,this.options={detectTimer:300,onDetected:null},this.options=e(this.options,t),this.setup()}async observe(t){if(this.inited&&!this.lock){const e=!1,n=!1,r=!0,s=await this.model.estimateFaces(t,e,n,r);let i=[];for(let t=0;t<s.length;t++){const e=s[t].topLeft,n=s[t].bottomRight,r=[n[0]-e[0],n[1]-e[1]];let o={x:e[0],y:e[1],width:r[0],height:r[1],landMarks:[s[t].landmarks],annotation:null};i.push(o)}"function"==typeof this.options.onDetected&&this.options.onDetected(i)}}async setup(){"function"!=typeof OffscreenCanvas?(console.log("tinyfacedetector use CPU"),await r.CQI("wasm")):(console.log("tinyfacedetector use GPU"),await r.CQI("webgl")),this.model=await Lk.load(),this.inited=!0}}({onDetected:t=>{postMessage({type:"face",action:"tinyFaceDetected",data:t})}}),zk=new class{constructor(t={}){this.options={modelUrl:"/models/pass_uint8/model.json",modelClasses:{1:{name:"id_front",id:1,displayName:"ID Front"},2:{name:"id_back",id:2,displayName:"ID Back"},3:{name:"pass_main",id:3,displayName:"Passport Main"},4:{name:"pass_full",id:4,displayName:"Passport Full"},5:{name:"driver_front",id:4,displayName:"Driver license"}},maxNumBoxes:20,minScore:.95},this.options=e(this.options,t),this.model=null,this.modelLoaded=!1}async load(t){"function"!=typeof OffscreenCanvas?(console.log("scanner use CPU"),await r.CQI("cpu")):console.log("scanner use GPU"),this.model=await s.YL(this.options.modelUrl);let e=r.lls([1,320,320,3]).toInt();await this.model.executeAsync(e);e.dispose(),this.modelLoaded=!0;let n=navigator.platform||null;null!=n&&n.includes("Win")&&await r.CQI("wasm"),"function"==typeof t&&t()}async detect(t,e){let n=null;this._callback=e,this.modelLoaded||"function"==typeof e&&e(n);let s=navigator.platform||null;"webgl"===r.N_N()&&null!=s&&s.includes("Win")&&(r.ViN.set("WEBGL_PACK_DEPTHWISECONV",!1),r.ViN.set("WEBGL_CONV_IM2COL",!1));let i=r.Xhn.n(t).expandDims(),o=i.shape[1],a=i.shape[2],u=await this.model.executeAsync(i);if(i.dispose(),8===u.length){let t=this.findOutputIndex(u,[1,1917,5]),e=this.findOutputIndex(u,[1,1917,4]),s=u[t].dataSync(),i=u[e].dataSync();r.B90(u);let c=this.calculateMaxScores(s,u[t].shape[1],u[t].shape[2]),l=c[0],h=c[1],d=r.N_N();"webgl"===r.N_N()&&r.CQI("cpu");let f=r.lub((()=>{let t=r.odF(i,[u[e].shape[1],u[e].shape[2]]),n=this.options.minScore,s=r.BHj.nonMaxSuppression(t,l,this.options.maxNumBoxes,n,n);return t.dispose(),s})),p=f.dataSync();f.dispose(),d!==r.N_N()&&r.CQI(d),n=this.buildDetectedObjects(a,o,i,l,p,h)}else r.B90(u),u=null;"function"==typeof e&&e(n)}findOutputIndex(t,e){for(let n in t)if(JSON.stringify(t[n].shape)===JSON.stringify(e))return n}buildDetectedObjects(t,e,n,r,s,i){let o=s.length,a=[];for(let u=0;u<o;u++){let o=[];for(let t=0;t<4;t++)o[t]=n[4*s[u]+t];let c=o[0]*e,l=o[1]*t,h=o[2]*e,d=o[3]*t;o[0]=l,o[1]=c,o[2]=d-l,o[3]=h-c,a.push({bbox:o,class:this.options.modelClasses[i[s[u]]].name,label:this.options.modelClasses[i[s[u]]].displayName,score:r[s[u]]})}return a}calculateMaxScores(t,e,n){let r=[],s=[];for(let i=0;i<e;i++){let e=Number.MIN_VALUE,o=-1;for(let r=0;r<n;r++)t[i*n+r]>e&&(e=t[i*n+r],o=r);r[i]=e,s[i]=o}return[r,s]}};onmessage=function(t){let e=t.data;"face"===e.type?"getFace"===e.action?Pk.observe(e.data):"getTinyFace"===e.action?Vk.observe(e.data):e.action:"scan"===e.type&&("getCard"===e.action?zk.detect(e.data,(t=>{postMessage({type:"scan",action:null,data:t})})):"loadCard"===e.action&&zk.load((()=>{postMessage({type:"scanLoaded",action:null,data:!0})})))}})()})();